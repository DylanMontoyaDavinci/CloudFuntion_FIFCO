##CONSULTA A LA BASE DE DATOS
  -----------------------------admin-------------------------------------------------
  -- Cara incremental para la tabla admin.fill_form
  INSERT INTO admin.fill_form (id, id_request, custom, fillFormlog)
  SELECT f.id, f.id_request, SAFE.PARSE_JSON(f.custom) AS custom, SAFE.PARSE_JSON(f.log) AS fillFormlog
  FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo", "SELECT * FROM admin.fill_form;") AS f
  WHERE f.id > IFNULL((SELECT MAX(id) FROM admin.fill_form), 0);
CREATE OR REPLACE TABLE `ribgo-desarrollo.admin.fill_form2` AS
  SELECT f.id, f.id_request, SAFE.PARSE_JSON(f.custom) AS custom,
  SAFE.PARSE_JSON(CONCAT("{",SAFE.SUBSTR(custom,STRPOS(custom,'"RESUMEN_ATRIBUCION":')-1,STRPOS(custom, 
  '"INFORMACION_GENERAL_I":')-2 - STRPOS(custom,'"RESUMEN_ATRIBUCION":') +1 ),"}")) as custom_resumen_atribucion,  SAFE. 
  PARSE_JSON(CONCAT("{",SAFE.SUBSTR(custom,STRPOS(custom,'"OPERACIONES":')-1,STRPOS(custom,'"OFICINA_RADICACION":')-2 - STRPOS(custom,'"OPERACIONES":') +1 ),"}")) as custom_operaciones,
  SAFE.PARSE_JSON(f.log) AS fillFormlog
  FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo", "SELECT * FROM admin.fill_form;") AS f;

 -- Cara incremental para la tabla admin.request
  CREATE OR REPLACE TABLE admin.request as
  SELECT 
    STRUCT(
      DATETIME_SUB(DATETIME(TIMESTAMP(JSON_VALUE(SAFE.PARSE_JSON(log), '$.createdAt'))),INTERVAL 5 HOUR) AS createdAt,
      DATETIME_SUB(DATETIME(TIMESTAMP(JSON_VALUE(SAFE.PARSE_JSON(log), '$.timeLastChange'))),INTERVAL 5 HOUR) AS timeLastChange
    ) AS requestLog,
    * EXCEPT(log)
  FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM admin.request;");

  -- Cara incremental para la tabla admin.stage
  CREATE OR REPLACE TABLE admin.stage as
  SELECT
    STRUCT(
      DATETIME_SUB(DATETIME(TIMESTAMP(JSON_VALUE(SAFE.PARSE_JSON(log), '$.createdAt'))),INTERVAL 5 HOUR) AS createdAt,
      DATETIME_SUB(DATETIME(TIMESTAMP(JSON_VALUE(SAFE.PARSE_JSON(log), '$.timeLastChange'))),INTERVAL 5 HOUR) AS timeLastChange

    ) AS stageLog,
    * EXCEPT(log)
  FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM admin.stage;");

  CREATE OR REPLACE TABLE admin.user as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM admin.user;");
  CREATE OR REPLACE TABLE admin.user_assignment as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM admin.user_assignment;");
  CREATE OR REPLACE TABLE admin.list_return_reason as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM admin.list_return_reason;");
  CREATE OR REPLACE TABLE admin.level as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM admin.level;");
  CREATE OR REPLACE TABLE admin.role_user as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM admin.role_user;");
  CREATE OR REPLACE TABLE admin.temporal_asignation as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM admin.temporal_asignation;");
  CREATE OR REPLACE TABLE admin.screen_r as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM admin.screen_r;");
  CREATE OR REPLACE TABLE admin.segment_status as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM admin.segment_status;");
  CREATE OR REPLACE TABLE admin.role_level as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM admin.role_level;");
  CREATE OR REPLACE TABLE admin.field_permit as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM admin.field_permit;");
  CREATE OR REPLACE TABLE admin.template_form as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM admin.template_form;");
  CREATE OR REPLACE TABLE admin.role as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM admin.role;");
  
  -----------------------------general-------------------------------------------------
  CREATE OR REPLACE TABLE general.pipe_rule as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM general.pipe_rule;");
  CREATE OR REPLACE TABLE general.list_param as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM general.list_param;");
  CREATE OR REPLACE TABLE general.pipe as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM general.pipe;");
  CREATE OR REPLACE TABLE general.segment as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM general.segment;");

  CREATE OR REPLACE TABLE general.person as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM general.person;");
  CREATE OR REPLACE TABLE general.position as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM general.position;");
  CREATE OR REPLACE TABLE general.dependence as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM general.dependence;");
  CREATE OR REPLACE TABLE general.status as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM general.status;");
  CREATE OR REPLACE TABLE general.track_decision as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM general.track_decision;");
  CREATE OR REPLACE TABLE general.decision as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM general.decision;");

  CREATE OR REPLACE TABLE general.image_login as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM general.image_login;");
  CREATE OR REPLACE TABLE general.information_record as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM general.information_record;");
  CREATE OR REPLACE TABLE general.rule_type_productor as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM general.rule_type_productor;");
  
  CREATE OR REPLACE TABLE general.list_type as
  SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM general.list_type;");
  #CREATE OR REPLACE TABLE general.people as
  #SELECT * FROM EXTERNAL_QUERY("ribgo-desarrollo.us.ribgo","SELECT * FROM general.people;");

##EXTRACCION DE CAMPOS DEL FORMULARIO
  ------------------------------------------------------fillForm------------------------------------------------------
  CREATE OR REPLACE TABLE `ribgo-desarrollo.fillForm.fillFormId` AS (
  SELECT
    id,
    id_request,
    JSON_VALUE(custom.NUMERO_EMPRESAS) AS NUMERO_EMPRESAS,
    JSON_VALUE(custom.MONTO_TOTAL_SOLICITADO) as MONTO_TOTAL_SOLICITADO,
    JSON_VALUE(custom.MONTO_TOTAL_VALOR_APROBADO) as MONTO_TOTAL_APROBADO,
    JSON_VALUE(custom.NOMBRE_GRUPO_FINANCIERO) as NOMBRE_GRUPO_FINANCIERO,
    JSON_VALUE(custom.CONFORMA_GRUPO_FINANCIERO) AS CONFORMA_GRUPO_FINANCIERO,
    JSON_VALUE(custom.ID_AGENTE_VENDEDOR) AS ID_AGENTE_VENDEDOR,
    JSON_VALUE(custom.REGIONAL) AS REGIONAL,
    JSON_VALUE(custom.SUCURSAL) AS SUCURSAL,
    STRUCT(
    JSON_VALUE(fillFormLog, '$.createdAt') as createdAt,
    JSON_VALUE(fillFormLog, '$.createdBy') as createdBy,
    JSON_VALUE(fillFormLog, '$.lastChangeBy') as lastChangeBy,
    JSON_VALUE(fillFormLog, '$.timeLastChange') as timeLastChange
    ) AS fillFormLog
  FROM
    `admin.fill_form` ORder BY id
  );
  
  ------------------------------------------------------informacionGeneral1_custom
  CREATE OR REPLACE TABLE `ribgo-desarrollo.fillForm.informacionGeneralI` AS (
  SELECT
    id,
    ARRAY_AGG(
      STRUCT(
        JSON_VALUE(item.SECTOR.code) as SECTOR_code,
        JSON_VALUE(item.SECTOR.text) as SECTOR_text,
        JSON_VALUE(item.TIPO_SOCIEDAD.code) as TIPO_SOCIEDAD_code,
        JSON_VALUE(item.TIPO_SOCIEDAD.text) as TIPO_SOCIEDAD_text,
        JSON_VALUE(item.CALIFICACION_R.code) as CALIFICACION_R_code,
        JSON_VALUE(item.CALIFICACION_R.text) as CALIFICACION_R_text,
        JSON_VALUE(item.ACTIVIDAD) AS ACTIVIDAD,
        JSON_VALUE(item.CORREO_CONTACTO) AS CORREO_CONTACTO,
        JSON_VALUE(item.NOMBRE_CONTACTO) AS NOMBRE_CONTACTO,
        JSON_VALUE(item.CELULAR_CONTACTO) AS CELULAR_CONTACTO,
        JSON_VALUE(item.FECHA_CONSTITUCION) AS FECHA_CONSTITUCION,
        JSON_VALUE(item.ACTIVIDAD_AGROPRODUCTIVA.code) as ACTIVIDAD_AGROPRODUCTIVA_code,
        JSON_VALUE(item.ACTIVIDAD_AGROPRODUCTIVA.text) as ACTIVIDAD_AGROPRODUCTIVA_text,
        JSON_VALUE(item.NUMERO_TOTAL_DE_EMPLEADOS) AS NUMERO_TOTAL_DE_EMPLEADOS,
        JSON_VALUE(item, "$.\"SALARIO_PROMEDIO_(EN_PESOS)\"") AS SALARIO_PROMEDIO_EN_PESOS
      )
    ) INFORMACION_GENERAL_I
  FROM
    `admin.fill_form`, UNNEST(JSON_QUERY_ARRAY(custom.INFORMACION_GENERAL_I)) AS item GROUP BY id ORDER BY id
  );
  ------------------------------------------------------informacionFinancierocustom
  CREATE OR REPLACE TABLE `ribgo-desarrollo.fillForm.informacionFinanciero` AS (
  WITH
    TEMP_00 AS (
    SELECT
      id,
      JSON_VALUE(item.REGIONAL) AS REGIONAL,
      JSON_VALUE(item.SUCURSAL) AS SUCURSAL,
      JSON_VALUE(item.ESTRATEGIA.code) as ESTRATEGIA_code,
      JSON_VALUE(item.ESTRATEGIA.text) as ESTRATEGIA_text,
      JSON_VALUE(item.NUMERO_DOCUMENTO) AS NUMERO_DOCUMENTO,
      JSON_VALUE(item.NOMBRE_EMPRESA) AS NOMBRE_EMPRESA,

    FROM
      `admin.fill_form`, UNNEST(JSON_QUERY_ARRAY(custom.INFORMACION_FINANCIERA)) AS item)
    SELECT
    
    id,
    ARRAY_AGG(
      STRUCT(
        
        REGIONAL,
        SUCURSAL,
        ESTRATEGIA_code,
        ESTRATEGIA_text,
        NUMERO_DOCUMENTO,
        NOMBRE_EMPRESA
      )
    )INFORMACION_FINANCIERA
    FROM
    TEMP_00 GROUP BY id ORDER BY id
  );
  ------------------------------------------------------fillForm_maestra
  CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.D_fillForm` AS (
  WITH TEMP_00 AS (SELECT
    FILL.id AS id_fillForm,
    FILL.* EXCEPT(id),
    INf_GEN.* EXCEPT(id),
    INf_FIN.* EXCEPT(id),
  FROM `fillForm.fillFormId` AS FILL
  LEFT JOIN `fillForm.informacionGeneralI` AS INF_GEN ON FILL.id = INF_GEN.id
  LEFT JOIN `fillForm.informacionFinanciero` AS INF_FIN ON FILL.id = INF_FIN.id)
  SELECT * FROM TEMP_00 ORDER BY id_fillForm
  );

  
##TRANSFORMACION
BEGIN


CREATE OR REPLACE TABLE admin.stage AS (
  SELECT
    STG.*,
    LAG(correction) OVER (ORDER BY id_request,stageLog.createdAt) AS correction_2
  FROM
    `admin.stage` STG
  order by id_request,stageLog.createdAt
);

CREATE OR REPLACE TABLE  `ribgo-desarrollo.dimensiones.stage_correcciones_MESA` AS
SELECT 
        CAST(STG.stageLog.createdAt AS STRING) as createdAt,
        STG.id,
        STA.name AS statusName,
        STA.code AS statusCode,
        STG.correction,
        STG.active,
        STG.id_request,
        STG.id_user,
        usr.email,
        RST.code_request,
      FROM `admin.stage` AS STG LEFT JOIN `general.status` AS STA ON STG.id_status = STA.id
            LEFT JOIN `admin.request` AS RST ON STG.id_request = RST.id
            LEFT JOIN `admin.user` usr on usr.id = STG.id_user
      WHERE correction_2 = TRUE 
      AND STA.code  IN (
        "MESA")
      ORDER BY id_request;


CREATE OR REPLACE TABLE  `ribgo-desarrollo.dimensiones.stage_correcciones_RADICACION` AS
SELECT 
        CAST(STG.stageLog.createdAt AS STRING) as createdAt,
        STG.id,
        STA.name AS statusName,
        STA.code AS statusCode,
        STG.correction,
        STG.active,
        STG.id_request,
        STG.id_user,
        usr.email,
        RST.code_request,
      FROM `admin.stage` AS STG LEFT JOIN `general.status` AS STA ON STG.id_status = STA.id
            LEFT JOIN `admin.request` AS RST ON STG.id_request = RST.id
            LEFT JOIN `admin.user` usr on usr.id = STG.id_user
      WHERE correction_2 = TRUE 
      AND STA.code  IN (
        "RADICACION")
      ORDER BY id_request;


CREATE OR REPLACE TABLE  `ribgo-desarrollo.dimensiones.stage_correcciones_PROFESIONAL` AS
SELECT 
        CAST(STG.stageLog.createdAt AS STRING) as createdAt,
        STG.id,
        STA.name AS statusName,
        STA.code AS statusCode,
        STG.correction,
        STG.active,
        STG.id_request,
        STG.id_user,
        usr.email,
        RST.code_request,
      FROM `admin.stage` AS STG LEFT JOIN `general.status` AS STA ON STG.id_status = STA.id
            LEFT JOIN `admin.request` AS RST ON STG.id_request = RST.id
            LEFT JOIN `admin.user` usr on usr.id = STG.id_user
      WHERE correction_2 = TRUE 
      AND STA.code  IN (
        "PROFESIONAL")
      ORDER BY id_request;


CREATE OR REPLACE TABLE  `ribgo-desarrollo.dimensiones.stage_correcciones_TECNICO` AS
SELECT 
        CAST(STG.stageLog.createdAt AS STRING) as createdAt,
        STG.id,
        STA.name AS statusName,
        STA.code AS statusCode,
        STG.correction,
        STG.active,
        STG.id_request,
        STG.id_user,
        usr.email,
        RST.code_request,
      FROM `admin.stage` AS STG LEFT JOIN `general.status` AS STA ON STG.id_status = STA.id
            LEFT JOIN `admin.request` AS RST ON STG.id_request = RST.id
            LEFT JOIN `admin.user` usr on usr.id = STG.id_user
      WHERE correction_2 = TRUE 
      AND STA.code  IN (
        "TECNICO")
      ORDER BY id_request;



 CREATE OR REPLACE TABLE `dimensiones.stage_correcciones_MESA` AS
  select 
  id_request,
  SPLIT(STRING_AGG(createdAt,","),",")   as fechacreacion,
  SPLIT(STRING_AGG(CAST(email AS STRING),","),",")   as usuarios, 
  FROM `ribgo-desarrollo.dimensiones.stage_correcciones_MESA`
  group by id_request;



  CREATE OR REPLACE TABLE `dimensiones.stage_correcciones_RADICACION` AS
  select 
  id_request,
  SPLIT(STRING_AGG(createdAt,","),",")   as fechacreacion,
  SPLIT(STRING_AGG(CAST(email AS STRING),","),",")   as usuarios, 
  FROM `ribgo-desarrollo.dimensiones.stage_correcciones_RADICACION`
  group by id_request;


  CREATE OR REPLACE TABLE `dimensiones.stage_correcciones_PROFESIONAL` AS
  select 
  id_request,
  SPLIT(STRING_AGG(createdAt,","),",")   as fechacreacion,
  SPLIT(STRING_AGG(CAST(email AS STRING),","),",")   as usuarios, 
  FROM `ribgo-desarrollo.dimensiones.stage_correcciones_PROFESIONAL`
  group by id_request;



  CREATE OR REPLACE TABLE `dimensiones.stage_correcciones_TECNICO` AS
  select 
  id_request,
  SPLIT(STRING_AGG(createdAt,","),",")   as fechacreacion,
  SPLIT(STRING_AGG(CAST(email AS STRING),","),",")   as usuarios, 
  FROM `ribgo-desarrollo.dimensiones.stage_correcciones_TECNICO`
  group by id_request;



CREATE OR REPLACE TABLE `dimensiones.stage_correcciones_MESA_PIVOT` AS
SELECT 
id_request,
IF( ARRAY_LENGTH(fechacreacion)>=1 ,fechacreacion[OFFSET(0)],null)  AS correccion_fechacreacion_Mesa_1,
IF( ARRAY_LENGTH(fechacreacion)>=2 ,fechacreacion[OFFSET(1)],null)  AS correccion_fechacreacion_Mesa_2,
IF( ARRAY_LENGTH(fechacreacion)>=3 ,fechacreacion[OFFSET(2)],null) AS correccion_fechacreacion_Mesa_3,
IF( ARRAY_LENGTH(fechacreacion)>=4 ,fechacreacion[OFFSET(3)],null)  AS correccion_fechacreacion_Mesa_4,
IF( ARRAY_LENGTH(fechacreacion)>=5 ,fechacreacion[OFFSET(4)],null)  AS correccion_fechacreacion_Mesa_5,
IF( ARRAY_LENGTH(usuarios)>=1 ,usuarios[OFFSET(0)],null) AS correccion_usuarios_mesa_1,
IF( ARRAY_LENGTH(usuarios)>=2 ,usuarios[OFFSET(1)],null) AS correccion_usuarios_mesa_2,
IF( ARRAY_LENGTH(usuarios)>=3 ,usuarios[OFFSET(2)],null) AS correccion_usuarios_mesa_3,
IF( ARRAY_LENGTH(usuarios)>=4 ,usuarios[OFFSET(3)],null) AS correccion_usuarios_mesa_4,
IF( ARRAY_LENGTH(usuarios)>=5 ,usuarios[OFFSET(4)],null) AS correccion_usuarios_mesa_5,
FROM
`dimensiones.stage_correcciones_MESA` ;



CREATE OR REPLACE TABLE `dimensiones.stage_correcciones_RADICACION_PIVOT` AS
SELECT 
id_request,
IF( ARRAY_LENGTH(fechacreacion)>=1 ,fechacreacion[OFFSET(0)],null)  AS correccion_fechacreacion_radicacion_1,
IF( ARRAY_LENGTH(fechacreacion)>=2 ,fechacreacion[OFFSET(1)],null)  AS correccion_fechacreacion_radicacion_2,
IF( ARRAY_LENGTH(fechacreacion)>=3 ,fechacreacion[OFFSET(2)],null) AS correccion_fechacreacion_radicacion_3,
IF( ARRAY_LENGTH(fechacreacion)>=4 ,fechacreacion[OFFSET(3)],null)  AS correccion_fechacreacion_radicacion_4,
IF( ARRAY_LENGTH(fechacreacion)>=5 ,fechacreacion[OFFSET(4)],null)  AS correccion_fechacreacion_radicacion_5,
IF( ARRAY_LENGTH(usuarios)>=1 ,usuarios[OFFSET(0)],null) AS correccion_usuarios_radicacion_1,
IF( ARRAY_LENGTH(usuarios)>=2 ,usuarios[OFFSET(1)],null) AS correccion_usuarios_radicacion_2,
IF( ARRAY_LENGTH(usuarios)>=3 ,usuarios[OFFSET(2)],null) AS correccion_usuarios_radicacion_3,
IF( ARRAY_LENGTH(usuarios)>=4 ,usuarios[OFFSET(3)],null) AS correccion_usuarios_radicacion_4,
IF( ARRAY_LENGTH(usuarios)>=5 ,usuarios[OFFSET(4)],null) AS correccion_usuarios_radicacion_5,
FROM
`dimensiones.stage_correcciones_RADICACION`;






CREATE OR REPLACE TABLE `dimensiones.stage_correcciones_PROFESIONAL_PIVOT` AS
SELECT 
id_request,
IF( ARRAY_LENGTH(fechacreacion)>=1 ,fechacreacion[OFFSET(0)],null)  AS correccion_fechacreacion_profesional_1,
IF( ARRAY_LENGTH(fechacreacion)>=2 ,fechacreacion[OFFSET(1)],null)  AS correccion_fechacreacion_profesional_2,
IF( ARRAY_LENGTH(fechacreacion)>=3 ,fechacreacion[OFFSET(2)],null)  AS correccion_fechacreacion_profesional_3,
IF( ARRAY_LENGTH(fechacreacion)>=4 ,fechacreacion[OFFSET(3)],null)  AS correccion_fechacreacion_profesional_4,
IF( ARRAY_LENGTH(fechacreacion)>=5 ,fechacreacion[OFFSET(4)],null)  AS correccion_fechacreacion_profesional_5,
IF( ARRAY_LENGTH(usuarios)>=1 ,usuarios[OFFSET(0)],null) AS correccion_usuarios_profesional_1,
IF( ARRAY_LENGTH(usuarios)>=2 ,usuarios[OFFSET(1)],null) AS correccion_usuarios_profesional_2,
IF( ARRAY_LENGTH(usuarios)>=3 ,usuarios[OFFSET(2)],null) AS correccion_usuarios_profesional_3,
IF( ARRAY_LENGTH(usuarios)>=4 ,usuarios[OFFSET(3)],null) AS correccion_usuarios_profesional_4,
IF( ARRAY_LENGTH(usuarios)>=5 ,usuarios[OFFSET(4)],null) AS correccion_usuarios_profesional_5,
FROM
`dimensiones.stage_correcciones_PROFESIONAL` ;



CREATE OR REPLACE TABLE `dimensiones.stage_correcciones_TECNICO_PIVOT` AS
SELECT 
id_request,
IF( ARRAY_LENGTH(fechacreacion)>=1 ,fechacreacion[OFFSET(0)],null)  AS correccion_fechacreacion_tecnico_1,
IF( ARRAY_LENGTH(fechacreacion)>=2 ,fechacreacion[OFFSET(1)],null)  AS correccion_fechacreacion_tecnico_2,
IF( ARRAY_LENGTH(fechacreacion)>=3 ,fechacreacion[OFFSET(2)],null)  AS correccion_fechacreacion_tecnico_3,
IF( ARRAY_LENGTH(fechacreacion)>=4 ,fechacreacion[OFFSET(3)],null)  AS correccion_fechacreacion_tecnico_4,
IF( ARRAY_LENGTH(fechacreacion)>=5 ,fechacreacion[OFFSET(4)],null)  AS correccion_fechacreacion_tecnico_5,
IF( ARRAY_LENGTH(usuarios)>=1 ,usuarios[OFFSET(0)],null) AS correccion_usuarios_tecnico_1,
IF( ARRAY_LENGTH(usuarios)>=2 ,usuarios[OFFSET(1)],null) AS correccion_usuarios_tecnico_2,
IF( ARRAY_LENGTH(usuarios)>=3 ,usuarios[OFFSET(2)],null) AS correccion_usuarios_tecnico_3,
IF( ARRAY_LENGTH(usuarios)>=4 ,usuarios[OFFSET(3)],null) AS correccion_usuarios_tecnico_4,
IF( ARRAY_LENGTH(usuarios)>=5 ,usuarios[OFFSET(4)],null) AS correccion_usuarios_tecnico_5,
FROM
`dimensiones.stage_correcciones_TECNICO` ;

  ----------------Stage
  /*
  Creacion de la tabla "Stage" que contiene los diferentes estados de una solicitud
  Se agregan campos con el nombre y codigo del estado
  Se agregan campo con el numero de solicitud (code_request)
  Se toman unicamente aquellos campos considerados NO correccion
  */
  CREATE TEMP TABLE Stage_TEMP AS 
  SELECT 
    STG.stageLog,
    STG.id,
    STA.name AS statusName,
    STA.code AS statusCode,
    STG.correction,
    STG.active,
    STG.id_request,
    STG.id_user,
    RST.code_request,
    STG.observation,
  FROM `admin.stage` AS STG
  LEFT JOIN `general.status` AS STA ON STG.id_status = STA.id
  LEFT JOIN `admin.request` AS RST ON STG.id_request = RST.id
  WHERE correction = FALSE 
  AND STA.code  IN (
    "RADICACION",
    "PENDIENTE_CARGUE_DOCUMENTOS",
    "PENDIENTE_ASIGNACION_MESA",
    "MESA",
    "PENDIENTE_ASIGNACION_TECNICO",
    "PENDIENTE_ASIGNACION_CREDITO",
    "PENDIENTE_ASIGNACION_PROCESO_EXPRES",
    "DEVUELTO_MESA",
    "FINALIZADO_MESA",
    "TECNICO",
    "DEVUELTO_TECNICO",
    "PENDIENTE_ASIGNACION_PROFESIONAL",
    "PROFESIONAL",
    "DEVUELTO_PROFESIONAL",
    "ATRIBUCION",
    "FINALIZADO_CREDITO",
    "CON_DECISION_CREDITO"
  )
  ORDER BY code_request, stageLog.createdAt;

  CREATE TEMP TABLE Stage_H1_TEMP_00 AS
    WITH TEMP_01 AS(
        WITH TEMP_00 AS(
          SELECT 
            STG.stageLog,
            STG.id,
            STA.name AS statusName,
            STA.code AS statusCode,
            STG.correction,
            STG.active,
            STG.id_request,
            STG.id_user,
            STG.observation,
            RST.code_request,
          FROM `admin.stage` AS STG
          LEFT JOIN `general.status` AS STA ON STG.id_status = STA.id
          LEFT JOIN `admin.request` AS RST ON STG.id_request = RST.id
          WHERE 
          #correction = TRUE AND
          STA.code  IN (
            #"RADICACION",
            #"PENDIENTE_CARGUE_DOCUMENTOS",
            #"PENDIENTE_ASIGNACION_MESA",
            #"MESA",
            "PENDIENTE_ASIGNACION_TECNICO",
            "PENDIENTE_ASIGNACION_CREDITO",
            "PENDIENTE_ASIGNACION_PROCESO_EXPRES",
            #"DEVUELTO_MESA",
            #"FINALIZADO_MESA",
            #"TECNICO",
            #"DEVUELTO_TECNICO",
            "PENDIENTE_ASIGNACION_PROFESIONAL",
            "PROFESIONAL"
            #"DEVUELTO_PROFESIONAL",
            #"ATRIBUCION",
            #"FINALIZADO_CREDITO",
            #"CON_DECISION_CREDITO"
            )
          ORDER BY code_request, stageLog.createdAt
        )
        /*
        La tabla anterior se organiza por solicitud y fecha de creacion de cada estado de cada solicitud
        Se particiona la tabla para obtener el siguiente id en la traza (id_next) de cada estado y de cada solicitud
        */
        SELECT
          stageLog,
          id,
          statusName,
          statusCode,
          correction,
          active,
          id_request,
          id_user,
          observation,
          code_request,
          LEAD(id) OVER (PARTITION BY code_request ORDER BY id) AS id_next,
          LAG(TEMP_00.id) OVER (PARTITION BY TEMP_00.code_request ORDER BY TEMP_00.id) AS id_previous,
        FROM TEMP_00)
        /*
        Renombre de campos
        */  
        SELECT
          STG_00.*,
          LAG(STG_00.id_previous) OVER (PARTITION BY STG_00.code_request ORDER BY STG_00.id) AS id_previous_previous,
          STA.code AS nextStatusCode,
        FROM TEMP_01 AS STG_00
        LEFT JOIN `admin.stage` AS STA_01 ON STG_00.id_next = STA_01.id
        LEFT JOIN `general.status` AS STA ON STA_01.id_status = STA.id
        ORDER BY code_request, stageLog.createdAt;
      
  CREATE TEMP TABLE Stage_H1_TEMP_01 AS
    SELECT 
      stageLog,
      id,
      statusName,
      statusCode,
      correction,
      active,
      id_request,
      id_user,
      code_request,
      id_next,
      id_previous as id_previous_,
      id_previous,
      observation,
      
    FROM Stage_H1_TEMP_00 AS STG WHERE statusCode IN ("PROFESIONAL") AND nextStatusCode IN ("PENDIENTE_ASIGNACION_TECNICO") AND correction = TRUE
    UNION ALL
    SELECT 
      stageLog,
      id,
      statusName,
      statusCode,
      correction,
      active,
      id_request,
      id_user,
      code_request,
      id_next,
      id_previous as id_previous_,
      id_previous_previous as id_previous,
      observation,

    FROM Stage_H1_TEMP_00 AS STG WHERE statusCode IN ("PROFESIONAL") AND nextStatusCode IN ("PENDIENTE_ASIGNACION_TECNICO") AND correction = TRUE;

  CREATE TEMP TABLE Stage_H1 AS
    SELECT 
      STG.*
    FROM Stage_TEMP AS STG INNER JOIN Stage_H1_TEMP_01 as STG_H1 ON STG.id_request = STG_H1.id_request AND STG.id = STG_H1.id_previous;


CREATE TEMP TABLE Stage_H2_TEMP_00 AS
    WITH TEMP_01 AS(
      WITH TEMP_00 AS(
        SELECT 
          STG.stageLog,
          STG.id,
          STA.name AS statusName,
          STA.code AS statusCode,
          STG.correction,
          STG.active,
          STG.id_request,
          STG.id_user,
          STG.observation,
          RST.code_request,
        FROM `admin.stage` AS STG
        LEFT JOIN `general.status` AS STA ON STG.id_status = STA.id
        LEFT JOIN `admin.request` AS RST ON STG.id_request = RST.id
        WHERE 
        STA.code  IN (
          "RADICACION",
          "PENDIENTE_CARGUE_DOCUMENTOS",
          "PENDIENTE_ASIGNACION_MESA",
          "MESA",
          "PENDIENTE_ASIGNACION_TECNICO",
          "PENDIENTE_ASIGNACION_CREDITO",
          "PENDIENTE_ASIGNACION_PROCESO_EXPRES",
          "DEVUELTO_MESA",
          "FINALIZADO_MESA",
          "TECNICO",
          "DEVUELTO_TECNICO",
          "PENDIENTE_ASIGNACION_PROFESIONAL",
          "PROFESIONAL",
          "DEVUELTO_PROFESIONAL",
          "ATRIBUCION",
          "FINALIZADO_CREDITO",
          "CON_DECISION_CREDITO"
          )
        ORDER BY code_request, stageLog.createdAt
      )
      /*
      La tabla anterior se organiza por solicitud y fecha de creacion de cada estado de cada solicitud
      Se particiona la tabla para obtener el siguiente id en la traza (id_next) de cada estado y de cada solicitud
      */
      SELECT
        stageLog,
        id,
        statusName,
        statusCode,
        correction,
        active,
        id_request,
        id_user,
        observation,
        code_request,
        LEAD(id) OVER (PARTITION BY code_request ORDER BY id) AS id_next,
        LAG(TEMP_00.id) OVER (PARTITION BY TEMP_00.code_request ORDER BY TEMP_00.id) AS id_previous,
      FROM TEMP_00)

      SELECT
          STG_00.*,
          STA.code AS nextStatusCode,
        FROM TEMP_01 AS STG_00
        LEFT JOIN `admin.stage` AS STA_01 ON STG_00.id_next = STA_01.id
        LEFT JOIN `general.status` AS STA ON STA_01.id_status = STA.id
        ORDER BY code_request, stageLog.createdAt;

              

  CREATE TEMP TABLE Stage_H2_TEMP AS
    SELECT 
      stageLog,
      id,
      statusName,
      statusCode,
      correction,
      active,
      id_request,
      id_user,
      code_request,
      id_next,
      id_previous as id_previous_,
      id_previous,
      nextStatusCode,
      observation,

    FROM Stage_H2_TEMP_00 AS STG WHERE statusCode IN ("MESA") AND nextStatusCode IN ("PENDIENTE_ASIGNACION_MESA") AND correction = TRUE;
    
  DELETE FROM Stage_TEMP
  WHERE id IN (
    SELECT STG.id
    FROM Stage_H1 AS STG
  );
 
  CREATE TEMP TABLE Stage_H2_UPDATE AS
    SELECT 
      STG.*, 
      STG_H2.id_previous

    FROM Stage_TEMP AS STG INNER JOIN Stage_H2_TEMP as STG_H2 ON STG.id_request = STG_H2.id_request AND STG.id = STG_H2.id_next;

  UPDATE Stage_TEMP AS STG
    SET STG.stageLog.timeLastChange = STG_U.stageLog.timeLastChange
  FROM Stage_H2_UPDATE AS STG_U
  WHERE STG.id = STG_U.id_previous;


  CREATE TEMP TABLE Stage_H2_DELETE AS
    SELECT 
      STG.*
    FROM Stage_TEMP AS STG INNER JOIN Stage_H2_TEMP as STG_H2 ON STG.id_request = STG_H2.id_request AND STG.id = STG_H2.id_next;
  
  DELETE FROM Stage_TEMP
  WHERE id IN (
    SELECT STG.id
    FROM Stage_H2_DELETE AS STG
  );

  CREATE TEMP TABLE Stage AS
    /*
    La tabla anterior se organiza por solicitud y fecha de creacion de cada estado de cada solicitud
    Se particiona la tabla para obtener el siguiente id en la traza (id_next) de cada estado y de cada solicitud
    */
    WITH TEMP_01 AS(
      SELECT
        stageLog,
        id,
        statusName,
        statusCode,
        correction,
        active,
        id_request,
        id_user,
        code_request,
        observation,
        LEAD(id) OVER (PARTITION BY code_request ORDER BY id) AS id_next
      FROM Stage_TEMP)
      /*
      Renombre de campos
      */  
      SELECT
        STG_00.*,
        STA.code AS nextStatusCode,
      FROM TEMP_01 AS STG_00
      LEFT JOIN `admin.stage` AS STA_01 ON STG_00.id_next = STA_01.id
      LEFT JOIN `general.status` AS STA ON STA_01.id_status = STA.id
      ORDER BY code_request, stageLog.createdAt;

    CREATE TEMP TABLE H1_INFO AS
    SELECT 
      STG.* EXCEPT(id_user),
      STG_H1_INFO.createdAt,
      STG_H1_INFO.timeLastChange,
      STG_H1_INFO.id_user
    FROM Stage_TEMP AS STG INNER JOIN (
      SELECT
        DISTINCT id,
        stageLog.createdAt,
        stageLog.timeLastChange,
        statusName,
        statusCode,
        correction,
        active,
        id_request,
        id_user,
        code_request,
        id_next,
      FROM Stage_H1_TEMP_01)
     as STG_H1_INFO ON STG.id_request = STG_H1_INFO.id_request AND STG.id = STG_H1_INFO.id_next;

  CREATE TEMP TABLE H2_INFO AS
    SELECT 
      STG.* EXCEPT(id_user),
      STG_H2_INFO.createdAt,
      STG_H2_INFO.timeLastChange,
      STG_H2_INFO.id_user
    FROM Stage_TEMP AS STG INNER JOIN (
      SELECT
        DISTINCT id,
        stageLog.createdAt,
        stageLog.timeLastChange,
        statusName,
        statusCode,
        correction,
        active,
        id_request,
        id_user,
        code_request,
        id_previous,
      FROM Stage_H2_TEMP)
     as STG_H2_INFO ON STG.id_request = STG_H2_INFO.id_request AND STG.id = STG_H2_INFO.id_previous;
  

  ----------------Request
  /*
  Creacion de la tabla "Request" que contiene la informacion de cada solicitud
  Se agregan campos con segemento, tuberia y peso
  */
  CREATE TEMP TABLE Request AS 
  SELECT 
    RST.id,
    RST.requestLog,
    RST.code_request,
    PR.weight as Peso,
    P.name AS Tuberia,
    SMT.name AS Segmento,
  FROM `admin.request` AS RST
  LEFT JOIN `general.pipe_rule` AS PR ON RST.id_pipe_rule = PR.id
  LEFT JOIN `general.pipe` AS P ON PR.id_pipe = P.id
  LEFT JOIN `general.segment`as SMT ON P.id_segment = SMT.id;

  ----------------Turno
  /*
  Creacion de la tabla "Turno" que contiene la informacion parametrizada de los turnos de los usuarios de cada estado de cada solicitud
  */
  CREATE TEMP TABLE Turno AS
    SELECT 
      JSON_VALUE(UA.details, '$.name') AS Turno, 
      PARSE_TIME('%T', CONCAT(JSON_VALUE(UA.details, '$.hora_inicio'), ':00')) AS HoraInicioTIME,
      PARSE_TIME('%T', CONCAT(JSON_VALUE(UA.details, '$.hora_salida'), ':00')) AS HoraSalidaTIME,
      CONCAT(JSON_VALUE(UA.details, '$.hora_inicio'), '-', JSON_VALUE(UA.details, '$.hora_salida')) AS RangoTurno 
    FROM `general.list_param` AS UA 
    WHERE code = 'horarios'
    AND JSON_VALUE(UA.details, '$.name') IN ('Diurno A', 'Diurno B', 'Nocturno');

  --............ReturnReason
  /*
  Creacion de la tabla "ReturnReason" que contiene la informacion maestra de las causas de devolucion en Mesa
  */
  CREATE OR REPLACE TABLE  `dimensiones.ReturnReason_Mesa` AS
    SELECT 
      LRR.id_stage,
      LP.code,
      JSON_VALUE(SAFE.PARSE_JSON(LP.details), '$.name') AS Causal
    FROM `admin.list_return_reason` AS LRR 
    LEFT JOIN `general.list_param` AS LP ON LRR.id_reason=LP.id 
    LEFT JOIN `admin.stage` AS STG ON STG.id= LRR.id_stage 
    LEFT JOIN `general.status` AS STA ON STG.id_status = STA.id
    where STA.code in ("DEVUELTO_MESA");

  CREATE OR REPLACE TABLE `dimensiones.ReturnReason_Mesa_Devoluciones` AS
  select 
  id_stage,
  SPLIT(STRING_AGG(Causal,","),",")   as Causales 
  FROM `dimensiones.ReturnReason_Mesa`
  group by id_stage;


CREATE OR REPLACE TABLE `dimensiones.ReturnReason_Mesa_Devoluciones_PIVOT` AS
SELECT 
id_stage,
IF( ARRAY_LENGTH(Causales)>=1 ,Causales[OFFSET(0)],null) AS causal_devolucion_mesa_1,
IF( ARRAY_LENGTH(Causales)>=2 ,Causales[OFFSET(1)],null)  AS causal_devolucion_mesa_2,
IF( ARRAY_LENGTH(Causales)>=3 ,Causales[OFFSET(2)],null) AS causal_devolucion_mesa_3,
IF( ARRAY_LENGTH(Causales)>=4 ,Causales[OFFSET(3)],null)  AS causal_devolucion_mesa_4,
IF( ARRAY_LENGTH(Causales)>=5 ,Causales[OFFSET(4)],null)  AS causal_devolucion_mesa_5,
IF( ARRAY_LENGTH(Causales)>=6 ,Causales[OFFSET(5)],null)  AS causal_devolucion_mesa_6,
IF( ARRAY_LENGTH(Causales)>=7 ,Causales[OFFSET(6)],null)  AS causal_devolucion_mesa_7,
IF( ARRAY_LENGTH(Causales)>=8 ,Causales[OFFSET(7)],null)  AS causal_devolucion_mesa_8,
IF( ARRAY_LENGTH(Causales)>=9 ,Causales[OFFSET(8)],null)  AS causal_devolucion_mesa_9,
IF( ARRAY_LENGTH(Causales)>=10 ,Causales[OFFSET(9)],null)  AS causal_devolucion_mesa_10,
FROM
`dimensiones.ReturnReason_Mesa_Devoluciones` ;

  CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.ReturnReason_DTC` AS
    SELECT 
      LRR.id_stage,
      LP.code,
      JSON_VALUE(SAFE.PARSE_JSON(LP.details), '$.name') AS Causal
    FROM `admin.list_return_reason` AS LRR 
    LEFT JOIN `general.list_param` AS LP ON LRR.id_reason=LP.id 
    LEFT JOIN `admin.stage` AS STG ON STG.id= LRR.id_stage 
    LEFT JOIN `general.status` AS STA ON STG.id_status = STA.id
    where STA.code in ("DEVUELTO_TECNICO");


  CREATE OR REPLACE TABLE `dimensiones.ReturnReason_DTC_Devoluciones` AS
  select 
  id_stage,
  SPLIT(STRING_AGG(Causal,","),",")   as Causales 
  FROM `dimensiones.ReturnReason_DTC`
  group by id_stage;


CREATE OR REPLACE TABLE `dimensiones.ReturnReason_DTC_Devoluciones_PIVOT` AS
SELECT 
id_stage,
IF( ARRAY_LENGTH(Causales)>=1 ,Causales[OFFSET(0)],null) AS causal_devolucion_DTC_1,
IF( ARRAY_LENGTH(Causales)>=2 ,Causales[OFFSET(1)],null)  AS causal_devolucion_DTC_2,
IF( ARRAY_LENGTH(Causales)>=3 ,Causales[OFFSET(2)],null) AS causal_devolucion_DTC_3,
IF( ARRAY_LENGTH(Causales)>=4 ,Causales[OFFSET(3)],null)  AS causal_devolucion_DTC_4,
IF( ARRAY_LENGTH(Causales)>=5 ,Causales[OFFSET(4)],null)  AS causal_devolucion_DTC_5,
IF( ARRAY_LENGTH(Causales)>=6 ,Causales[OFFSET(5)],null)  AS causal_devolucion_DTC_6,
IF( ARRAY_LENGTH(Causales)>=7 ,Causales[OFFSET(6)],null)  AS causal_devolucion_DTC_7,
IF( ARRAY_LENGTH(Causales)>=8 ,Causales[OFFSET(7)],null)  AS causal_devolucion_DTC_8,
IF( ARRAY_LENGTH(Causales)>=9 ,Causales[OFFSET(8)],null)  AS causal_devolucion_DTC_9,
IF( ARRAY_LENGTH(Causales)>=10 ,Causales[OFFSET(9)],null)  AS causal_devolucion_DTC_10,
FROM
`dimensiones.ReturnReason_DTC_Devoluciones` ;



CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.ReturnReason_PROFESIONAL` AS
    SELECT 
      LRR.id_stage,
      LP.code,
      JSON_VALUE(SAFE.PARSE_JSON(LP.details), '$.name') AS Causal
    FROM `admin.list_return_reason` AS LRR 
    LEFT JOIN `general.list_param` AS LP ON LRR.id_reason=LP.id 
    LEFT JOIN `admin.stage` AS STG ON STG.id= LRR.id_stage 
    LEFT JOIN `general.status` AS STA ON STG.id_status = STA.id
    where STA.code in ("DEVUELTO_PROFESIONAL");

  CREATE OR REPLACE TABLE `dimensiones.ReturnReason_PROFESIONAL_Devoluciones` AS
  select 
  id_stage,
  SPLIT(STRING_AGG(Causal,","),",")   as Causales 
  FROM `dimensiones.ReturnReason_PROFESIONAL`
  group by id_stage;


CREATE OR REPLACE TABLE `dimensiones.ReturnReason_PROFESIONAL_Devoluciones_PIVOT` AS
SELECT 
id_stage,
IF( ARRAY_LENGTH(Causales)>=1 ,Causales[OFFSET(0)],null) AS causal_devolucion_PROFESIONAL_1,
IF( ARRAY_LENGTH(Causales)>=2 ,Causales[OFFSET(1)],null)  AS causal_devolucion_PROFESIONAL_2,
IF( ARRAY_LENGTH(Causales)>=3 ,Causales[OFFSET(2)],null) AS causal_devolucion_PROFESIONAL_3,
IF( ARRAY_LENGTH(Causales)>=4 ,Causales[OFFSET(3)],null)  AS causal_devolucion_PROFESIONAL_4,
IF( ARRAY_LENGTH(Causales)>=5 ,Causales[OFFSET(4)],null)  AS causal_devolucion_PROFESIONAL_5,
IF( ARRAY_LENGTH(Causales)>=6 ,Causales[OFFSET(5)],null)  AS causal_devolucion_PROFESIONAL_6,
IF( ARRAY_LENGTH(Causales)>=7 ,Causales[OFFSET(6)],null)  AS causal_devolucion_PROFESIONAL_7,
IF( ARRAY_LENGTH(Causales)>=8 ,Causales[OFFSET(7)],null)  AS causal_devolucion_PROFESIONAL_8,
IF( ARRAY_LENGTH(Causales)>=9 ,Causales[OFFSET(8)],null)  AS causal_devolucion_PROFESIONAL_9,
IF( ARRAY_LENGTH(Causales)>=10 ,Causales[OFFSET(9)],null)  AS causal_devolucion_PROFESIONAL_10,
FROM
`dimensiones.ReturnReason_PROFESIONAL_Devoluciones` ;


CREATE TEMP TABLE ReturnReason AS
    SELECT 
      LRR.id_stage,
      LP.code,
      JSON_VALUE(SAFE.PARSE_JSON(LP.details), '$.name') AS Causal
    FROM `admin.list_return_reason` AS LRR 
    LEFT JOIN `general.list_param` AS LP ON LRR.id_reason=LP.id;

  --------------Usuario
  /*
  Creacion de la tabla "Usuarios" que contiene la informacion maestra de los usuarios
  */
  CREATE TEMP TABLE User AS
  SELECT 
    USR.id,
    CONCAT(PRS.first_name, " ", PRS.last_name) AS User,
    PTN.name AS Cargo,
    PRS.Identification, 
    USR_AST.code  
  FROM `admin.user` AS USR
  LEFT JOIN `general.person` AS PRS ON USR.id_person = PRS.id
  LEFT JOIN `general.position`AS PTN ON PRS.id_position = PTN.id
  LEFT JOIN (SELECT * FROM `admin.user_assignment` where active = TRUE) AS USR_AST ON USR_AST.id_user = USR.id;

  ---------------STAGE_RADICACION_MESA
  /*
  Creacion de la tabla temporal "STAGE_RADICACION_MESA" que contiene los estados desde radicacion hasta mesa de cada solicitud 
  Se toma cada el id de cada solicitud 
  Se agrea en orden la informacion de FechaCreacion, FechaUltimaActualizacion, EstadoActivo y Usuario (id) de los estados desde Radicacion hasta Mesa
  Se agregan los usuarios de radicacion y mesa
  Se agregan las causales de devolucion del estado devolucion en mesa
  */
  CREATE TEMP TABLE STG_RAD_MESA AS
    WITH TEMP_00 AS(
      SELECT  
            RST.id,
            ---Radicacion
            RDN.Radicacion,
            RDN.active AS Radicacion_active,
            RDN.observation as Radicacion_observacion_analista,
            User_radicaction.identification as cedula_vendedos_asesor,
 #           PRSN.identification as cedula_vendedos_asesor,
            ---PdtCargueDocumentos
            PCD.PdtCargueDocumentos,
            PCD.active AS PdtCargueDocumentos_active,
            PCD.observation as PdtCargueDocumentos_observacion_analista,
            ---PdtAsignacionMesa
            PAM.PdtAsignacionMesa,
            PAM.active AS PdtAsignacionMesa_active,
            PAM.observation AS PdtAsignacionMesa_observacion_analista,

            User_Radicacion.User AS UserRadicacion,
            User_Radicacion.Cargo AS CargoRadicacion,
            Rad_Correcciones.correccion_fechacreacion_radicacion_1,
            Rad_Correcciones.correccion_fechacreacion_radicacion_2,
            Rad_Correcciones.correccion_fechacreacion_radicacion_3,
            Rad_Correcciones.correccion_fechacreacion_radicacion_4,
            Rad_Correcciones.correccion_fechacreacion_radicacion_5,
            Rad_Correcciones.correccion_usuarios_radicacion_1,
            Rad_Correcciones.correccion_usuarios_radicacion_2,
            Rad_Correcciones.correccion_usuarios_radicacion_3,
            Rad_Correcciones.correccion_usuarios_radicacion_4,
            Rad_Correcciones.correccion_usuarios_radicacion_5,
            ---Mesa
            MESA.Mesa,
            User_Mesa.User AS UserMesa,
            User_Mesa.Cargo AS CargoMesa,
            MESA.active AS Mesa_active,
            MESA.observation as Mesa_observacion_analista,
            RR.Causal,
            Mesa_Correcciones.correccion_fechacreacion_mesa_1,
            Mesa_Correcciones.correccion_fechacreacion_mesa_2,
            Mesa_Correcciones.correccion_fechacreacion_mesa_3,
            Mesa_Correcciones.correccion_fechacreacion_mesa_4,
            Mesa_Correcciones.correccion_fechacreacion_mesa_5,
            Mesa_Correcciones.correccion_usuarios_mesa_1,
            Mesa_Correcciones.correccion_usuarios_mesa_2,
            Mesa_Correcciones.correccion_usuarios_mesa_3,
            Mesa_Correcciones.correccion_usuarios_mesa_4,
            Mesa_Correcciones.correccion_usuarios_mesa_5,
            ---PdtAsignacionTecnico
            PAT.PdtAsignacionTecnico,
            PAT.nextStatusCode AS PdtAsignacionTecnico_nextStatusCode,
            PAT.id_next AS PdtAsignacionTecnico_id_next,
            PAT.active AS PdtAsignacionTecnico_active,
            PAT.observation as PdtAsignacionTecnico_observacion_analista,
            User_pteasignaciontec.User as UserPdtAsignacionTecnico,
            ---PdtAsignacionCredito
            PAC.PdtAsignacionCredito,
            PAC.nextStatusCode AS PdtAsignacionCredito_nextStatusCode,
            PAC.id_next AS PdtAsignacionCredito_id_next,
            PAC.active AS PdtAsignacionCredito_active,
            PAC.observation AS PdtAsignacionCredito_observacion_analista,
            User_pteasignacioncred.User as UserPdtAsignacionCredito,
            ---PdtAsignacionProcesoExpres
            PAE.PdtAsignacionProcesoExpres,
            PAE.nextStatusCode AS PdtAsignacionProcesoExpres_nextStatusCode,
            PAE.id_next AS PdtAsignacionProcesoExpres_id_next,
            PAE.active AS PdtAsignacionProcesoExpres_active,
            PAE.observation as PdtAsignacionProcesoExpres_observacion_analista,
            User_pteasignacioncicloexpress.User as UserPdtAsignacionProcesoExpres,
            
            ---DevueltoPorMesa
            DM.DevueltoPorMesa,
            DM.id_next AS DevueltoPorMesa_id_next,
            DM.active AS DevueltoPorMesa_active,
            DM.observation AS DevueltoPorMesa_observacion_analista,
            User_devuelto_mesa.User as UserDevueltoPorMesa,
            DM.causal_devolucion_mesa_1,
            DM.causal_devolucion_mesa_2,
            DM.causal_devolucion_mesa_3,
            DM.causal_devolucion_mesa_4,
            DM.causal_devolucion_mesa_5,
            DM.causal_devolucion_mesa_6,
            DM.causal_devolucion_mesa_7,
            DM.causal_devolucion_mesa_8,
            DM.causal_devolucion_mesa_9,
            DM.causal_devolucion_mesa_10,
            ---FinalizadoMesa
            FM.FinalizadoMesa,
            FM.id_next AS FinalizadoMesa_id_next,
            FM.active AS FinalizadoMesa_active,
            FM.observation as FinalizadoMesa_observacion_analista,
            User_finalizado_mesa.User as UserFinalizadoMesa,
            ---RevisionTecnico
            RET.RevisionTecnico,
            RET.nextStatusCode AS RevisionTecnico_nextStatusCode,
            RET.id_next AS RevisionTecnico_id_next,
            RET.active AS RevisionTecnico_active,
            RET.observation as RevisionTecnico_observacion_analista,
            User_Ret.User as UserRevisionTecnico,
            Tecnico_correciones.correccion_fechacreacion_tecnico_1,
            Tecnico_correciones.correccion_fechacreacion_tecnico_2,
            Tecnico_correciones.correccion_fechacreacion_tecnico_3,
            Tecnico_correciones.correccion_fechacreacion_tecnico_4,
            Tecnico_correciones.correccion_fechacreacion_tecnico_5,
            Tecnico_correciones.correccion_usuarios_tecnico_1,
            Tecnico_correciones.correccion_usuarios_tecnico_2,
            Tecnico_correciones.correccion_usuarios_tecnico_3,
            Tecnico_correciones.correccion_usuarios_tecnico_4,
            Tecnico_correciones.correccion_usuarios_tecnico_5,

            ---DevueltoTecnico
            DTC.DevueltoTecnico,
            User_DTC.User as UserDTC,
            DTC.observation as RevisionTecnico_observaciones_adicionales,
            DTC.causal_devolucion_DTC_1,
            DTC.causal_devolucion_DTC_2,
            DTC.causal_devolucion_DTC_3,
            DTC.causal_devolucion_DTC_4,
            DTC.causal_devolucion_DTC_5,
            DTC.causal_devolucion_DTC_6,
            DTC.causal_devolucion_DTC_7,
            DTC.causal_devolucion_DTC_8,
            DTC.causal_devolucion_DTC_9,
            DTC.causal_devolucion_DTC_10
            
      FROM Request AS RST
      --Radicacion
      LEFT JOIN (SELECT id, id_user, id_request, id_next, active, stageLog AS Radicacion,observation FROM Stage WHERE statusCode IN ("RADICACION")) AS RDN
      ON RST.id = RDN.id_request
      LEFT JOIN  User as User_radicaction ON RDN.id_user=User_radicaction.id
         --PdtCargueDocumentos
      LEFT JOIN (SELECT id, id_request, id_next, active, stageLog AS PdtCargueDocumentos,observation FROM Stage WHERE statusCode IN ("PENDIENTE_CARGUE_DOCUMENTOS")) AS PCD
      ON RDN.id_next = PCD.id AND RST.id = PCD.id_request
      --PdtAsignacionMesa
      LEFT JOIN (SELECT id, id_request, id_next, id_user, active, stageLog AS PdtAsignacionMesa,observation FROM Stage WHERE statusCode IN ("PENDIENTE_ASIGNACION_MESA")) AS PAM
      ON PCD.id_next = PAM.id AND RST.id = PAM.id_request
      --Mesa
      LEFT JOIN (SELECT id, id_request, id_next, active, id_user, stageLog AS Mesa,observation FROM Stage WHERE statusCode IN ("MESA")) AS MESA
      ON PAM.id_next = MESA.id AND RST.id = MESA.id_request
      --Status Mesa:
          --PdtAsignacionTecnico
          LEFT JOIN (SELECT id, id_request, id_next, nextStatusCode, active, id_user, stageLog AS PdtAsignacionTecnico,observation FROM Stage WHERE statusCode IN ("PENDIENTE_ASIGNACION_TECNICO")) AS PAT
          ON MESA.id_next = PAT.id AND RST.id = PAT.id_request
          --PdtAsignacionCredito
          LEFT JOIN (SELECT id, id_request, id_next, nextStatusCode, active, id_user, stageLog AS PdtAsignacionCredito,observation FROM Stage WHERE statusCode IN ("PENDIENTE_ASIGNACION_CREDITO")) AS PAC
          ON MESA.id_next = PAC.id AND RST.id = PAC.id_request
          --PdtAsignacionProcesoExpres
          LEFT JOIN (SELECT id, id_request, id_next, nextStatusCode, active, id_user, stageLog AS PdtAsignacionProcesoExpres,observation FROM Stage WHERE statusCode IN ("PENDIENTE_ASIGNACION_PROCESO_EXPRES")) AS PAE
          ON MESA.id_next = PAE.id AND RST.id = PAE.id_request
          --DevueltoPorMesa
          LEFT JOIN (
            
            SELECT DM.* ,DM_causales_pivot.causal_devolucion_mesa_1,DM_causales_pivot.causal_devolucion_mesa_2,DM_causales_pivot.causal_devolucion_mesa_3,DM_causales_pivot.causal_devolucion_mesa_4,DM_causales_pivot.causal_devolucion_mesa_5,DM_causales_pivot.causal_devolucion_mesa_6,DM_causales_pivot.causal_devolucion_mesa_7,DM_causales_pivot.causal_devolucion_mesa_8,DM_causales_pivot.causal_devolucion_mesa_9,DM_causales_pivot.causal_devolucion_mesa_10  FROM (
            SELECT id, id_request, id_next, active, id_user, stageLog AS DevueltoPorMesa,observation FROM Stage WHERE statusCode IN ("DEVUELTO_MESA")) as DM LEFT JOIN `dimensiones.ReturnReason_Mesa_Devoluciones_PIVOT` DM_causales_pivot ON DM_causales_pivot.id_stage=DM.id 
          ) AS DM 
          ON MESA.id_next = DM.id AND RST.id = DM.id_request
          

          --FinalizadoMesa
          LEFT JOIN (SELECT id, id_request, id_next, active, id_user, nextStatusCode, stageLog AS FinalizadoMesa,observation FROM Stage WHERE statusCode IN ("FINALIZADO_MESA")) AS FM
          ON MESA.id_next = FM.id AND RST.id = FM.id_request
      
      --RevisionTecnico
      LEFT JOIN (SELECT id, id_request, id_next, active, id_user, nextStatusCode, stageLog AS RevisionTecnico,observation FROM Stage WHERE statusCode IN ("TECNICO")) AS RET
      ON PAT.id_next = RET.id AND RST.id  = RET.id_request
      --DeuveltoTecnico
      LEFT JOIN (SELECT DTC.*,
      dev_DTC.causal_devolucion_DTC_1,dev_DTC.causal_devolucion_DTC_2,dev_DTC.causal_devolucion_DTC_3,dev_DTC.causal_devolucion_DTC_4,dev_DTC.causal_devolucion_DTC_5,dev_DTC.causal_devolucion_DTC_6,dev_DTC.causal_devolucion_DTC_7,dev_DTC.causal_devolucion_DTC_8,dev_DTC.causal_devolucion_DTC_9,dev_DTC.causal_devolucion_DTC_10 FROM (
        SELECT id, id_request, id_next, id_user, active, stageLog AS DevueltoTecnico,observation  FROM Stage WHERE statusCode IN ("DEVUELTO_TECNICO")) as DTC LEFT JOIN `dimensiones.ReturnReason_DTC_Devoluciones_PIVOT` as dev_DTC ON DTC.id=dev_DTC.id_stage) AS DTC
      ON RET.id_next = DTC.id AND RST.id = DTC.id_request

      LEFT JOIN User as User_Radicacion ON PAM.id_user = User_Radicacion.id
      LEFT JOIN User as User_Mesa ON MESA.id_user = User_Mesa.id
      LEFT JOIN User as User_pteasignacioncred ON PAC.id_user = User_pteasignacioncred.id
      LEFT JOIN User as User_pteasignaciontec ON PAT.id_user = User_pteasignaciontec.id
      LEFT JOIN User as User_pteasignacioncicloexpress ON PAE.id_user = User_pteasignacioncicloexpress.id
      LEFT JOIN User as User_finalizado_mesa ON FM.id_user = User_finalizado_mesa.id
      LEFT JOIN User as User_devuelto_mesa ON DM.id_user = User_devuelto_mesa.id
      LEFT JOIN User as User_Ret ON RET.id_user = User_Ret.id
      LEFT JOIN User as User_DTC ON DTC.id_user = User_DTC.id


      LEFT JOIN ReturnReason as RR ON RR.id_stage = DM.id
      LEFT JOIN `dimensiones.stage_correcciones_RADICACION_PIVOT` as Rad_correcciones ON
      RDN.id_request=Rad_correcciones.id_request  
      LEFT JOIN `dimensiones.stage_correcciones_MESA_PIVOT` as Mesa_correcciones ON
      MESA.id_request=Mesa_correcciones.id_request 
      LEFT JOIN `dimensiones.stage_correcciones_TECNICO_PIVOT` as Tecnico_correciones ON
      RET.id_request=Tecnico_correciones.id_request 


    )
    /*
    Sobre la tabla anterior
    Se agrega el campo nextStatusCode que permite identificar si se trata de asignacion manual o automatica
    Se agrega el campo id next como unificacion de los 5 posibles estados de Mesa
    Se agrega el campo FechaFinMesa como unificacion de los 5 posibles estados de Mesa, corresponde a la fecha de ultima actualizacion de los 5 posibles estados
    Se agregan los campos para identificar los estado dentro de mesa a nivel especifico y general
    */
    SELECT 
      *,
      COALESCE(RevisionTecnico_nextStatusCode, PdtAsignacionCredito_nextStatusCode, PdtAsignacionProcesoExpres_nextStatusCode) AS `nextStatusCode`,
      COALESCE(RevisionTecnico_id_next, PdtAsignacionCredito_id_next, PdtAsignacionProcesoExpres_id_next) AS `id_next`,
      COALESCE(PdtAsignacionTecnico, PdtAsignacionCredito, PdtAsignacionProcesoExpres, DevueltoPorMesa, FinalizadoMesa) AS `FechaFinMesa`,
      CASE
        WHEN PdtAsignacionTecnico IS NOT NULL THEN "Avanzado"
        WHEN PdtAsignacionCredito IS NOT NULL THEN "Avanzado"
        WHEN PdtAsignacionProcesoExpres IS NOT NULL THEN "Avanzado"
        WHEN DevueltoPorMesa IS NOT NULL THEN "Devuelto"
        WHEN FinalizadoMesa IS NOT NULL THEN "Avanzado"
        ELSE 'SinEstadoMesaGeneral'
      END AS `Status_Mesa_general`,
      CASE
        WHEN PdtAsignacionTecnico IS NOT NULL THEN "Avanzado"
        WHEN PdtAsignacionCredito IS NOT NULL THEN "Avanzado"
        WHEN PdtAsignacionProcesoExpres IS NOT NULL THEN "Ciclo Expres"
        WHEN DevueltoPorMesa IS NOT NULL THEN "Devuelto"
        WHEN FinalizadoMesa IS NOT NULL THEN "Finalizado"
        ELSE "SinEstadoMesa"
      END AS `Status_Mesa_especifico`,
      CASE
        WHEN PdtAsignacionTecnico IS NOT NULL THEN "PdtAsignacionTecnico"
        WHEN PdtAsignacionCredito IS NOT NULL THEN "PdtAsignacionCredito"
        WHEN PdtAsignacionProcesoExpres IS NOT NULL THEN "PdtAsignacionProcesoExpres"
        WHEN DevueltoPorMesa IS NOT NULL THEN "DevueltoPorMesa"
        WHEN FinalizadoMesa IS NOT NULL THEN "FinalizadoMesa"
        ELSE "SinProcesoMesa"
      END AS `Proceso_Mesa`,
    FROM TEMP_00;

    ---------------STG_PdtAsignacionProfecional
    /*
    Sobre la tabla STAGE_RADICACION_MESA
    Creacion de la tabla "STG_PdtAsignacionProfecional" que contiene la informacion de las solicitudes con siguiente estado "PENDIENTE_ASIGNACION_PROFESIONAL" es decir asignacion "MANUAL"
    Se agrega la hora de la "FechafinalizacionMesa", como la hora de la ultima actualizacion de los 5 posibles estados en mesa para la medicion de tiempos.
    Se agrea en orden la informacion de FechaCreacion, FechaUltimaActualizacion, EstadoActivo y Usuario de los estados PdtAsignacionProfecional y Profecional
    Se agrega campo con tipo de asigancion 
    */
    CREATE TEMP TABLE STG_PdtAsignacionProfecional AS
      WITH TEMP_01 AS( 
        SELECT 
          RST.*  EXCEPT (PdtAsignacionTecnico_nextStatusCode, RevisionTecnico_nextStatusCode, PdtAsignacionCredito_nextStatusCode, PdtAsignacionProcesoExpres_nextStatusCode,
          PdtAsignacionTecnico_id_next, RevisionTecnico_id_next, PdtAsignacionCredito_id_next, PdtAsignacionProcesoExpres_id_next, DevueltoPorMesa_id_next, FinalizadoMesa_id_next),
          TIME(PARSE_TIME('%T', SUBSTR(CAST(RST.FechaFinMesa.createdAt AS STRING), 12, 8))) AS FechaFinMesaTime,
        FROM STG_RAD_MESA AS RST
        WHERE nextStatusCode IN ("PENDIENTE_ASIGNACION_PROFESIONAL"))
      SELECT 
        RST_PDT.* EXCEPT(id_next),
        PAP.PdtAsignacionProfecional,
        PAP.active AS PdtAsignacionProfecional_active,
        PAP.observation as PdtAsignacionProfecional_observaciones_analista,
        PSL.Profecional,
        PSL.active AS Profecional_active,
        PSL.observation as Profecional_observaciones_analista,
        PSL.id_next AS id_next,##Siguente estado:PENDIENTE_ASIGNACION_PROFESIONAL
        User_Profecional.User AS UserProfecional,
        "Manual" AS Asigncacion,
        Prof_correcciones.correccion_fechacreacion_profesional_1,
        Prof_correcciones.correccion_fechacreacion_profesional_2,
        Prof_correcciones.correccion_fechacreacion_profesional_3,
        Prof_correcciones.correccion_fechacreacion_profesional_4,
        Prof_correcciones.correccion_fechacreacion_profesional_5,
        Prof_correcciones.correccion_usuarios_profesional_1,
        Prof_correcciones.correccion_usuarios_profesional_2,
        Prof_correcciones.correccion_usuarios_profesional_3,
        Prof_correcciones.correccion_usuarios_profesional_4,
        Prof_correcciones.correccion_usuarios_profesional_5,
        User_Profecional.code AS UserCodeProfecional
        
      FROM TEMP_01 AS RST_PDT
      --PdtAsignacionProfecional
      LEFT JOIN (SELECT id, id_request, id_next, id_user, active, stageLog AS PdtAsignacionProfecional,observation FROM Stage WHERE statusCode IN ("PENDIENTE_ASIGNACION_PROFESIONAL")) AS PAP
      ON RST_PDT.id_next = PAP.id AND RST_PDT.id  = PAP.id_request
      --Profecional
      LEFT JOIN (SELECT id, id_request, id_next, id_user, active,  stageLog AS Profecional,observation FROM Stage WHERE statusCode IN ("PROFESIONAL")) AS PSL
      ON PAP.id_next = PSL.id AND RST_PDT.id = PSL.id_request
      LEFT JOIN User as User_Profecional ON PSL.id_user = User_Profecional.id
      LEFT JOIN `dimensiones.stage_correcciones_PROFESIONAL_PIVOT` as Prof_correcciones ON
      PSL.id_request=Prof_correcciones.id_request;
    ---------------STG_Profecional
    /*
    Sobre la tabla STAGE_RADICACION_MESA
    Creacion de la tabla "STG_Profecional" que contiene la informacion de las solicitudes con siguiente estado "PROFECIONAL" es decir asignacion "AUTOMATICA"
    Se agrega la hora de la "FechafinalizacionMesa", como la hora de la ultima actualizacion de los 5 posibles estados en mesa para la medicion de tiempos.
    Se establece en "null" la informacion del estado PdtAsignacionProfecional para mantener la estructura de las trazas.
    Se agrea en orden la informacion de FechaCreacion, FechaUltimaActualizacion, EstadoActivo y Usuario de los estados Profecional
    Se agrega campo con tipo de asigancion 
    */
    CREATE TEMP TABLE STG_Profecional AS
      WITH TEMP_02 AS( 
      SELECT 
        RST.*  EXCEPT (PdtAsignacionTecnico_nextStatusCode, RevisionTecnico_nextStatusCode, PdtAsignacionCredito_nextStatusCode, PdtAsignacionProcesoExpres_nextStatusCode, PdtAsignacionTecnico_id_next, RevisionTecnico_id_next, PdtAsignacionCredito_id_next, PdtAsignacionProcesoExpres_id_next, DevueltoPorMesa_id_next, FinalizadoMesa_id_next),
        TIME(PARSE_TIME('%T', SUBSTR(CAST(RST.FechaFinMesa.createdAt AS STRING), 12, 8))) AS FechaFinMesaTime,
      FROM STG_RAD_MESA AS RST
      WHERE nextStatusCode IN ("PROFESIONAL"))
      SELECT 
        RST_PSL.* EXCEPT(id_next),
        STRUCT(
          DATETIME(NULL) AS createdAt,
          DATETIME(NULL) AS timeLastChange
        ) AS PdtAsignacionProfecional,
        FALSE AS PdtAsignacionProfecional_active,
        "" as PdtAsignacionProfecional_observacion_analista,
        PSL.Profecional,
        PSL.active AS Profecional_active,
        PSL.observation as Profecional_observacion_analista,
        PSL.id_next AS id_next, ##Siguiente estado: PROFESIONAL
        User_Profecional.User AS UserProfecional,
        "Automatico" AS Asigncacion,
        Prof_correcciones.correccion_fechacreacion_profesional_1,
        Prof_correcciones.correccion_fechacreacion_profesional_2,
        Prof_correcciones.correccion_fechacreacion_profesional_3,
        Prof_correcciones.correccion_fechacreacion_profesional_4,
        Prof_correcciones.correccion_fechacreacion_profesional_5,
        Prof_correcciones.correccion_usuarios_profesional_1,
        Prof_correcciones.correccion_usuarios_profesional_2,
        Prof_correcciones.correccion_usuarios_profesional_3,
        Prof_correcciones.correccion_usuarios_profesional_4,
        Prof_correcciones.correccion_usuarios_profesional_5,
        User_Profecional.code AS UserCodeProfecional,
      FROM TEMP_02 AS RST_PSL
      --Profecional
      LEFT JOIN (SELECT id, id_request, id_next, active, id_user, stageLog AS Profecional,observation FROM Stage WHERE statusCode IN ("PROFESIONAL")) AS PSL
      ON RST_PSL.id_next = PSL.id AND RST_PSL.id = PSL.id_request
      LEFT JOIN User as User_Profecional ON PSL.id_user = User_Profecional.id
      LEFT JOIN `dimensiones.stage_correcciones_PROFESIONAL_PIVOT` as Prof_correcciones ON
      PSL.id_request=Prof_correcciones.id_request;
      

    ---------------STG_Mesa
    /*
    Sobre la tabla STAGE_RADICACION_MESA
    Creacion de la tabla STG_Mesa que contiene la informacion de las solicitudes que permanecen en mesa o que no tiene asignado un siguiente estado despues de mesa (Devuelto y Finalizado)
    Se agrega la hora de la "FechafinalizacionMesa", como la hora de la ultima actualizacion de los posibles estados en mesa para la medicion de tiempos.
    Se establece en "null" la informacion del estado PdtAsignacionProfecional y Profecional para mantener la estructura de las trazas.
    Se establece  en "null" el tipo de asigancion 
    */
    CREATE TEMP TABLE STG_Mesa AS
        SELECT 
          RST.*  EXCEPT (PdtAsignacionTecnico_nextStatusCode, RevisionTecnico_nextStatusCode, PdtAsignacionCredito_nextStatusCode, PdtAsignacionProcesoExpres_nextStatusCode,
          PdtAsignacionTecnico_id_next, RevisionTecnico_id_next, PdtAsignacionCredito_id_next, PdtAsignacionProcesoExpres_id_next, DevueltoPorMesa_id_next, FinalizadoMesa_id_next,
          id_next),
          TIME(PARSE_TIME('%T', SUBSTR(CAST(RST.FechaFinMesa.createdAt AS STRING), 12, 8))) AS FechaFinMesaTime,
          STRUCT(
            DATETIME(NULL) AS createdAt,
            DATETIME(NULL) AS timeLastChange
          ) AS PdtAsignacionProfecional,
          FALSE AS PdtAsignacionProfecional_active,
          "" as PdtAsignacionProfecional_observacion_analista,
          STRUCT(
            DATETIME(NULL) AS createdAt,
            DATETIME(NULL) AS timeLastChange
          ) AS Profecional,
          FALSE AS Profecional_active,
          "" as Profecional_observacion_analista,
          RST.id_next AS id_next, # Siguiente estado: Estados fuera de credito
          STRING(NULL) AS UserProfecional,
          STRING(NULL) AS Asigncacion,
        " " as correccion_fechacreacion_profesional_1,
        " " as correccion_fechacreacion_profesional_2,
        " " as correccion_fechacreacion_profesional_3,
        " " as correccion_fechacreacion_profesional_4,
        " " as correccion_fechacreacion_profesional_5,
        " " as correccion_usuarios_profesional_1,
        " " as correccion_usuarios_profesional_2,
        " " as correccion_usuarios_profesional_3,
        " " as correccion_usuarios_profesional_4,
        " " as correccion_usuarios_profesional_5,
        STRING(NULL) AS UserCodeProfecional,          
        FROM STG_RAD_MESA AS RST
        WHERE nextStatusCode NOT IN ("PENDIENTE_ASIGNACION_PROFESIONAL", "PROFESIONAL") OR nextStatusCode IS NULL;
/*
    CREATE TEMP TABLE TRK_STG_DCD AS
      WITH STG_DCD AS (
        SELECT 
          STG.*,
          STA.code,
          CONCAT(STG.id_request, "_", ROW_NUMBER() OVER (PARTITION BY STG.id_request ORDER BY STG.id)) AS orden
        FROM `ribgo-desarrollo.admin.stage` AS STG 
        LEFT JOIN `general.status` AS STA ON STG.id_status = STA.id
        WHERE STA.code = "CON_DECISION_CREDITO"
      ),
      TRK_DCD AS (
        SELECT
          id_request,
          id,
          id_user,
          type,
          id_decision,
          active,
          id_screen_r,
          url_minute,
          CONCAT(id_request, "_", ROW_NUMBER() OVER (PARTITION BY id_request ORDER BY id)) AS orden
        FROM `ribgo-desarrollo.general.track_decision`
        WHERE id_decision IS NOT NULL 
      )
      SELECT STG_DCD.*, TRK_DCD.type, TRK_DCD.id_decision, TRK_DCD.url_minute,
      FROM STG_DCD
      LEFT JOIN TRK_DCD
      ON STG_DCD.orden = TRK_DCD.orden;
*/

CREATE TEMP TABLE STG_AlcanceReconsideracion AS
    SELECT *
  FROM STG_Profecional;

  TRUNCATE TABLE STG_AlcanceReconsideracion;

  CREATE TEMP TABLE AlcanceReconsideracion AS
  SELECT 
    STG.stageLog AS Profecional,
    STG.id_request,
    STG.id_next,
    STG.id_user,
    STG.active AS Profecional_active,
    User_Profecional.User AS UserProfecional,
    User_Profecional.code AS UserCodeProfecional,
    #TRK_DCD.Profecional,
    #TRK_DCD.type,
  FROM Stage AS STG
  LEFT JOIN ( SELECT id, id_request, type, STRUCT(
      DATETIME_SUB(DATETIME(TIMESTAMP(JSON_VALUE(SAFE.PARSE_JSON(log), '$.createdAt'))),INTERVAL 5 HOUR) AS createdAt,
      DATETIME_SUB(DATETIME(TIMESTAMP(JSON_VALUE(SAFE.PARSE_JSON(log), '$.timeLastChange'))),INTERVAL 5 HOUR) AS timeLastChange
    ) AS Profecional,
  FROM `ribgo-desarrollo.general.track_decision` ORDER BY id) AS TRK_DCD ON STG.stageLog.createdAt = TRK_DCD.Profecional.createdAt
  LEFT JOIN User as User_Profecional ON STG.id_user = User_Profecional.id
  WHERE correction = False
  AND type IS NOT NULL;

INSERT INTO STG_AlcanceReconsideracion (id, Profecional, id_next, UserProfecional, Profecional_active, UserCodeProfecional)
  SELECT 
    id_request, 
    STRUCT(
    Profecional.createdAt AS createdAt,
    Profecional.timeLastChange AS timeLastChange
  ) AS Atribucion,
    id_next,
    UserProfecional,
    Profecional_active,
    UserCodeProfecional
  FROM AlcanceReconsideracion;




  /*
  Se unen las tablas con la infromacion de las solicitudes con asignacion MANUAL, AUTOMATICA y las que permanecen en MESA.
  */
  CREATE TEMP TABLE STG_MESA_CRED AS
    WITH TEMP_03 AS(
      WITH TEMP_02 AS (
        SELECT * FROM STG_PdtAsignacionProfecional
        UNION ALL
        SELECT * FROM STG_Profecional
        UNION ALL
        SELECT * FROM STG_Mesa
        UNION ALL
        SELECT * FROM STG_AlcanceReconsideracion
      )
      /*
      Sobre la tabla anterior
      Se agregan en orden la informacion de FechaCreacion, FechaUltimaActualizacion, EstadoActivo y Usuario (id) de los estados desde salida de Mesa hasta Decidido o Devuelto
      */
      SELECT
        RST.*, 
        /*
        id_next contiene algunos nulos, algunos pdtAsignacionProfecional, que no se veran afectados en adelante,
        y otros unicos en alguno de los estados depues de profecional sobre los cuales se opera a continuacion
        */
        DPL.DeuveltoProfecional,
        DPL.active AS DeuveltoProfecional_active,
        DPL.observation as DeuveltoProfecional_observation_analista,
        User_DP.User as UserDPL,
        ATB.Atribucion,
        ATB.active AS Atribucion_active,
        ATB.observation as Atribucion_observacion_analista,
        User_ATB.User as UserATB,
        User_ATB.code as UserATBCode,
        SCR.User as Responsable_decisor,
        FCR.FinalizadoCredito,
        FCR.active AS FinalizadoCredito_active,
        FCR.observation as FinalizadoCredito_observacion_analista,
        User_FCR.User as UserFCR,
        DAT.DevueltoAtribucion,
        DAT.active AS DevueltoAtribucion_active,
        DAT.observation as DevueltoAtribucion_observacion_analista,
        User_DAT.User as UserDAT,
        DCD.Decidido,
        DCD.active AS Decidido_active,
        DCD.observation as Decidido_observacion_analista,
        User_DCD.User as UserDCD,
        COALESCE (TRK_DCD_AR.type, TRK_DCD_N.type) AS Tipo,
        COALESCE (TRK_DCD_AR.url_minute, TRK_DCD_N.url_minute) AS URL_ACTA,
        COALESCE (DCD_AR.name, DCD_N.name) AS Decision,
        COALESCE (SCR_AR.level_atribution, SCR_N.level_atribution) AS level_atribution,
        COALESCE (SCR_AR.code, SCR_N.code) AS codeAtribucion,
        COALESCE (SCR_AR.responsible, SCR_N.responsible) AS responsible,
        
        /*
        APR.AprobadoProfecional,
        APR.active AS AprobadoProfecional_active,
        NPR.NegadoProfecional,
        NPR.active AS NegadoProfecional_active
        */
 #       TRK_DSC.type AS Tipo,
 #       TRK_DSC.url_minute AS URL_ACTA,
        DCD.Decidido AS FECHA_ACTA,
        causal_devolucion_PROFESIONAL_1,
        causal_devolucion_PROFESIONAL_2,
        causal_devolucion_PROFESIONAL_3,
        causal_devolucion_PROFESIONAL_4,
        causal_devolucion_PROFESIONAL_5,
        causal_devolucion_PROFESIONAL_6,
        causal_devolucion_PROFESIONAL_7,
        causal_devolucion_PROFESIONAL_8,
        causal_devolucion_PROFESIONAL_9,
        causal_devolucion_PROFESIONAL_10
      FROM TEMP_02 AS RST
      --DeuveltoProfecional
      LEFT JOIN (
        SELECT DP.*,Dev_prof_causales.causal_devolucion_PROFESIONAL_1,Dev_prof_causales.causal_devolucion_PROFESIONAL_2, Dev_prof_causales.causal_devolucion_PROFESIONAL_3, Dev_prof_causales.causal_devolucion_PROFESIONAL_4, Dev_prof_causales.causal_devolucion_PROFESIONAL_5, Dev_prof_causales.causal_devolucion_PROFESIONAL_6, Dev_prof_causales.causal_devolucion_PROFESIONAL_7, Dev_prof_causales.causal_devolucion_PROFESIONAL_8, Dev_prof_causales.causal_devolucion_PROFESIONAL_9, Dev_prof_causales.causal_devolucion_PROFESIONAL_10
        FROM (
        SELECT id, id_request, id_next, id_user, active, stageLog AS DeuveltoProfecional,observation FROM Stage WHERE statusCode IN ("DEVUELTO_PROFESIONAL")) as DP LEFT JOIN `dimensiones.ReturnReason_PROFESIONAL_Devoluciones_PIVOT` as Dev_prof_causales on DP.id=Dev_prof_causales.id_stage)  AS DPL
      ON RST.id_next = DPL.id AND RST.id = DPL.id_request
      --Atribucion
      LEFT JOIN (SELECT id, id_request, id_next, id_user, active, stageLog AS Atribucion,observation FROM Stage WHERE statusCode IN ("ATRIBUCION")) AS ATB
      ON RST.id_next = ATB.id AND RST.id = ATB.id_request
      
      --FinalizadoCredito
      LEFT JOIN (SELECT id, id_request, id_next, id_user, active, stageLog AS FinalizadoCredito,observation FROM Stage WHERE statusCode IN ("FINALIZADO_CREDITO")) AS FCR
      ON ATB.id_next = FCR.id AND RST.id = FCR.id_request
      --DevueltoAtribucion
      LEFT JOIN (SELECT id, id_request, id_next, id_user, active, stageLog AS DevueltoAtribucion,observation FROM Stage WHERE statusCode IN ("DEVUELTO_ATRIBUCION")) AS DAT
      ON ATB.id_next = DAT.id AND RST.id = DAT.id_request
      --Decidido
      LEFT JOIN (SELECT id, id_request, id_next, id_user, active, stageLog AS Decidido,observation FROM Stage WHERE statusCode IN ("CON_DECISION_CREDITO")) AS DCD
      ON FCR.id_next = DCD.id AND RST.id = DCD.id_request
      
      LEFT JOIN (SELECT id, id_request, type, id_decision, url_minute,id_screen_r, STRUCT(
          DATETIME_SUB(DATETIME(TIMESTAMP(JSON_VALUE(SAFE.PARSE_JSON(log), '$.createdAt'))),INTERVAL 5 HOUR) AS createdAt,
          DATETIME_SUB(DATETIME(TIMESTAMP(JSON_VALUE(SAFE.PARSE_JSON(log), '$.timeLastChange'))),INTERVAL 5 HOUR) AS timeLastChange
        ) AS Profecional,
      FROM `ribgo-desarrollo.general.track_decision` ORDER BY id) AS TRK_DCD_AR ON RST.Profecional.createdAt = TRK_DCD_AR.Profecional.createdAt
      
      LEFT JOIN (SELECT id, id_request, type, id_decision, url_minute,id_screen_r, STRUCT(
          DATETIME_SUB(DATETIME(TIMESTAMP(JSON_VALUE(SAFE.PARSE_JSON(log), '$.createdAt'))),INTERVAL 5 HOUR) AS createdAt,
          DATETIME_SUB(DATETIME(TIMESTAMP(JSON_VALUE(SAFE.PARSE_JSON(log), '$.timeLastChange'))),INTERVAL 5 HOUR) AS timeLastChange
        ) AS Atribucion,
      FROM `ribgo-desarrollo.general.track_decision` ORDER BY id) AS TRK_DCD_N ON ATB.Atribucion.timeLastChange = TRK_DCD_N.Atribucion.timeLastChange

      LEFT JOIN `general.decision` AS DCD_AR ON TRK_DCD_AR.id_decision =DCD_AR.id  
      LEFT JOIN `general.decision` AS DCD_N ON TRK_DCD_N.id_decision =DCD_N.id 

      LEFT JOIN `admin.screen_r` AS SCR_AR ON TRK_DCD_AR.id_screen_r =SCR_AR.id  
      LEFT JOIN `admin.screen_r` AS SCR_N ON TRK_DCD_N.id_screen_r =SCR_N.id  
      
      LEFT JOIN User as User_DP ON User_DP.id= DPL.id_user
      LEFT JOIN User as User_ATB ON User_ATB.id=ATB.id_user
      LEFT JOIN (select distinct User.User,Responsible from admin.screen_r as screen_r
      left join User on CAST(screen_r.Responsible AS STRING) = CAST(User.id AS STRING)
      ) as SCR ON CAST(ATB.id_user AS STRING)=CAST(SCR.Responsible AS STRING)
      LEFT JOIN User as User_FCR ON User_FCR.id=FCR.id_user
      LEFT JOIN User as User_DAT ON User_DAT.id=DAT.id_user
      LEFT JOIN User as User_DCD ON User_DCD.id=DCD.id_user
      )
        
      /*
      Sobre la tabla anterior
      Se agrega el campo Status_Credito para identificar si la solicitud se encuentra en "Profecional" o "PdtAsigProfecional"
      Se agrega el campo Status_Proceso para indentificar si la solicitud se encuentra en "Credito", "Mesa" y "Radicacion"
      Se agrega el campo Status_Respuesta para identificar la respuesta desde Credito
      Se agrega el turno de los Analistas (Mesa)
      */
      SELECT 
        RST.*,
        TRN.RangoTurno AS RangoTurnoMesa,
        TRN.Turno AS TurnoMesa,
        --Status_Credito
        CASE 
          WHEN Profecional.createdAt IS NOT NULL THEN "Profesional"
          ELSE
            CASE
              WHEN PdtAsignacionProfecional.createdAt IS NOT NULL THEN "PdtAsignacionProfesional"
            ELSE
              CASE
                WHEN RevisionTecnico.createdAt IS NOT NULL THEN "RevisionTecnico"
              ELSE "SinEstadoCredito"
              END
            END
        END AS `Status_Credito`, 
        --Status_Proceso
        CASE 
          WHEN Profecional.createdAt IS NOT NULL OR PdtAsignacionProfecional.createdAt IS NOT NULL OR RevisionTecnico.createdAt IS NOT NULL THEN "Credito"
          ELSE
            CASE 
              WHEN FechaFinMesa.createdAt IS NOT NULL THEN "Mesa"
            ELSE
              "Radicacion"
            END
        END AS `Status_Proceso`,
        --StatusRespuesta
        CASE
          WHEN Decidido.createdAt IS NOT NULL THEN "Decidido"
        ELSE 'No Decidido'
        END AS Status_Respuesta,
       CASE WHEN Decidido.createdAt IS NOT NULL THEN 'Decidido'
            ELSE 
            CASE WHEN FinalizadoCredito.createdAt IS NOT NULL THEN 'FinalizadoCredito'
            ELSE 
            CASE WHEN DevueltoAtribucion.createdAt IS NOT NULL THEN 'DevueltoAtribucion'
            ELSE 
            CASE WHEN Atribucion.createdAt IS NOT NULL THEN 'Atribucion'
            ELSE 
            CASE WHEN DeuveltoProfecional.createdAt IS NOT NULL THEN 'DeuveltoProfesional'
            ELSE 
            CASE WHEN Profecional.createdAt IS NOT NULL THEN 'Profesional'
            ELSE 
            CASE WHEN PdtAsignacionProfecional.createdAt IS NOT NULL THEN 'PdtAsignacionProfesional'
            ELSE 
            CASE WHEN DevueltoTecnico.createdAt IS NOT NULL THEN 'DevueltoTecnico'
            ELSE 
            CASE WHEN RevisionTecnico.createdAt IS NOT NULL THEN 'RevisionTecnico'
            ELSE 
            CASE WHEN FinalizadoMesa.createdAt IS NOT NULL THEN 'FinalizadoMesa'
            ELSE 
            CASE WHEN DevueltoPorMesa.createdAt IS NOT NULL THEN 'DevueltoPorMesa'
            ELSE 
            CASE WHEN PdtAsignacionProcesoExpres.createdAt IS NOT NULL THEN 'PdtAsignacionProcesoExpres'
            ELSE 
            CASE WHEN PdtAsignacionCredito.createdAt IS NOT NULL THEN 'PdtAsignacionCredito'
            ELSE 
            CASE WHEN PdtAsignacionTecnico.createdAt IS NOT NULL THEN 'PdtAsignacionTecnico'
            ELSE 
            CASE WHEN Mesa.createdAt IS NOT NULL THEN 'Mesa'
            ELSE 
            CASE WHEN PdtAsignacionMesa.createdAt IS NOT NULL THEN 'PdtAsignacionMesa'
            ELSE 
            CASE WHEN PdtCargueDocumentos.createdAt IS NOT NULL THEN 'PdtCargueDocumentos'
            ELSE 
            CASE WHEN Radicacion.createdAt IS NOT NULL THEN 'Radicacion' 
          END END END END END END END END END END END END END END END END END END AS Ultimo_Estado


      FROM TEMP_03 AS RST
    
    --TurnoMesa
    LEFT JOIN Turno AS TRN
    ON ((TRN.HoraInicioTIME <= RST.FechaFinMesaTime AND RST.FechaFinMesaTime <= TRN.HoraSalidaTIME) OR
    (TRN.HoraInicioTIME > TRN.HoraSalidaTIME AND (RST.FechaFinMesaTime >= TRN.HoraInicioTIME OR RST.FechaFinMesaTime <= TRN.HoraSalidaTIME)));
    

  --Rigbo
  /*
  Creacion de la tabla Ribgo con la informacion consolidad de los estatos desde Radicacion hasta el ultimo de cada traza desde su radicacion
  Se agragan los campos relevantes de la solicitud
  Se agregan los campos del formulario de cada solicitud
  */



  #create or replace table `ribgo-desarrollo.general.URL_ACTA` as 
  #SELECT 
  #id_request,
  #url_minute as url_acta  
  #FROM `ribgo-desarrollo.general.track_decision`
  #where active=true;


 CREATE TEMP TABLE STG_MESA_CRED_ACTA_00 AS
    WITH TEMP_00 AS(
    SELECT *
    FROM STG_MESA_CRED
    ORDER BY id, Profecional.createdAt)
    SELECT 
      *,
      CONCAT(id, "_", ROW_NUMBER() OVER (PARTITION BY id ORDER BY Profecional.createdAt)) AS id_request_number
    FROM TEMP_00;
  
  CREATE OR REPLACE TABLE  `dimensiones.STG_MESA_CRED_ACTA_01` AS
    SELECT 
      STG.*, 
      ACTA.minutes_generated AS NUMERO_ACTA,
    FROM STG_MESA_CRED_ACTA_00 AS STG
    LEFT JOIN(
      WITH table_temp AS(
      SELECT *
      FROM `general.information_record`
      ORDER BY id_request, id)
      SELECT id, id_request, file_number, minutes_generated,
        CONCAT(id_request, "_", ROW_NUMBER() OVER (PARTITION BY id_request ORDER BY id)) AS id_request_number
      FROM table_temp
      ) AS ACTA ON ACTA.id_request_number = STG.id_request_number;




  CREATE OR REPLACE TABLE `dimensiones.ribgo_cc` AS  
  SELECT 
    STG.*,
    RST.* EXCEPT (id),
    REGEXP_EXTRACT(STG.URL_ACTA, r'Acta N° (\d+)') AS numero_acta,

    H1.createdAt AS Profecional_Correccion_createdAt,
    H1.timeLastChange AS Profecional_Correccion_timeLastChange,
    User_Profecional_Correcion.User AS Profecional_Correccion_User,
    H2.createdAt AS Mesa_Correccion_createdAt,
    H2.timeLastChange AS Mesa_Correccion_timeLastChange,
    User_Mesa_Correcion.User AS Mesa_Correccion_User

    #FFM.* EXCEPT (NOMBRE_GRUPO_FINANCIERO, ID_AGENTE_VENDEDOR,REGIONAL,Sucursal),
    #FFM.NOMBRE_GRUPO_FINANCIERO AS Cliente,
    #FFM.ID_AGENTE_VENDEDOR AS Comercial,
    #FFM.REGIONAL AS Regional,
    #FFM.SUCURSAL AS Sucursal,
    #I_R.minutes_generated as Numero_Acta,
    #URLA.url_acta as URL_ACTA_DEF
    FROM STG_MESA_CRED AS STG
  LEFT JOIN Request AS RST on STG.id = RST.id
  LEFT JOIN H1_INFO AS H1 ON STG.id = RST.id AND STG.PdtAsignacionTecnico.createdAt = H1.stageLog.createdAt
  LEFT JOIN H2_INFO AS H2 ON STG.id = RST.id AND STG.PdtAsignacionMesa.createdAt = H2.stageLog.createdAt
  LEFT JOIN User as User_Profecional_Correcion ON H1.id_user = User_Profecional_Correcion.id
  LEFT JOIN User as User_Mesa_Correcion ON H2.id_user = User_Mesa_Correcion.id

  #LEFT JOIN `dimensiones.D_fillForm` AS FFM on RST.id = FFM.id_request
  #LEFT JOIN `general.information_record` AS I_R on RST.id = I_R.id_request
  #LEFT JOIN `ribgo-desarrollo.general.URL_ACTA` as URLA on RST.id =URLA.id_request
  #WHERE code_request IN ( 60237, 60239, 60238, 60224, 60232, 60233, 60234, 60235, 60236)

  ORDER BY id;

END;


--Drops
/*
Drop de tablas temporales
*/
DROP TABLE Turno;
DROP TABLE ReturnReason;
DROP TABLE User;
DROP TABLE Request;
DROP TABLE STG_RAD_MESA;
DROP TABLE STG_PdtAsignacionProfecional;
DROP TABLE STG_Profecional;
DROP TABLE STG_Mesa;
DROP TABLE STG_MESA_CRED;
DROP TABLE STG_AlcanceReconsideracion;
DROP TABLE AlcanceReconsideracion;
DROP TABLE STG_MESA_CRED_ACTA_00;

DROP TABLE Stage;
DROP TABLE Stage_H1;
DROP TABLE Stage_H1_TEMP_00;
DROP TABLE Stage_H1_TEMP_01;
DROP TABLE Stage_H2_DELETE;
DROP TABLE Stage_H2_TEMP;
DROP TABLE Stage_H2_UPDATE;
DROP TABLE Stage_TEMP;
DROP TABLE H1_INFO;
DROP TABLE H2_INFO;

###########################################################
# Hu1 Crea las tablas para cada estructura JSON ###########
###########################################################

###########################################################
# Hu1 Crea las tablas para cada estructura JSON ###########
###########################################################

CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_INFORMACION_FINANCIERA` AS 
SELECT *
FROM
(SELECT
  id_request,
  JSON_VALUE(custom, '$.CONFORMA_GRUPO_FINANCIERO')  AS CONFORMA_GRUPO_FINANCIERO,
  JSON_VALUE(custom, '$.NOMBRE_GRUPO_FINANCIERO')  AS NOMBRE_GRUPO_FINANCIERO,
  JSON_VALUE(custom, '$.NUMERO_EMPRESAS')  AS NUMERO_EMPRESAS,
  JSON_EXTRACT_SCALAR(custom, '$.OFICINA_RADICACION.text')  AS OFICINA_RADICACION,
  JSON_VALUE(custom, '$.SUCURSAL')  AS SUCURSAL,
  JSON_VALUE(custom, '$.REGIONAL')  AS REGIONAL,
  JSON_EXTRACT_SCALAR(elemento, '$.ANO_AL_QUE_CORRESPONDEN_LAS_VENTAS.text')  AS ANO_AL_QUE_CORRESPONDEN_LAS_VENTAS,
  JSON_VALUE(elemento, '$.CERTIFICADO_CLIENTE_VINCULADO_360')  AS CERTIFICADO_CLIENTE_VINCULADO_360,
  JSON_EXTRACT_SCALAR(elemento, '$.CIIU.text')  AS CIIU,
  JSON_EXTRACT_SCALAR(elemento, '$.DEPARTAMENTO_EVALUADOR.nombre')  AS DEPARTAMENTO_EVALUADOR_NOMBRE,
  JSON_EXTRACT_SCALAR(elemento, '$.DEPARTAMENTO_EVALUADOR.segment')  AS DEPARTAMENTO_EVALUADOR_SEGMENTO,
  JSON_EXTRACT_SCALAR(elemento, '$.DEPARTAMENTO_EVALUADOR.weight')  AS DEPARTAMENTO_EVALUADOR_WEIGHT,
  JSON_VALUE(elemento, '$.DETALLE_CIIU')  AS DETALLE_CIIU,
  JSON_EXTRACT_SCALAR(elemento, '$.ANO_CIERRE.text')  AS ANO_CIERRE,
  JSON_VALUE(elemento, '$.ACTIVOS_ANO')  AS ACTIVOS_ANO,
  JSON_VALUE(elemento, '$.PASIVO_ANO')  AS PASIVO_ANO,
  JSON_VALUE(elemento, '$.PATRIMONIO_ANO')  AS PATRIMONIO_ANO,
  JSON_EXTRACT_SCALAR(elemento, '$.ANO_CORTE.text')  AS ANO_CORTE,
  JSON_VALUE(elemento, '$.ACTIVO_CORTE')  AS ACTIVO_CORTE,
  JSON_VALUE(elemento, '$.INGRESOS_CORTE')  AS INGRESOS_CORTE,
  JSON_EXTRACT_SCALAR(elemento, '$.PERIODO_DIAS.text')  AS PERIODO_DIAS,
  JSON_EXTRACT_SCALAR(elemento, '$.ESTRATEGIA.text')  AS ESTRATEGIA,
  JSON_VALUE(elemento, '$.ESTRATEGIA_BASE')  AS ESTRATEGIA_BASE,
  JSON_VALUE(elemento, '$.TIPO_PRODUCTOR')  AS TIPO_PRODUCTOR,
  JSON_VALUE(elemento, '$.ID_CONTADOR')  AS ID_CONTADOR,
  JSON_VALUE(elemento, '$.NOMBRE_CONTADOR_O_REVISOR')  AS NOMBRE_CONTADOR_O_REVISOR,
  JSON_VALUE(elemento, '$.NOMBRE_EMPRESA')  AS NOMBRE_EMPRESA,  
  JSON_VALUE(elemento, '$.NUMERO_DOCUMENTO')  AS NUMERO_DOCUMENTO,
  JSON_VALUE(elemento, '$.PESO_DEL_DEPARTAMENTO_EVALUADOR')  AS PESO_DEL_DEPARTAMENTO_EVALUADOR,
  JSON_VALUE(elemento, '$.SCACS')  AS SCACS,
  JSON_VALUE(elemento, '$.SEGMENTO_DEPARTAMENTO_EVALUADOR')  AS SEGMENTO_DEPARTAMENTO_EVALUADOR,
  JSON_VALUE(elemento, '$.TIPO_DOCUMENTO.text')  AS TIPO_DOCUMENTO,
  JSON_VALUE(elemento, '$.VENTAS_ULTIMO_ANO_COL')  AS VENTAS_ULTIMO_ANO_COL,
  JSON_VALUE(custom, '$.MONTO_TOTAL_VALOR_APROBADO')  AS MONTO_TOTAL_VALOR_APROBADO,
  JSON_VALUE(custom, '$.MONTO_TOTAL_DE_RESPONSABILIDAD')  AS MONTO_TOTAL_DE_RESPONSABILIDAD,
  JSON_VALUE(custom, '$.MONTO_TOTAL_VALOR_APROBADO_OPERACIONES')  AS MONTO_TOTAL_VALOR_APROBADO_OPERACIONES
FROM `ribgo-desarrollo.admin.fill_form`, UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) AS elemento);



CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_INFORMACION_FINANCIERA_NATURAL` AS 
SELECT
  id_request as IN_id_request,
  NUMERO_DOCUMENTO as IN_NUMERO_DOCUMENTO,
  JSON_VALUE(pnatural,"$.RELEVO_GENERACIONAL_PERSONA_NATURAL" )  AS RELEVO_GENERACIONAL_PERSONA_NATURAL,
  JSON_VALUE(pnatural,"$.ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD" )  AS ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD,
  JSON_VALUE(pnatural,'$."NECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y/O_INSTALACIONES"')  AS NECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES,
  
FROM `ribgo-desarrollo.admin.fill_form`,UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) AS elemento
  WITH OFFSET AS indice,
 UNNEST(JSON_EXTRACT_ARRAY(elemento,'$.FORMULARIO_PERSONA_NATURAL')) as pnatural
LEFT JOIN

(select 
id_request as id_request_2,
indice,
JSON_VALUE(elemento,"$.NUMERO_DOCUMENTO") as NUMERO_DOCUMENTO
from 
`ribgo-desarrollo.admin.fill_form2`,UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) as elemento WITH OFFSET AS indice) as t1 on id_request=t1.id_request_2 and indice=t1.indice;


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_INFORMACION_FINANCIERA_JURIDICA` AS 
( select 
  id_request AS IJ_id_request,
  NUMERO_DOCUMENTO as IJ_NUMERO_DOCUMENTO,
  JSON_VALUE(pjuridica,"$.PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO" )  AS PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO,
  JSON_VALUE(pjuridica,"$.RELEVO_GENERACIONAL_PERSONA_JURIDICA" )  AS RELEVO_GENERACIONAL_PERSONA_JURIDICA,
  JSON_VALUE(pjuridica,"$.PRINCIPAL_APALANCAMIENTO_FINANCIERO" )  AS PRINCIPAL_APALANCAMIENTO_FINANCIERO,
  JSON_VALUE(pjuridica,"$.LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON:" )  AS LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON,
  JSON_VALUE(pjuridica,'$."PRODUCTOS_SUSTITUTOS_-_ENTORNO_(ENTORNO_DEL_MERCADO)"' )  AS PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO,
  JSON_VALUE(pjuridica,'$."ENTORNO_/_UBICACION_DEL_NEGOCIO"' )  AS ENTORNO_UBICACION_DEL_NEGOCIO,
  JSON_VALUE(pjuridica,'$."EXPERIENCIA_EN_LA_ACTIVIDAD_(ADMINISTRACION)"' )  AS EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION
  FROM `ribgo-desarrollo.admin.fill_form`, UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) AS elemento 
  WITH OFFSET AS indice,
 UNNEST(JSON_EXTRACT_ARRAY(elemento,'$.FORMULARIO_PERSONA_JURIDICA')) as pjuridica 
 LEFT JOIN

(select 
id_request as id_request_2,
indice,
JSON_VALUE(elemento,"$.NUMERO_DOCUMENTO") as NUMERO_DOCUMENTO
from 
`ribgo-desarrollo.admin.fill_form2`,UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) as elemento WITH OFFSET AS indice) as t1 on id_request=t1.id_request_2 and indice=t1.indice);



create or replace table dimensiones.mercado_indices as
  SELECT 0 AS indice2
  UNION ALL
  SELECT 1 AS indice2
  UNION ALL
  SELECT 2 AS indice2
  UNION ALL
  SELECT 3 AS indice2;



CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_MERCADO` AS 
(SELECT
id_request AS MERCADO_id_request,
NUMERO_DOCUMENTO as MERCADO_NUMERO_DOCUMENTO,
JSON_VALUE(elemento, '$.IMPORTA')  AS IMPORTA,
JSON_VALUE(elemento, '$.PAISES_A_LOS_CUALES_IMPORTA')  AS PAISES_A_LOS_CUALES_IMPORTA,
JSON_VALUE(elemento, '$.MONTOS_ANUALES_DE_IMPORTACION')  AS MONTOS_ANUALES_DE_IMPORTACION,
JSON_VALUE(elemento, '$.EXPORTA')  AS EXPORTA,
JSON_VALUE(elemento, '$.PAISES_A_LOS_CUALES_EXPORTA')  AS PAISES_A_LOS_CUALES_EXPORTA,
JSON_VALUE(elemento, '$.MONTOS_ANUALES_DE_EXPORTACION')  AS MONTOS_ANUALES_DE_EXPORTACION 
FROM 
`ribgo-desarrollo.admin.fill_form`, UNNEST(JSON_EXTRACT_ARRAY(custom, '$.MERCADO')) AS elemento   WITH OFFSET AS indice
LEFT JOIN

(select 
id_request as id_request_2,
indice,
JSON_VALUE(elemento,"$.NUMERO_DOCUMENTO") as NUMERO_DOCUMENTO
from 
`ribgo-desarrollo.admin.fill_form2`,UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) as elemento WITH OFFSET AS indice) as t1 on id_request=t1.id_request_2 and indice=t1.indice);


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_MERCADO` as
select distinct
t.MERCADO_id_request,
t.MERCADO_NUMERO_DOCUMENTO,
t.IMPORTA,
t.PAISES_A_LOS_CUALES_IMPORTA,
t.MONTOS_ANUALES_DE_IMPORTACION,
t.EXPORTA,
t.PAISES_A_LOS_CUALES_EXPORTA,
t.MONTOS_ANUALES_DE_EXPORTACION,
n.indice2
from `ribgo-desarrollo.dimensiones.json_table_MERCADO` as t
CROSS JOIN dimensiones.mercado_indices  AS n;




CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_MERCADO_PRODUCTO` AS 
(SELECT
id_request AS MERCADO_id_request,
NUMERO_DOCUMENTO as MERCADO_NUMERO_DOCUMENTO,
JSON_VALUE(MERCADO_PRODUCTOS,  '$.PRODUCTO')  AS PRODUCTO,
indice2 
FROM 
`ribgo-desarrollo.admin.fill_form`, UNNEST(JSON_EXTRACT_ARRAY(custom, '$.MERCADO')) AS elemento   WITH OFFSET AS indice,
 UNNEST(JSON_EXTRACT_ARRAY(elemento,'$.MERCADO_DE_PRODUCTOS')) as MERCADO_PRODUCTOS WITH OFFSET AS indice2
 LEFT JOIN

(select 
id_request as id_request_2,
indice,
JSON_VALUE(elemento,"$.NUMERO_DOCUMENTO") as NUMERO_DOCUMENTO
from 
`ribgo-desarrollo.admin.fill_form2`,UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) as elemento WITH OFFSET AS indice) as t1 on id_request=t1.id_request_2 and indice=t1.indice);




CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_MERCADO_CLIENTE` AS 
(SELECT
id_request AS MERCADO_id_request,
NUMERO_DOCUMENTO as MERCADO_NUMERO_DOCUMENTO,
JSON_VALUE(MERCADO_CLIENTES, '$.MERCADO')  AS MERCADO,
indice2 
FROM 
`ribgo-desarrollo.admin.fill_form`, UNNEST(JSON_EXTRACT_ARRAY(custom, '$.MERCADO')) AS elemento   WITH OFFSET AS indice,
 UNNEST(JSON_EXTRACT_ARRAY(elemento,'$.MERCADO_DE_CLIENTE')) as MERCADO_CLIENTES WITH OFFSET AS indice2
 LEFT JOIN

(select 
id_request as id_request_2,
indice,
JSON_VALUE(elemento,"$.NUMERO_DOCUMENTO") as NUMERO_DOCUMENTO
from 
`ribgo-desarrollo.admin.fill_form2`,UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) as elemento WITH OFFSET AS indice) as t1 on id_request=t1.id_request_2 and indice=t1.indice);



CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_MERCADO_PROVEEDOR` AS 
(SELECT
id_request AS MERCADO_id_request,
NUMERO_DOCUMENTO as MERCADO_NUMERO_DOCUMENTO,
JSON_VALUE(MERCADO_PROVEEDOR, '$.PROVEEDOR')  AS PROVEEDOR,
indice2 
FROM 
`ribgo-desarrollo.admin.fill_form`, UNNEST(JSON_EXTRACT_ARRAY(custom, '$.MERCADO')) AS elemento   WITH OFFSET AS indice,
UNNEST(JSON_EXTRACT_ARRAY(elemento,'$.MERCADO_DE_PROVEEDOR')) as MERCADO_PROVEEDOR WITH OFFSET AS indice2
 LEFT JOIN

(select 
id_request as id_request_2,
indice,
JSON_VALUE(elemento,"$.NUMERO_DOCUMENTO") as NUMERO_DOCUMENTO
from 
`ribgo-desarrollo.admin.fill_form2`,UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) as elemento WITH OFFSET AS indice) as t1 on id_request=t1.id_request_2 and indice=t1.indice);


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_MERCADO` AS
select MERCADO.*,PRODUCTO.PRODUCTO,CLIENTE.MERCADO,PROVEEDOR.PROVEEDOR FROM 
`ribgo-desarrollo.dimensiones.json_table_MERCADO` as MERCADO LEFT JOIN
`ribgo-desarrollo.dimensiones.json_table_MERCADO_PRODUCTO` as PRODUCTO ON 
MERCADO.MERCADO_id_request=PRODUCTO.MERCADO_id_request and MERCADO.MERCADO_NUMERO_DOCUMENTO=PRODUCTO.MERCADO_NUMERO_DOCUMENTO and MERCADO.indice2=PRODUCTO.indice2
LEFT JOIN
`ribgo-desarrollo.dimensiones.json_table_MERCADO_CLIENTE` as CLIENTE 
ON MERCADO.MERCADO_id_request=CLIENTE.MERCADO_id_request and  MERCADO.MERCADO_NUMERO_DOCUMENTO=CLIENTE.MERCADO_NUMERO_DOCUMENTO and MERCADO.indice2=CLIENTE.indice2 LEFT JOIN 
`ribgo-desarrollo.dimensiones.json_table_MERCADO_PROVEEDOR` as PROVEEDOR ON MERCADO.MERCADO_id_request=PROVEEDOR.MERCADO_id_request and  MERCADO.MERCADO_NUMERO_DOCUMENTO=PROVEEDOR.MERCADO_NUMERO_DOCUMENTO and MERCADO.indice2=PROVEEDOR.indice2;


select * from `ribgo-desarrollo.dimensiones.json_table_MERCADO` where MERCADO_id_request=536;

CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_INFORMACION_GENERAL` AS 
(SELECT 
id_request AS IG_id_request,
NUMERO_DOCUMENTO as IG_NUMERO_DOCUMENTO,
JSON_VALUE(elemento, '$.NOMBRE_CONTACTO')  AS NOMBRE_CONTACTO,
JSON_VALUE(elemento, '$.CELULAR_CONTACTO')  AS CELULAR_CONTACTO,
JSON_VALUE(elemento, '$.CORREO_CONTACTO')  AS CORREO_CONTACTO,
JSON_VALUE(elemento, '$.NUMERO_TOTAL_DE_EMPLEADOS')  AS NUMERO_TOTAL_DE_EMPLEADOS,
JSON_VALUE(elemento, '$."SALARIO_PROMEDIO_(EN_PESOS)"')  AS SALARIO_PROMEDIO_EN_PESOS,
JSON_EXTRACT_SCALAR(elemento, '$.SECTOR.code')  AS SECTOR_CODE,
JSON_EXTRACT_SCALAR(elemento, '$.SECTOR.text')  AS SECTOR,
JSON_EXTRACT_SCALAR(elemento, '$.ACTIVIDAD.code')  AS ACTIVIDAD_CODE,
JSON_EXTRACT_SCALAR(elemento, '$.ACTIVIDAD.text')  AS ACTIVIDAD,
JSON_EXTRACT_SCALAR(elemento, '$.CALIFICACION_R.code')  AS CALIFICACION_R_CODE,
JSON_EXTRACT_SCALAR(elemento, '$.CALIFICACION_R.text')  AS CALIFICACION_R,
JSON_EXTRACT_SCALAR(elemento, '$.TIPO_SOCIEDAD.code')  AS TIPO_SOCIEDAD_CODE,
JSON_EXTRACT_SCALAR(elemento, '$.TIPO_SOCIEDAD.text')  AS TIPO_SOCIEDAD,
JSON_value(elemento, '$.FECHA_CONSTITUCION')  AS FECHA_CONSTITUCION,
JSON_value(elemento, '$.INFORMACION_TECNICA')  AS INFORMACION_TECNICA,
JSON_EXTRACT_SCALAR(elemento, '$.PLANIFICADOR.code')  AS PLANIFICADOR_CODE,
JSON_EXTRACT_SCALAR(elemento, '$.PLANIFICADOR.text')  AS PLANIFICADOR,
JSON_EXTRACT_SCALAR(elemento, '$.ACTIVIDAD_AGROPRODUCTIVA.code')  AS ACTIVIDAD_AGROPECUARIA_CODE,
JSON_EXTRACT_SCALAR(elemento, '$.ACTIVIDAD_AGROPRODUCTIVA.text')  AS ACTIVIDAD_AGROPECUARIA,
JSON_EXTRACT_SCALAR(elemento, '$.DETALLE_ACTIVIDAD_AGROPRODUCTIVA.code')  AS DETALLE_ACTIVIDAD_AGROPRODUCTIVA_CODE,
JSON_EXTRACT_SCALAR(elemento, '$.DETALLE_ACTIVIDAD_AGROPRODUCTIVA.text')  AS DETALLE_ACTIVIDAD_AGROPRODUCTIVA,

FROM `ribgo-desarrollo.admin.fill_form`, UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_GENERAL_I')) AS elemento
WITH OFFSET AS indice
LEFT JOIN

(select 
id_request as id_request_2,
indice,
JSON_VALUE(elemento,"$.NUMERO_DOCUMENTO") as NUMERO_DOCUMENTO
from 
`ribgo-desarrollo.admin.fill_form2`,UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) as elemento WITH OFFSET AS indice) as t1 on id_request=t1.id_request_2 and indice=t1.indice);





CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_OPERACIONES_CP` AS 
(SELECT  DISTINCT
id_request AS  OP_id_request,
NUMERO_DOCUMENTO,
JSON_VALUE(elemento, '$.OBSERVACIONES_COMERCIALES')  AS OBSERVACIONES_COMERCIALES,
"Corto Plazo"  AS CLIENTE_SOLICITA_PLAZO,
JSON_VALUE(cortoplazo,"$.PRODUCTO_CORTO_PLAZO.text" ) AS PRODUCTO,
JSON_VALUE(cortoplazo,"$.CODIGO_BASE_CORTO_PLAZO" ) AS CODIGO_BASE,
JSON_VALUE(cortoplazo,"$.TIPO_PRODUCTO_CORTO_PLAZO" ) AS TIPO_PRODUCTO,
JSON_VALUE(cortoplazo,"$.MODALIDAD_PRODUCTO_CORTO_PLAZO" ) AS MODALIDAD_PRODUCTO,
JSON_VALUE(cortoplazo,"$.CODIGO_PRODUCTO_CORTO_PLAZO" ) AS CODIGO_PRODUCTO,
JSON_VALUE(cortoplazo,"$.MONTO_PRODUCTO_CORTO_PLAZO" ) AS MONTO_PRODUCTO,
JSON_VALUE(cortoplazo,"$.PLAZO_PRODUCTO_CORTO_PLAZO" ) AS PLAZO_PRODUCTO,
JSON_VALUE(cortoplazo,"$.PERIODO_GRACIA_PRODUCTO_CORTO_PLAZO" ) AS PERIODO_GRACIA_PRODUCTO,
JSON_VALUE(cortoplazo,'$."DETALLE_GARANTIA/AVALISTA/OTRA_PRODUCTO_CORTO_PLAZO"' ) AS DETALLE_GARANTIA_AVALISTA_OTRA_PRODUCTO,
JSON_VALUE(cortoplazo,"$.DECISION_CORTO_PLAZO.text" ) AS DECISION,
JSON_VALUE(cortoplazo,"$.VALOR_APROBADO_CORTO_PLAZO" ) AS VALOR_APROBADO,
JSON_VALUE(cortoplazo,"$.VIGENCIA_HASTA_CORTO_PLAZO" ) AS VIGENCIA_HASTA,
JSON_VALUE(cortoplazo,"$.DESTINO_CORTO_PLAZO.text" ) AS DESTINO,
JSON_VALUE(cortoplazo,"$.FUENTES_DE_PAGO_PRODUCTO_CORTO_PLAZO.text" ) AS FUENTES_DE_PAGO_PRODUCTO,
JSON_VALUE(cortoplazo,'$."OTRA/_FUENTE_DE_PAGO_PRODUCTO_CORTO_PLAZO"' ) AS OTRA_FUENTE_DE_PAGO_PRODUCTO,
"" as DESTINO_RECURSOS_PRODUCTO,
"" as MONTO_TOTAL_INVERSION_PRODUCTO,
"" as APORTE_RECURSOS_PROPIOS_Y_O_SOCIOS_PRODUCTO,
"" as TIPO_DE_FONDEO_PRODUCTO,
"" as DETALLE_APORTES_PROPIOS_PRODUCTO,
JSON_VALUE(cortoplazo,"$.TASA_PONDERADA_CORTO_PLAZO" ) AS TASA_PONDERADA,
JSON_VALUE(cortoplazo,"$.NUMERO_DE_OBLIGACIONES_RECOGER_CORTO_PLAZO" ) AS NUMERO_DE_OBLIGACIONES_RECOGER,
JSON_VALUE(cortoplazo,"$.AMORTIZACION_K_CORTO_PLAZO.text" ) AS AMORTIZACION_K,
JSON_VALUE(cortoplazo,"$.AMORTIZACION_I_CORTO_PLAZO.text" ) AS AMORTIZACION_I,
JSON_VALUE(elemento,"$.TOTAL_SOLICITADO_CLIENTE" ) AS TOTAL_SOLICITADO_CLIENTE,
JSON_VALUE(elemento,"$.TOTAL_VALOR_APROBADO_CLIENTE" ) AS TOTAL_VALOR_APROBADO_CLIENTE,
JSON_VALUE(elemento,"$.DECISION_CLIENTE" ) AS DECISION_CLIENTE
FROM `ribgo-desarrollo.admin.fill_form2`, UNNEST(JSON_EXTRACT_ARRAY(custom_operaciones, '$.OPERACIONES')) AS elemento WITH OFFSET AS indice,
UNNEST(JSON_EXTRACT_ARRAY(elemento, "$.CORTO_PLAZO")) AS cortoplazo, 
UNNEST(JSON_EXTRACT_ARRAY(elemento, "$['CLIENTE_SOLICITA_(PLAZO)']"  )) as plazos
LEFT JOIN  
(select 
id_request as id_request_2,
indice,
JSON_VALUE(elemento,"$.NUMERO_DOCUMENTO") as NUMERO_DOCUMENTO
from 
`ribgo-desarrollo.admin.fill_form2`,UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) as elemento WITH OFFSET AS indice) as t1 on id_request=t1.id_request_2 and indice=t1.indice);
/*
create or replace table dimensiones.garantia_indices as
  SELECT 0 AS indice2
  UNION ALL
  SELECT 1 AS indice2
  UNION ALL
  SELECT 2 AS indice2
  UNION ALL
  SELECT 3 AS indice2
  UNION ALL
  SELECT 4 AS indice2
  UNION ALL
  SELECT 5 AS indice2
  UNION ALL
  SELECT 6 AS indice2
  UNION ALL
  SELECT 7 AS indice2
  UNION ALL
  SELECT 8 AS indice2
  UNION ALL
  SELECT 9 AS indice2
  UNION ALL
  SELECT 10 AS indice2;


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.GARANTIAS`
AS
(SELECT  DISTINCT
id_request AS  OP_id_request,
NUMERO_DOCUMENTO,
FROM `ribgo-desarrollo.admin.fill_form2`, UNNEST(JSON_EXTRACT_ARRAY(custom_operaciones, '$.OPERACIONES')) AS elemento WITH OFFSET AS
indice
LEFT JOIN  
(select 
id_request as id_request_2,
indice,
JSON_VALUE(elemento,"$.NUMERO_DOCUMENTO") as NUMERO_DOCUMENTO
from 
`ribgo-desarrollo.admin.fill_form2`,UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) as elemento WITH OFFSET AS indice) as t1 on id_request=t1.id_request_2 and indice=t1.indice);


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.GARANTIAS` as
select distinct
t.OP_id_request
t.NUMERO_DOCUMENTO,
n.indice2
from `ribgo-desarrollo.dimensiones.GARANTIAS` as t
CROSS JOIN dimensiones.garantia_indices  AS n;
*/

CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_GARANTIA_CP` AS 
(SELECT  DISTINCT
id_request AS  OP_id_request,
NUMERO_DOCUMENTO,
JSON_VALUE(garantia.text)  AS GARANTIA_PRODUCTO,
JSON_VALUE(cortoplazo,"$.PRODUCTO_CORTO_PLAZO.text" ) AS PRODUCTO
FROM `ribgo-desarrollo.admin.fill_form2`, UNNEST(JSON_EXTRACT_ARRAY(custom_operaciones, '$.OPERACIONES')) AS elemento WITH OFFSET AS indice,
UNNEST(JSON_EXTRACT_ARRAY(elemento, "$.CORTO_PLAZO")) AS cortoplazo, 
UNNEST(JSON_EXTRACT_ARRAY(cortoplazo, "$.GARANTIA_PRODUCTO_CORTO_PLAZO")) AS garantia WITH OFFSET AS indice2
LEFT JOIN  
(select 
id_request as id_request_2,
indice,
JSON_VALUE(elemento,"$.NUMERO_DOCUMENTO") as NUMERO_DOCUMENTO
from 
`ribgo-desarrollo.admin.fill_form2`,UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) as elemento WITH OFFSET AS indice) as t1 on id_request=t1.id_request_2 and indice=t1.indice);



CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_OPERACIONES_LP` AS 
(SELECT  
id_request AS  OP_LP_id_request,
t1.NUMERO_DOCUMENTO as NUMERO_DOCUMENTO,
JSON_VALUE(elemento, '$.OBSERVACIONES_COMERCIALES')  AS OBSERVACIONES_COMERCIALES,
"Largo Plazo"  AS CLIENTE_SOLICITA_PLAZO,
JSON_VALUE(largoplazo,"$.PRODUCTO_LARGO_PLAZO.text" ) AS PRODUCTO,
JSON_VALUE(largoplazo,"$.CODIGO_BASE_LARGO_PLAZO" ) AS CODIGO_BASE,
JSON_VALUE(largoplazo,"$.TIPO_PRODUCTO_LARGO_PLAZO" ) AS TIPO_PRODUCTO,
JSON_VALUE(largoplazo,"$.MODALIDAD_PRODUCTO_LARGO_PLAZO" ) AS MODALIDAD_PRODUCTO,
JSON_VALUE(largoplazo,"$.CODIGO_PRODUCTO_LARGO_PLAZO" ) AS CODIGO_PRODUCTO,
JSON_VALUE(largoplazo,"$.MONTO_PRODUCTO_LARGO_PLAZO" ) AS MONTO_PRODUCTO,
JSON_VALUE(largoplazo,"$.PLAZO_PRODUCTO_LARGO_PLAZO" ) AS PLAZO_PRODUCTO,
JSON_VALUE(largoplazo,"$.PERIODO_GRACIA_PRODUCTO_LARGO_PLAZO" ) AS PERIODO_GRACIA_PRODUCTO,
JSON_VALUE(largoplazo,'$."DETALLE_GARANTIA/AVALISTA/OTRA_PRODUCTO_LARGO_PLAZO"' ) AS DETALLE_GARANTIA_AVALISTA_OTRA_PRODUCTO,
JSON_VALUE(largoplazo,"$.DECISION_LARGO_PLAZO.text" ) AS DECISION,
JSON_VALUE(largoplazo,"$.VALOR_APROBADO_LARGO_PLAZO" ) AS VALOR_APROBADO,
JSON_VALUE(largoplazo,"$.VIGENCIA_HASTA_LARGO_PLAZO" ) AS VIGENCIA_HASTA,
JSON_VALUE(largoplazo,"$.DESTINO_LARGO_PLAZO.text" ) AS DESTINO,
JSON_VALUE(largoplazo,"$.FUENTES_DE_PAGO_PRODUCTO_LARGO_PLAZO.text" ) AS FUENTES_DE_PAGO_PRODUCTO,
JSON_VALUE(largoplazo,'$."OTRA/_FUENTE_DE_PAGO_PRODUCTO_LARGO_PLAZO"' ) AS OTRA_FUENTE_DE_PAGO_PRODUCTO,
JSON_VALUE(largoplazo,'$."DESTINO_RECURSOS_PRODUCTO_LARGO_PLAZO"' ) AS DESTINO_RECURSOS_PRODUCTO,
JSON_VALUE(largoplazo,'$."MONTO_TOTAL_INVERSION_PRODUCTO_LARGO_PLAZO"' ) AS MONTO_TOTAL_INVERSION_PRODUCTO,
JSON_VALUE(largoplazo,'$."APORTE_RECURSOS_PROPIOS_Y/O_SOCIOS_PRODUCTO_LARGO_PLAZO"' ) AS APORTE_RECURSOS_PROPIOS_Y_O_SOCIOS_PRODUCTO,
JSON_VALUE(largoplazo,'$."TIPO_DE_FONDEO_PRODUCTO_LARGO_PLAZO"' ) AS TIPO_DE_FONDEO_PRODUCTO,
JSON_VALUE(largoplazo,'$."DETALLE_APORTES_PROPIOS_PRODUCTO_LARGO_PLAZO"' ) AS DETALLE_APORTES_PROPIOS_PRODUCTO,
JSON_VALUE(largoplazo,"$.TASA_PONDERADA_LARGO_PLAZO" ) AS TASA_PONDERADA,
JSON_VALUE(largoplazo,"$.NUMERO_DE_OBLIGACIONES_RECOGER_LARGO_PLAZO" ) AS NUMERO_DE_OBLIGACIONES_RECOGER,
JSON_VALUE(largoplazo,"$.AMORTIZACION_K_LARGO_PLAZO.text" ) AS AMORTIZACION_K,
JSON_VALUE(largoplazo,"$.AMORTIZACION_I_LARGO_PLAZO.text" ) AS AMORTIZACION_I,
JSON_VALUE(elemento,"$.TOTAL_SOLICITADO_CLIENTE" ) AS TOTAL_SOLICITADO_CLIENTE,
JSON_VALUE(elemento,"$.TOTAL_VALOR_APROBADO_CLIENTE" ) AS TOTAL_VALOR_APROBADO_CLIENTE,
JSON_VALUE(elemento,"$.DECISION_CLIENTE" ) AS DECISION_CLIENTE
FROM `ribgo-desarrollo.admin.fill_form2`, UNNEST(JSON_EXTRACT_ARRAY(custom_operaciones, '$.OPERACIONES')) AS elemento  WITH OFFSET AS indice,
UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) AS elemento2,
UNNEST(JSON_EXTRACT_ARRAY(elemento, "$.LARGO_PLAZO")) AS largoplazo,
UNNEST(JSON_EXTRACT_ARRAY(elemento, "$['CLIENTE_SOLICITA_(PLAZO)']"  )) as plazos
 LEFT JOIN  
(select 
id_request as id_request_2,
indice,
JSON_VALUE(elemento,"$.NUMERO_DOCUMENTO") as NUMERO_DOCUMENTO
from 
`ribgo-desarrollo.admin.fill_form2`,UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) as elemento WITH OFFSET AS indice) as t1 on id_request=t1.id_request_2 and indice=t1.indice);


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_GARANTIA_LP` AS 
(SELECT  DISTINCT
id_request AS  OP_id_request,
NUMERO_DOCUMENTO,
JSON_VALUE(garantia.text)  AS GARANTIA_PRODUCTO,
JSON_VALUE(largoplazo,"$.PRODUCTO_LARGO_PLAZO.text" ) AS PRODUCTO

FROM `ribgo-desarrollo.admin.fill_form2`, UNNEST(JSON_EXTRACT_ARRAY(custom_operaciones, '$.OPERACIONES')) AS elemento WITH OFFSET AS indice,
UNNEST(JSON_EXTRACT_ARRAY(elemento, "$.LARGO_PLAZO")) AS largoplazo WITH OFFSET AS indice_pr, 
UNNEST(JSON_EXTRACT_ARRAY(largoplazo, "$.GARANTIA_PRODUCTO_LARGO_PLAZO")) AS garantia WITH OFFSET AS indice2
LEFT JOIN  
(select 
id_request as id_request_2,
indice,
JSON_VALUE(elemento,"$.NUMERO_DOCUMENTO") as NUMERO_DOCUMENTO
from 
`ribgo-desarrollo.admin.fill_form2`,UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) as elemento WITH OFFSET AS indice) as t1 on id_request=t1.id_request_2 and indice=t1.indice);



CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_OPERACIONES` AS
select * from `ribgo-desarrollo.dimensiones.json_table_OPERACIONES_CP`  UNION ALL 
SELECT * from `ribgo-desarrollo.dimensiones.json_table_OPERACIONES_LP`;



CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_GARANTIA` AS
select * from `ribgo-desarrollo.dimensiones.json_table_GARANTIA_CP`  UNION ALL 
SELECT * from `ribgo-desarrollo.dimensiones.json_table_GARANTIA_LP`;


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_OPERACIONES` AS
select OPERACIONES.*,GARANTIA.GARANTIA_PRODUCTO from `ribgo-desarrollo.dimensiones.json_table_OPERACIONES` AS OPERACIONES LEFT JOIN
`ribgo-desarrollo.dimensiones.json_table_GARANTIA` AS GARANTIA ON
OPERACIONES.OP_id_request=GARANTIA.OP_id_request AND
OPERACIONES.NUMERO_DOCUMENTO=GARANTIA.NUMERO_DOCUMENTO AND
OPERACIONES.PRODUCTO=GARANTIA.PRODUCTO;


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_OPERACIONES` AS 
select DISTINCT * FROM `ribgo-desarrollo.dimensiones.json_table_OPERACIONES`;



CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_INFORMACION_MOVIMIENTO` AS 
(SELECT
  id_request AS  IM_id_request,
  NUMERO_DOCUMENTO as IM_NUMERO_DOCUMENTO,
  JSON_VALUE(elemento, '$.REQUIERE_TECNICO')  AS REQUIERE_TECNICO,
  JSON_VALUE(elemento, '$.CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO')  AS CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO,
  JSON_VALUE(elemento, '$.PUNTAJE_CIFIN')  AS PUNTAJE_CIFIN,
  FROM `ribgo-desarrollo.admin.fill_form`,
  UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_MOVIMIENTO')) AS elemento WITH OFFSET AS indice
LEFT JOIN

(select 
id_request as id_request_2,
indice,
JSON_VALUE(elemento,"$.NUMERO_DOCUMENTO") as NUMERO_DOCUMENTO
from 
`ribgo-desarrollo.admin.fill_form2`,UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) as elemento WITH OFFSET AS indice) as t1 on id_request=t1.id_request_2 and indice=t1.indice);

CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_RUBRO_LARGO_PLAZO` AS 
(
select 
id_request AS RUBROLARGPLAZO_id_request,
t1.NUMERO_DOCUMENTO as RUBROLARGPLAZO_NUMERO_DOCUMENTO, 
JSON_VALUE(largoplazo,"$.PRODUCTO_LARGO_PLAZO.text" ) AS PRODUCTO,
JSON_VALUE(rubrolargoplazo,"$.CODIGO_RUBRO_LARGO_PLAZO.text" ) AS CODIGO_RUBRO_LARGO_PLAZO,
JSON_VALUE(rubrolargoplazo,"$.DESCRIPCION_CODIGO_RUBRO_LARGO_PLAZO" ) AS DESCRIPCION_CODIGO_RUBRO_LARGO_PLAZO,
JSON_VALUE(rubrolargoplazo,"$.VALOR_PROYECTO_LARGO_PLAZO" ) AS VALOR_PROYECTO_LARGO_PLAZO,
JSON_VALUE(rubrolargoplazo,"$.UNIDADES_A_FINANCIAR_LARGO_PLAZO" ) AS UNIDADES_A_FINANCIAR_LARGO_PLAZO,
JSON_VALUE(rubrolargoplazo,"$.MONTO_A_FINANCIAR_LARGO_PLAZO" ) AS MONTO_A_FINANCIAR_LARGO_PLAZO,
FROM `ribgo-desarrollo.admin.fill_form2`,
UNNEST(JSON_EXTRACT_ARRAY(custom_operaciones, '$.OPERACIONES')) AS elemento WITH OFFSET AS indice,
UNNEST(JSON_EXTRACT_ARRAY(elemento, "$.LARGO_PLAZO")) AS largoplazo,
UNNEST(JSON_EXTRACT_ARRAY(largoplazo, "$.RUBROS_LARGO_PLAZO")) as rubrolargoplazo
LEFT JOIN  
(select 
id_request as id_request_2,
indice,
JSON_VALUE(elemento,"$.NUMERO_DOCUMENTO") as NUMERO_DOCUMENTO
from 
`ribgo-desarrollo.admin.fill_form2`,UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) as elemento WITH OFFSET AS indice) as t1 on id_request=t1.id_request_2 and indice=t1.indice);




CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_RUBRO_CORTO_PLAZO` AS 
(
select 
id_request AS RUBROCORTOPLAZO_id_request, 
t1.NUMERO_DOCUMENTO as RUBROCORTOPLAZO_NUMERO_DOCUMENTO,
JSON_VALUE(cortoplazo,"$.PRODUCTO_CORTO_PLAZO.text" ) AS PRODUCTO,
JSON_VALUE(rubrocortoplazo,"$.CODIGO_RUBRO_CORTO_PLAZO.text" ) AS CODIGO_RUBRO_CORTO_PLAZO,
JSON_VALUE(rubrocortoplazo,"$.DESCRIPCION_CODIGO_RUBRO_CORTO_PLAZO" ) AS DESCRIPCION_CODIGO_RUBRO_CORTO_PLAZO,
JSON_VALUE(rubrocortoplazo,"$.VALOR_PROYECTO_CORTO_PLAZO" ) AS VALOR_PROYECTO_CORTO_PLAZO,
JSON_VALUE(rubrocortoplazo,"$.UNIDADES_A_FINANCIAR_CORTO_PLAZO" ) AS UNIDADES_A_FINANCIAR_CORTO_PLAZO,
JSON_VALUE(rubrocortoplazo,"$.MONTO_A_FINANCIAR_CORTO_PLAZO" ) AS MONTO_A_FINANCIAR_CORTO_PLAZO
FROM `ribgo-desarrollo.admin.fill_form2`,
UNNEST(JSON_EXTRACT_ARRAY(custom_operaciones, '$.OPERACIONES')) AS elemento WITH OFFSET AS indice,
UNNEST(JSON_EXTRACT_ARRAY(elemento, "$.CORTO_PLAZO")) AS cortoplazo,
UNNEST(JSON_EXTRACT_ARRAY(cortoplazo, "$.RUBROS_CORTO_PLAZO")) as rubrocortoplazo
LEFT JOIN  
(select 
id_request as id_request_2,
indice,
JSON_VALUE(elemento,"$.NUMERO_DOCUMENTO") as NUMERO_DOCUMENTO
from 
`ribgo-desarrollo.admin.fill_form2`,UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) as elemento WITH OFFSET AS indice) as t1 on id_request=t1.id_request_2 and indice=t1.indice);



CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_AVALISTAS` AS 
(
SELECT 
id_request AS AV_id_request,
t1.NUMERO_DOCUMENTO as AV_NUMERO_DOCUMENTO,
JSON_VALUE(avalistas,"$.NOMBRE_AVALISTA" ) AS NOMBRE_AVALISTA,
JSON_VALUE(avalistas,"$.DOCUMENTO_AVALISTA" ) AS DOCUMENTO_AVALISTA
FROM `ribgo-desarrollo.admin.fill_form2`, UNNEST(JSON_EXTRACT_ARRAY(custom_operaciones, '$.OPERACIONES')) AS elemento WITH OFFSET AS indice,
UNNEST(JSON_EXTRACT_ARRAY(elemento, '$.AVALISTAS')) AS avalistas
LEFT JOIN  
(select 
id_request as id_request_2,
indice,
JSON_VALUE(elemento,"$.NUMERO_DOCUMENTO") as NUMERO_DOCUMENTO
from 
`ribgo-desarrollo.admin.fill_form2`,UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) as elemento WITH OFFSET AS indice) as t1 on id_request=t1.id_request_2 and indice=t1.indice);






CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_RESUMEN_ATRIBUCION` AS 
(select
id_request AS RA_id_request, 
t1.NUMERO_DOCUMENTO AS RA_NUMERO_DOCUMENTO,
JSON_VALUE(elemento, '$.LIMITE_PORTAFOLIO')  AS LIMITE_PORTAFOLIO,
JSON_VALUE(elemento, '$.TOTAL_VALOR_APROBADO')  AS TOTAL_VALOR_APROBADO,
JSON_VALUE(elemento, '$."ENDEUDAMIENTO_CONSOLIDADO_/_RELACIONADO"')  AS ENDEUDAMIENTO_CONSOLIDADO_RELACIONADO,
JSON_VALUE(elemento, '$.TIPO_R.text')  AS TIPO_R,
JSON_VALUE(elemento, '$.RESPONSABLE_FIRMA_PAG.text')  AS RESPONSABLE_FIRMA_PAG,
JSON_VALUE(elemento, '$.LISTA_DE_RESTRICCIONES.text')  AS LISTA_DE_RESTRICCIONES,
JSON_VALUE(elemento, '$.CONDICIONES_ESPECIALES.text')  AS CONDICIONES_ESPECIALES,
JSON_VALUE(elemento, '$.OBSERVACIONES_ADICIONALES')  AS OBSERVACIONES_ADICIONALES
FROM `ribgo-desarrollo.admin.fill_form2`,
UNNEST(JSON_EXTRACT_ARRAY(custom_resumen_atribucion, '$.RESUMEN_ATRIBUCION')) AS elemento WITH OFFSET AS indice
LEFT JOIN  
(select 
id_request as id_request_2,
indice,
JSON_VALUE(elemento,"$.NUMERO_DOCUMENTO") as NUMERO_DOCUMENTO
from 
`ribgo-desarrollo.admin.fill_form2`,UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) as elemento WITH OFFSET AS indice) as t1 on id_request=t1.id_request_2 and indice=t1.indice);




CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_CN_RESUMEN_ATRIBUCION` AS 
(select
id_request AS CN_id_request, 
t1.NUMERO_DOCUMENTO AS CN_NUMERO_DOCUMENTO,
JSON_VALUE(cn.text)  AS CAUSALES_NEGACION
FROM `ribgo-desarrollo.admin.fill_form2`,
UNNEST(JSON_EXTRACT_ARRAY(custom_resumen_atribucion, '$.RESUMEN_ATRIBUCION')) AS elemento WITH OFFSET AS indice,
UNNEST(JSON_EXTRACT_ARRAY(elemento, "$['CAUSALES_NEGACION']"  )) as cn
LEFT JOIN  
(select 
id_request as id_request_2,
indice,
JSON_VALUE(elemento,"$.NUMERO_DOCUMENTO") as NUMERO_DOCUMENTO
from 
`ribgo-desarrollo.admin.fill_form2`,UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) as elemento WITH OFFSET AS indice) as t1 on id_request=t1.id_request_2 and indice=t1.indice);


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_RESUMEN_ATRIBUCION` AS 
(select RA.*,CN.CAUSALES_NEGACION
FROM `ribgo-desarrollo.dimensiones.json_table_RESUMEN_ATRIBUCION` RA LEFT JOIN
`ribgo-desarrollo.dimensiones.json_table_CN_RESUMEN_ATRIBUCION` CN
ON RA.RA_id_request=CN.CN_id_request AND
RA.RA_NUMERO_DOCUMENTO=CN.CN_NUMERO_DOCUMENTO);




CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_AYUDA_OBSERVACIONES` AS 
(select 
id_request AS AYOBS_id_request, 
t1.NUMERO_DOCUMENTO AS AYOBS_NUMERO_DOCUMENTO,
JSON_VALUE(observaciones, '$.OBSERVACIONES_LISTA')  AS OBSERVACIONES_LISTA,
JSON_VALUE(observaciones, '$.OBSERVACIONES_RECOMENDACIONES')  AS OBSERVACIONES_RECOMENDACIONES,
JSON_VALUE(observaciones, '$.OBSERVACIONES_EJEMPLO')  AS OBSERVACIONES_EJEMPLO,
JSON_VALUE(elemento, '$.OBSERVACIONES_ADICIONALES')  AS OBSERVACIONES_ADICIONALES
FROM `ribgo-desarrollo.admin.fill_form2`,
UNNEST(JSON_EXTRACT_ARRAY(custom_resumen_atribucion, '$.RESUMEN_ATRIBUCION')) AS elemento WITH OFFSET AS indice,
UNNEST(JSON_EXTRACT_ARRAY(elemento, '$.AYUDA_OBSERVACIONES')) AS observaciones
LEFT JOIN  
(select 
id_request as id_request_2,
indice,
JSON_VALUE(elemento,"$.NUMERO_DOCUMENTO") as NUMERO_DOCUMENTO
from 
`ribgo-desarrollo.admin.fill_form2`,UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) as elemento WITH OFFSET AS indice) as t1 on id_request=t1.id_request_2 and indice=t1.indice);





CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_INFORMACION_FINANCIERA` AS 
SELECT DISTINCT * FROM `ribgo-desarrollo.dimensiones.json_table_INFORMACION_FINANCIERA`;

CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_INFORMACION_FINANCIERA_JURIDICA` AS 
SELECT DISTINCT * FROM `ribgo-desarrollo.dimensiones.json_table_INFORMACION_FINANCIERA_JURIDICA`;

CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_INFORMACION_GENERAL` AS 
SELECT DISTINCT * FROM `ribgo-desarrollo.dimensiones.json_table_INFORMACION_GENERAL`;

CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_INFORMACION_MOVIMIENTO` AS 
SELECT DISTINCT * FROM `ribgo-desarrollo.dimensiones.json_table_INFORMACION_MOVIMIENTO`;

CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_MERCADO` AS 
SELECT DISTINCT * FROM `ribgo-desarrollo.dimensiones.json_table_MERCADO`;

CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_RESUMEN_ATRIBUCION` AS 
select distinct * from `ribgo-desarrollo.dimensiones.json_table_RESUMEN_ATRIBUCION`;


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_OPERACIONES` AS 
select distinct * from `ribgo-desarrollo.dimensiones.json_table_OPERACIONES`;




CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_AVALISTAS` AS 
select distinct * from `ribgo-desarrollo.dimensiones.json_table_AVALISTAS`;


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_RUBRO_CORTO_PLAZO` AS 
select distinct * from `ribgo-desarrollo.dimensiones.json_table_RUBRO_CORTO_PLAZO`;

CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_RUBRO_LARGO_PLAZO` AS 
select distinct * from `ribgo-desarrollo.dimensiones.json_table_RUBRO_LARGO_PLAZO`;


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_INFORMACION_ENTRADA` AS
SELECT distinct
INFORMACION_FINANCIERA.id_request,
INFORMACION_FINANCIERA.NUMERO_DOCUMENTO,
INFORMACION_FINANCIERA.CONFORMA_GRUPO_FINANCIERO,
INFORMACION_FINANCIERA.NOMBRE_GRUPO_FINANCIERO,
INFORMACION_FINANCIERA.NUMERO_EMPRESAS,
INFORMACION_FINANCIERA.OFICINA_RADICACION,
INFORMACION_FINANCIERA.SUCURSAL,
INFORMACION_FINANCIERA.REGIONAL,
INFORMACION_FINANCIERA.ANO_AL_QUE_CORRESPONDEN_LAS_VENTAS,
INFORMACION_FINANCIERA.CERTIFICADO_CLIENTE_VINCULADO_360,
INFORMACION_FINANCIERA.CIIU,
INFORMACION_FINANCIERA.DEPARTAMENTO_EVALUADOR_NOMBRE,
INFORMACION_FINANCIERA.DEPARTAMENTO_EVALUADOR_SEGMENTO,
INFORMACION_FINANCIERA.DEPARTAMENTO_EVALUADOR_WEIGHT,
INFORMACION_FINANCIERA.DETALLE_CIIU,
INFORMACION_FINANCIERA.ANO_CIERRE,
INFORMACION_FINANCIERA.ACTIVOS_ANO,
INFORMACION_FINANCIERA.PASIVO_ANO,
INFORMACION_FINANCIERA.PATRIMONIO_ANO,
INFORMACION_FINANCIERA.ANO_CORTE,
INFORMACION_FINANCIERA.ACTIVO_CORTE,
INFORMACION_FINANCIERA.INGRESOS_CORTE,
INFORMACION_FINANCIERA.PERIODO_DIAS,
INFORMACION_FINANCIERA.ESTRATEGIA,
INFORMACION_FINANCIERA.ESTRATEGIA_BASE,
INFORMACION_FINANCIERA.TIPO_PRODUCTOR,
INFORMACION_FINANCIERA.ID_CONTADOR,
INFORMACION_FINANCIERA.NOMBRE_CONTADOR_O_REVISOR,
INFORMACION_FINANCIERA.NOMBRE_EMPRESA,
INFORMACION_FINANCIERA.PESO_DEL_DEPARTAMENTO_EVALUADOR,
INFORMACION_FINANCIERA.SCACS,
INFORMACION_FINANCIERA.SEGMENTO_DEPARTAMENTO_EVALUADOR,
INFORMACION_FINANCIERA.TIPO_DOCUMENTO,
INFORMACION_FINANCIERA.VENTAS_ULTIMO_ANO_COL,
INFORMACION_FINANCIERA.MONTO_TOTAL_VALOR_APROBADO,
INFORMACION_FINANCIERA.MONTO_TOTAL_DE_RESPONSABILIDAD,
INFORMACION_FINANCIERA.MONTO_TOTAL_VALOR_APROBADO_OPERACIONES
FROM `ribgo-desarrollo.dimensiones.json_table_INFORMACION_FINANCIERA` as INFORMACION_FINANCIERA;



CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_informacion_movimiento_pivot` AS
SELECT distinct
INFORMACION_MOVIMIENTO.IM_id_request,
IM_NUMERO_DOCUMENTO as IM_NUMERO_DOCUMENTO,
INFORMACION_MOVIMIENTO.REQUIERE_TECNICO,
INFORMACION_MOVIMIENTO.CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO,
INFORMACION_MOVIMIENTO.PUNTAJE_CIFIN
from `ribgo-desarrollo.dimensiones.json_table_INFORMACION_MOVIMIENTO` as INFORMACION_MOVIMIENTO;


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_informacion_movimiento_pivot` as 
select 
IM_id_request,
IM_NUMERO_DOCUMENTO,
SPLIT(STRING_AGG(REQUIERE_TECNICO,","),",")   as REQUIERE_TECNICO,
SPLIT(STRING_AGG(CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO,","),",")   as CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO,
SPLIT(STRING_AGG(PUNTAJE_CIFIN,","),",")   as PUNTAJE_CIFIN
from `ribgo-desarrollo.dimensiones.json_table_informacion_movimiento_pivot`
Group by IM_id_request,IM_NUMERO_DOCUMENTO
order by IM_id_request;


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_informacion_movimiento_pivot` as 
select 
IM_id_request,
IM_NUMERO_DOCUMENTO,
SAFE_CAST(IF( ARRAY_LENGTH(REQUIERE_TECNICO)>=1 ,REQUIERE_TECNICO[OFFSET(0)],null) AS STRING) AS REQUIERE_TECNICO_1,
SAFE_CAST(IF( ARRAY_LENGTH(REQUIERE_TECNICO)>=2 ,REQUIERE_TECNICO[OFFSET(1)],null) AS STRING) AS REQUIERE_TECNICO_2,
SAFE_CAST(IF( ARRAY_LENGTH(REQUIERE_TECNICO)>=3 ,REQUIERE_TECNICO[OFFSET(2)],null) AS STRING) AS REQUIERE_TECNICO_3,
SAFE_CAST(IF( ARRAY_LENGTH(REQUIERE_TECNICO)>=4 ,REQUIERE_TECNICO[OFFSET(3)],null) AS STRING) AS REQUIERE_TECNICO_4,
SAFE_CAST(IF( ARRAY_LENGTH(REQUIERE_TECNICO)>=5 ,REQUIERE_TECNICO[OFFSET(4)],null) AS STRING) AS REQUIERE_TECNICO_5,

SAFE_CAST(IF( ARRAY_LENGTH(CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO)>=1 ,CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO[OFFSET(0)],null) AS STRING) AS CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO_1,
SAFE_CAST(IF( ARRAY_LENGTH(CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO)>=2 ,CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO[OFFSET(1)],null) AS STRING) AS CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO_2,
SAFE_CAST(IF( ARRAY_LENGTH(CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO)>=3 ,CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO[OFFSET(2)],null) AS STRING) AS CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO_3,
SAFE_CAST(IF( ARRAY_LENGTH(CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO)>=4 ,CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO[OFFSET(3)],null) AS STRING) AS CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO_4,
SAFE_CAST(IF( ARRAY_LENGTH(CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO)>=5 ,CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO[OFFSET(4)],null) AS STRING) AS CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO_5,

SAFE_CAST(IF( ARRAY_LENGTH(PUNTAJE_CIFIN)>=1 ,PUNTAJE_CIFIN[OFFSET(0)],null) AS INT64) AS PUNTAJE_CIFIN_1,
SAFE_CAST(IF( ARRAY_LENGTH(PUNTAJE_CIFIN)>=2 ,PUNTAJE_CIFIN[OFFSET(1)],null) AS INT64) AS PUNTAJE_CIFIN_2,
SAFE_CAST(IF( ARRAY_LENGTH(PUNTAJE_CIFIN)>=3 ,PUNTAJE_CIFIN[OFFSET(2)],null) AS INT64) AS PUNTAJE_CIFIN_3,
SAFE_CAST(IF( ARRAY_LENGTH(PUNTAJE_CIFIN)>=4 ,PUNTAJE_CIFIN[OFFSET(3)],null) AS INT64) AS PUNTAJE_CIFIN_4,
SAFE_CAST(IF( ARRAY_LENGTH(PUNTAJE_CIFIN)>=5 ,PUNTAJE_CIFIN[OFFSET(4)],null) AS INT64) AS PUNTAJE_CIFIN_5,

from `ribgo-desarrollo.dimensiones.json_table_informacion_movimiento_pivot`
order by IM_id_request;


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_mercado_pivot` AS
SELECT 
MERCADO.MERCADO_id_request,
MERCADO.MERCADO_NUMERO_DOCUMENTO,
MERCADO.IMPORTA,
MERCADO.EXPORTA,
MERCADO.PRODUCTO,
MERCADO.MERCADO,
MERCADO.PROVEEDOR,
MERCADO.PAISES_A_LOS_CUALES_IMPORTA,
MERCADO.MONTOS_ANUALES_DE_IMPORTACION,
MERCADO.PAISES_A_LOS_CUALES_EXPORTA,
MERCADO.MONTOS_ANUALES_DE_EXPORTACION,
from `ribgo-desarrollo.dimensiones.json_table_MERCADO` AS MERCADO ORDER BY indice2;

CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_mercado_pivot` as 
select 
MERCADO_id_request as M_id_request,MERCADO_NUMERO_DOCUMENTO as M_NUMERO_DOCUMENTO,
SPLIT(STRING_AGG(PRODUCTO,"|"),"|")   as PRODUCTO,
SPLIT(STRING_AGG(MERCADO,"|"),"|")   as MERCADO,
SPLIT(STRING_AGG(PROVEEDOR,"|"),"|")   as PROVEDOR,
SPLIT(STRING_AGG(IMPORTA,"|"),"|")   as IMPORTA,
SPLIT(STRING_AGG(EXPORTA,"|"),"|")   as EXPORTA,
SPLIT(STRING_AGG(PAISES_A_LOS_CUALES_IMPORTA,"|"),"|")   as PAISES_A_LOS_CUALES_IMPORTA,
SPLIT(STRING_AGG(PAISES_A_LOS_CUALES_EXPORTA,"|"),"|")   as PAISES_A_LOS_CUALES_EXPORTA,
SPLIT(STRING_AGG(MONTOS_ANUALES_DE_IMPORTACION,"|"),"|")   as MONTOS_ANUALES_DE_IMPORTACION,
SPLIT(STRING_AGG(MONTOS_ANUALES_DE_EXPORTACION,"|"),"|")   as MONTOS_ANUALES_DE_EXPORTACION,
from `ribgo-desarrollo.dimensiones.json_table_mercado_pivot`
Group by M_id_request,M_NUMERO_DOCUMENTO;



CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_mercado_pivot` as 
select 
M_id_request,
M_NUMERO_DOCUMENTO,
SAFE_CAST(IF( ARRAY_LENGTH(PRODUCTO)>=1 ,PRODUCTO[OFFSET(0)],null) AS STRING) AS PRODUCTO_1,
SAFE_CAST(IF( ARRAY_LENGTH(PRODUCTO)>=2 ,PRODUCTO[OFFSET(1)],null) AS STRING) AS PRODUCTO_2,
SAFE_CAST(IF( ARRAY_LENGTH(PRODUCTO)>=3 ,PRODUCTO[OFFSET(2)],null) AS STRING) AS PRODUCTO_3,
SAFE_CAST(IF( ARRAY_LENGTH(PRODUCTO)>=4 ,PRODUCTO[OFFSET(3)],null) AS STRING) AS PRODUCTO_4,
SAFE_CAST(IF( ARRAY_LENGTH(PRODUCTO)>=5 ,PRODUCTO[OFFSET(4)],null) AS STRING) AS PRODUCTO_5,

IF( ARRAY_LENGTH(IMPORTA)>=1 ,IMPORTA[OFFSET(0)],null)  AS IMPORTA_1,
IF( ARRAY_LENGTH(IMPORTA)>=2 ,IMPORTA[OFFSET(1)],null)  AS IMPORTA_2,
IF( ARRAY_LENGTH(IMPORTA)>=3 ,IMPORTA[OFFSET(2)],null)  AS IMPORTA_3,
IF( ARRAY_LENGTH(IMPORTA)>=4 ,IMPORTA[OFFSET(3)],null)  AS IMPORTA_4,
IF( ARRAY_LENGTH(IMPORTA)>=5 ,IMPORTA[OFFSET(4)],null)  AS IMPORTA_5,

IF( ARRAY_LENGTH(EXPORTA)>=1 ,EXPORTA[OFFSET(0)],null)  AS EXPORTA_1,
IF( ARRAY_LENGTH(EXPORTA)>=2 ,EXPORTA[OFFSET(1)],null)  AS EXPORTA_2,
IF( ARRAY_LENGTH(EXPORTA)>=3 ,EXPORTA[OFFSET(2)],null)  AS EXPORTA_3,
IF( ARRAY_LENGTH(EXPORTA)>=4 ,EXPORTA[OFFSET(3)],null)  AS EXPORTA_4,
IF( ARRAY_LENGTH(EXPORTA)>=5 ,EXPORTA[OFFSET(4)],null)  AS EXPORTA_5,




SAFE_CAST(IF( ARRAY_LENGTH(MERCADO)>=1 ,MERCADO[OFFSET(0)],null) AS STRING) AS MERCADO_1,
SAFE_CAST(IF( ARRAY_LENGTH(MERCADO)>=2 ,MERCADO[OFFSET(1)],null) AS STRING) AS MERCADO_2,
SAFE_CAST(IF( ARRAY_LENGTH(MERCADO)>=3 ,MERCADO[OFFSET(2)],null) AS STRING) AS MERCADO_3,
SAFE_CAST(IF( ARRAY_LENGTH(MERCADO)>=4 ,MERCADO[OFFSET(3)],null) AS STRING) AS MERCADO_4,
SAFE_CAST(IF( ARRAY_LENGTH(MERCADO)>=5 ,MERCADO[OFFSET(4)],null) AS STRING) AS MERCADO_5,


SAFE_CAST(IF( ARRAY_LENGTH(PROVEDOR)>=1 ,PROVEDOR[OFFSET(0)],null) AS STRING) AS PROVEDOR_1,
SAFE_CAST(IF( ARRAY_LENGTH(PROVEDOR)>=2 ,PROVEDOR[OFFSET(1)],null) AS STRING) AS PROVEDOR_2,
SAFE_CAST(IF( ARRAY_LENGTH(PROVEDOR)>=3 ,PROVEDOR[OFFSET(2)],null) AS STRING) AS PROVEDOR_3,
SAFE_CAST(IF( ARRAY_LENGTH(PROVEDOR)>=4 ,PROVEDOR[OFFSET(3)],null) AS STRING) AS PROVEDOR_4,
SAFE_CAST(IF( ARRAY_LENGTH(PROVEDOR)>=5 ,PROVEDOR[OFFSET(4)],null) AS STRING) AS PROVEDOR_5,


SAFE_CAST(IF( ARRAY_LENGTH(PAISES_A_LOS_CUALES_IMPORTA)>=1 ,PAISES_A_LOS_CUALES_IMPORTA[OFFSET(0)],null) AS STRING) AS PAISES_A_LOS_CUALES_IMPORTA_1,
SAFE_CAST(IF( ARRAY_LENGTH(PAISES_A_LOS_CUALES_IMPORTA)>=2 ,PAISES_A_LOS_CUALES_IMPORTA[OFFSET(1)],null) AS STRING) AS PAISES_A_LOS_CUALES_IMPORTA_2,
SAFE_CAST(IF( ARRAY_LENGTH(PAISES_A_LOS_CUALES_IMPORTA)>=3 ,PAISES_A_LOS_CUALES_IMPORTA[OFFSET(2)],null) AS STRING) AS PAISES_A_LOS_CUALES_IMPORTA_3,
SAFE_CAST(IF( ARRAY_LENGTH(PAISES_A_LOS_CUALES_IMPORTA)>=4 ,PAISES_A_LOS_CUALES_IMPORTA[OFFSET(3)],null) AS STRING) AS PAISES_A_LOS_CUALES_IMPORTA_4,
SAFE_CAST(IF( ARRAY_LENGTH(PAISES_A_LOS_CUALES_IMPORTA)>=5 ,PAISES_A_LOS_CUALES_IMPORTA[OFFSET(4)],null) AS STRING) AS PAISES_A_LOS_CUALES_IMPORTA_5,

SAFE_CAST(IF( ARRAY_LENGTH(PAISES_A_LOS_CUALES_EXPORTA)>=1 ,PAISES_A_LOS_CUALES_EXPORTA[OFFSET(0)],null) AS STRING) AS PAISES_A_LOS_CUALES_EXPORTA_1,
SAFE_CAST(IF( ARRAY_LENGTH(PAISES_A_LOS_CUALES_EXPORTA)>=2 ,PAISES_A_LOS_CUALES_EXPORTA[OFFSET(1)],null) AS STRING) AS PAISES_A_LOS_CUALES_EXPORTA_2,
SAFE_CAST(IF( ARRAY_LENGTH(PAISES_A_LOS_CUALES_EXPORTA)>=3 ,PAISES_A_LOS_CUALES_EXPORTA[OFFSET(2)],null) AS STRING) AS PAISES_A_LOS_CUALES_EXPORTA_3,
SAFE_CAST(IF( ARRAY_LENGTH(PAISES_A_LOS_CUALES_EXPORTA)>=4 ,PAISES_A_LOS_CUALES_EXPORTA[OFFSET(3)],null) AS STRING) AS PAISES_A_LOS_CUALES_EXPORTA_4,
SAFE_CAST(IF( ARRAY_LENGTH(PAISES_A_LOS_CUALES_EXPORTA)>=5 ,PAISES_A_LOS_CUALES_EXPORTA[OFFSET(4)],null) AS STRING) AS PAISES_A_LOS_CUALES_EXPORTA_5,

SAFE_CAST(IF( ARRAY_LENGTH(MONTOS_ANUALES_DE_IMPORTACION)>=1 ,MONTOS_ANUALES_DE_IMPORTACION[OFFSET(0)],null) AS INT64) AS MONTOS_ANUALES_DE_IMPORTACION_1,
SAFE_CAST(IF( ARRAY_LENGTH(MONTOS_ANUALES_DE_IMPORTACION)>=2 ,MONTOS_ANUALES_DE_IMPORTACION[OFFSET(1)],null) AS INT64) AS MONTOS_ANUALES_DE_IMPORTACION_2,
SAFE_CAST(IF( ARRAY_LENGTH(MONTOS_ANUALES_DE_IMPORTACION)>=3 ,MONTOS_ANUALES_DE_IMPORTACION[OFFSET(2)],null) AS INT64) AS MONTOS_ANUALES_DE_IMPORTACION_3,
SAFE_CAST(IF( ARRAY_LENGTH(MONTOS_ANUALES_DE_IMPORTACION)>=4 ,MONTOS_ANUALES_DE_IMPORTACION[OFFSET(3)],null) AS INT64) AS MONTOS_ANUALES_DE_IMPORTACION_4,
SAFE_CAST(IF( ARRAY_LENGTH(MONTOS_ANUALES_DE_IMPORTACION)>=5 ,MONTOS_ANUALES_DE_IMPORTACION[OFFSET(4)],null) AS INT64) AS MONTOS_ANUALES_DE_IMPORTACION_5,

SAFE_CAST(IF( ARRAY_LENGTH(MONTOS_ANUALES_DE_EXPORTACION)>=1 ,MONTOS_ANUALES_DE_EXPORTACION[OFFSET(0)],null) AS INT64) AS MONTOS_ANUALES_DE_EXPORTACION_1,
SAFE_CAST(IF( ARRAY_LENGTH(MONTOS_ANUALES_DE_EXPORTACION)>=2 ,MONTOS_ANUALES_DE_EXPORTACION[OFFSET(1)],null) AS INT64) AS MONTOS_ANUALES_DE_EXPORTACION_2,
SAFE_CAST(IF( ARRAY_LENGTH(MONTOS_ANUALES_DE_EXPORTACION)>=3 ,MONTOS_ANUALES_DE_EXPORTACION[OFFSET(2)],null) AS INT64) AS MONTOS_ANUALES_DE_EXPORTACION_3,
SAFE_CAST(IF( ARRAY_LENGTH(MONTOS_ANUALES_DE_EXPORTACION)>=4 ,MONTOS_ANUALES_DE_EXPORTACION[OFFSET(3)],null) AS INT64) AS MONTOS_ANUALES_DE_EXPORTACION_4,
SAFE_CAST(IF( ARRAY_LENGTH(MONTOS_ANUALES_DE_EXPORTACION)>=5 ,MONTOS_ANUALES_DE_EXPORTACION[OFFSET(4)],null) AS INT64) AS MONTOS_ANUALES_DE_EXPORTACION_5,

FROM `ribgo-desarrollo.dimensiones.json_table_mercado_pivot`
ORDER BY M_id_request;




CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_informacion_juridica_pivot` AS
select 
informacion_juridica.IJ_id_request,
informacion_juridica.IJ_NUMERO_DOCUMENTO,

SPLIT(STRING_AGG(informacion_juridica.PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO,","),",")   as PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO,
SPLIT(STRING_AGG(informacion_juridica.RELEVO_GENERACIONAL_PERSONA_JURIDICA,","),",")   as RELEVO_GENERACIONAL_PERSONA_JURIDICA,
SPLIT(STRING_AGG(informacion_juridica.LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON,","),",")   as LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON,
SPLIT(STRING_AGG(informacion_juridica.PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO,","),",")   as PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO,
SPLIT(STRING_AGG(informacion_juridica.ENTORNO_UBICACION_DEL_NEGOCIO,","),",")   as ENTORNO_UBICACION_DEL_NEGOCIO,
SPLIT(STRING_AGG(informacion_juridica.EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION,","),",")   as EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION,
from  `ribgo-desarrollo.dimensiones.json_table_INFORMACION_FINANCIERA_JURIDICA` as informacion_juridica
Group by informacion_juridica.IJ_id_request,IJ_NUMERO_DOCUMENTO;






CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_informacion_juridica_pivot` as
SELECT 
IJ_id_request,
IJ_NUMERO_DOCUMENTO,
#pivot PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO
SAFE_CAST(IF( ARRAY_LENGTH(PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO)>=1 ,PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO[OFFSET(0)],null) AS STRING) AS PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO_1,
SAFE_CAST(IF( ARRAY_LENGTH(PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO)>=2 ,PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO[OFFSET(1)],null) AS STRING) AS PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO_2,
SAFE_CAST(IF( ARRAY_LENGTH(PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO)>=3 ,PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO[OFFSET(2)],null) AS STRING) AS PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO_3,
SAFE_CAST(IF( ARRAY_LENGTH(PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO)>=4 ,PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO[OFFSET(3)],null) AS STRING) AS PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO_4,
SAFE_CAST(IF( ARRAY_LENGTH(PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO)>=5 ,PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO[OFFSET(4)],null) AS STRING) AS PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO_5,

SAFE_CAST(IF( ARRAY_LENGTH(RELEVO_GENERACIONAL_PERSONA_JURIDICA)>=1 ,RELEVO_GENERACIONAL_PERSONA_JURIDICA[OFFSET(0)],null) AS STRING) AS RELEVO_GENERACIONAL_PERSONA_JURIDICA_1,
SAFE_CAST(IF( ARRAY_LENGTH(RELEVO_GENERACIONAL_PERSONA_JURIDICA)>=2 ,RELEVO_GENERACIONAL_PERSONA_JURIDICA[OFFSET(1)],null) AS STRING) AS RELEVO_GENERACIONAL_PERSONA_JURIDICA_2,
SAFE_CAST(IF( ARRAY_LENGTH(RELEVO_GENERACIONAL_PERSONA_JURIDICA)>=3 ,RELEVO_GENERACIONAL_PERSONA_JURIDICA[OFFSET(2)],null) AS STRING) AS RELEVO_GENERACIONAL_PERSONA_JURIDICA_3,
SAFE_CAST(IF( ARRAY_LENGTH(RELEVO_GENERACIONAL_PERSONA_JURIDICA)>=4 ,RELEVO_GENERACIONAL_PERSONA_JURIDICA[OFFSET(3)],null) AS STRING) AS RELEVO_GENERACIONAL_PERSONA_JURIDICA_4,
SAFE_CAST(IF( ARRAY_LENGTH(RELEVO_GENERACIONAL_PERSONA_JURIDICA)>=5 ,RELEVO_GENERACIONAL_PERSONA_JURIDICA[OFFSET(4)],null) as STRING) AS RELEVO_GENERACIONAL_PERSONA_JURIDICA_5,


SAFE_CAST(IF( ARRAY_LENGTH(LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON)>=1 ,LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON[OFFSET(0)],null) AS STRING) AS LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON_1,
SAFE_CAST(IF( ARRAY_LENGTH(LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON)>=2 ,LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON[OFFSET(1)],null) AS STRING) AS LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON_2,
SAFE_CAST(IF( ARRAY_LENGTH(LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON)>=3 ,LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON[OFFSET(2)],null) AS STRING) AS LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON_3,
SAFE_CAST(IF( ARRAY_LENGTH(LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON)>=4 ,LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON[OFFSET(3)],null) AS STRING) AS LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON_4,
SAFE_CAST(IF( ARRAY_LENGTH(LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON)>=5 ,LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON[OFFSET(4)],null) as STRING) AS LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON_5,

SAFE_CAST(IF( ARRAY_LENGTH(PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO)>=1 ,PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO[OFFSET(0)],null) AS STRING) AS PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO_1,
SAFE_CAST(IF( ARRAY_LENGTH(PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO)>=2 ,PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO[OFFSET(1)],null) AS STRING) AS PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO_2,
SAFE_CAST(IF( ARRAY_LENGTH(PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO)>=3 ,PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO[OFFSET(2)],null) AS STRING) AS PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO_3,
SAFE_CAST(IF( ARRAY_LENGTH(PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO)>=4 ,PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO[OFFSET(3)],null) AS STRING) AS PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO_4,
SAFE_CAST(IF( ARRAY_LENGTH(PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO)>=5 ,PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO[OFFSET(4)],null) as STRING) AS PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO_5,


SAFE_CAST(IF( ARRAY_LENGTH(ENTORNO_UBICACION_DEL_NEGOCIO)>=1 ,ENTORNO_UBICACION_DEL_NEGOCIO[OFFSET(0)],null) AS STRING) AS ENTORNO_UBICACION_DEL_NEGOCIO_1,
SAFE_CAST(IF( ARRAY_LENGTH(ENTORNO_UBICACION_DEL_NEGOCIO)>=2 ,ENTORNO_UBICACION_DEL_NEGOCIO[OFFSET(1)],null) AS STRING) AS ENTORNO_UBICACION_DEL_NEGOCIO_2,
SAFE_CAST(IF( ARRAY_LENGTH(ENTORNO_UBICACION_DEL_NEGOCIO)>=3 ,ENTORNO_UBICACION_DEL_NEGOCIO[OFFSET(2)],null) AS STRING) AS ENTORNO_UBICACION_DEL_NEGOCIO_3,
SAFE_CAST(IF( ARRAY_LENGTH(ENTORNO_UBICACION_DEL_NEGOCIO)>=4 ,ENTORNO_UBICACION_DEL_NEGOCIO[OFFSET(3)],null) AS STRING) AS ENTORNO_UBICACION_DEL_NEGOCIO_4,
SAFE_CAST(IF( ARRAY_LENGTH(ENTORNO_UBICACION_DEL_NEGOCIO)>=5 ,ENTORNO_UBICACION_DEL_NEGOCIO[OFFSET(4)],null) as STRING) AS ENTORNO_UBICACION_DEL_NEGOCIO_5,

SAFE_CAST(IF( ARRAY_LENGTH(EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION)>=1 ,EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION[OFFSET(0)],null) AS STRING) AS EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION_1,
SAFE_CAST(IF( ARRAY_LENGTH(EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION)>=2 ,EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION[OFFSET(1)],null) AS STRING) AS EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION_2,
SAFE_CAST(IF( ARRAY_LENGTH(EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION)>=3 ,EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION[OFFSET(2)],null) AS STRING) AS EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION_3,
SAFE_CAST(IF( ARRAY_LENGTH(EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION)>=4 ,EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION[OFFSET(3)],null) AS STRING) AS EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION_4,
SAFE_CAST(IF( ARRAY_LENGTH(EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION)>=5 ,EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION[OFFSET(4)],null) as STRING) AS EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION_5,
from `ribgo-desarrollo.dimensiones.json_table_informacion_juridica_pivot`;


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_informacion_natural_pivot` as
select 
IN_id_request,
IN_NUMERO_DOCUMENTO,
SPLIT(STRING_AGG(RELEVO_GENERACIONAL_PERSONA_NATURAL,","),",") as RELEVO_GENERACIONAL_PERSONA_NATURAL,
SPLIT(STRING_AGG(ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD,","),",") as ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD,
SPLIT(STRING_AGG(NECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES,","),",") as RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES
from `ribgo-desarrollo.dimensiones.json_table_INFORMACION_FINANCIERA_NATURAL`
group by IN_id_request,IN_NUMERO_DOCUMENTO;


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_informacion_natural_pivot` as
SELECT 
IN_id_request,
IN_NUMERO_DOCUMENTO,

IF( ARRAY_LENGTH(RELEVO_GENERACIONAL_PERSONA_NATURAL)>=1 ,RELEVO_GENERACIONAL_PERSONA_NATURAL[OFFSET(0)],null) AS RELEVO_GENERACIONAL_PERSONA_NATURAL_1,
IF( ARRAY_LENGTH(RELEVO_GENERACIONAL_PERSONA_NATURAL)>=2 ,RELEVO_GENERACIONAL_PERSONA_NATURAL[OFFSET(1)],null) AS RELEVO_GENERACIONAL_PERSONA_NATURAL_2,
IF( ARRAY_LENGTH(RELEVO_GENERACIONAL_PERSONA_NATURAL)>=3 ,RELEVO_GENERACIONAL_PERSONA_NATURAL[OFFSET(2)],null) AS RELEVO_GENERACIONAL_PERSONA_NATURAL_3,
IF( ARRAY_LENGTH(RELEVO_GENERACIONAL_PERSONA_NATURAL)>=4 ,RELEVO_GENERACIONAL_PERSONA_NATURAL[OFFSET(3)],null) AS RELEVO_GENERACIONAL_PERSONA_NATURAL_4,
IF( ARRAY_LENGTH(RELEVO_GENERACIONAL_PERSONA_NATURAL)>=5 ,RELEVO_GENERACIONAL_PERSONA_NATURAL[OFFSET(4)],null) AS RELEVO_GENERACIONAL_PERSONA_NATURAL_5,


IF( ARRAY_LENGTH(ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD)>=1 ,ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD[OFFSET(0)],null) AS ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD_1,
IF( ARRAY_LENGTH(ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD)>=2 ,ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD[OFFSET(1)],null) AS ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD_2,
IF( ARRAY_LENGTH(ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD)>=3 ,ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD[OFFSET(2)],null) AS ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD_3,
IF( ARRAY_LENGTH(ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD)>=4 ,ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD[OFFSET(3)],null) AS ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD_4,
IF( ARRAY_LENGTH(ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD)>=5 ,ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD[OFFSET(4)],null) AS ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD_5,


IF( ARRAY_LENGTH(RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES)>=1 ,RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES[OFFSET(0)],null) AS RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES_1,
IF( ARRAY_LENGTH(RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES)>=2 ,RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES[OFFSET(1)],null) AS RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES_2,
IF( ARRAY_LENGTH(RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES)>=3 ,RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES[OFFSET(2)],null) AS RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES_3,
IF( ARRAY_LENGTH(RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES)>=4 ,RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES[OFFSET(3)],null) AS RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES_4,
IF( ARRAY_LENGTH(RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES)>=5 ,RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES[OFFSET(4)],null) AS RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES_5,


from `ribgo-desarrollo.dimensiones.json_table_informacion_natural_pivot`
ORDER BY 1;


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_INFORMACION_CODEUDORES` AS 
select 
id_request as cod_id_request,
NUMERO_DOCUMENTO  AS cod_NUMERO_DOCUMENTO,
JSON_VALUE(codeudor, '$.CEDULA_CODEUDOR')  AS CEDULA_CODEUDOR,
JSON_VALUE(codeudor, '$.TITULAR_CODEUDOR')  AS TITULAR_CODEUDOR,
FROM `ribgo-desarrollo.admin.fill_form`, UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) AS elemento WITH OFFSET AS indice
, UNNEST(JSON_EXTRACT_ARRAY(elemento, '$.CODEUDOR')) as codeudor LEFT JOIN

(select 
id_request as id_request_2,
indice,
JSON_VALUE(elemento,"$.NUMERO_DOCUMENTO") as NUMERO_DOCUMENTO
from 
`ribgo-desarrollo.admin.fill_form2`,UNNEST(JSON_EXTRACT_ARRAY(custom, '$.INFORMACION_FINANCIERA')) as elemento WITH OFFSET AS indice) as t1 on id_request=t1.id_request_2 and indice=t1.indice;




CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_cedulas_codeudores` AS
select 
cod_id_request,
cod_NUMERO_DOCUMENTO,
SPLIT(STRING_AGG(CEDULA_CODEUDOR,","),",")   as cedulas,
split(STRING_AGG(TITULAR_CODEUDOR,","),",") AS codeudores
FROM `ribgo-desarrollo.dimensiones.json_table_INFORMACION_CODEUDORES`
group by cod_id_request,cod_NUMERO_DOCUMENTO;




CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_INFORMACION_ENTRADA` AS 
SELECT DISTINCT * FROM `ribgo-desarrollo.dimensiones.json_table_INFORMACION_ENTRADA`;



CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_cedulas_codeudores_PIVOT` AS
SELECT 
cod_id_request,
cod_NUMERO_DOCUMENTO,
SAFE_CAST(IF( ARRAY_LENGTH(cedulas)>=1 ,cedulas[OFFSET(0)],null) AS INT64) AS cedula_codeudor_1,
SAFE_CAST(IF( ARRAY_LENGTH(cedulas)>=2 ,cedulas[OFFSET(1)],null) AS INT64) AS cedula_codeudor_2,
SAFE_CAST(IF( ARRAY_LENGTH(cedulas)>=3 ,cedulas[OFFSET(2)],null) AS INT64) AS cedula_codeudor_3,
SAFE_CAST(IF( ARRAY_LENGTH(cedulas)>=4 ,cedulas[OFFSET(3)],null) AS INT64) AS cedula_codeudor_4,
SAFE_CAST(IF( ARRAY_LENGTH(cedulas)>=5 ,cedulas[OFFSET(4)],null) AS INT64) AS cedula_codeudor_5,
SAFE_CAST(IF( ARRAY_LENGTH(cedulas)>=6 ,cedulas[OFFSET(5)],null) AS INT64) AS cedula_codeudor_6,
SAFE_CAST(IF( ARRAY_LENGTH(cedulas)>=7 ,cedulas[OFFSET(6)],null) AS INT64) AS cedula_codeudor_7,
SAFE_CAST(IF( ARRAY_LENGTH(cedulas)>=8 ,cedulas[OFFSET(7)],null) AS INT64) AS cedula_codeudor_8,
SAFE_CAST(IF( ARRAY_LENGTH(cedulas)>=9 ,cedulas[OFFSET(8)],null) AS INT64) AS cedula_codeudor_9,
SAFE_CAST(IF( ARRAY_LENGTH(cedulas)>=10 ,cedulas[OFFSET(9)],null) AS INT64) AS cedula_codeudor_10,
IF( ARRAY_LENGTH(codeudores)>=1 ,codeudores[OFFSET(0)],null) AS cedula_titular_1,
IF( ARRAY_LENGTH(codeudores)>=2 ,codeudores[OFFSET(1)],null)  AS cedula_titular_2,
IF( ARRAY_LENGTH(codeudores)>=3 ,codeudores[OFFSET(2)],null) AS cedula_titular_3,
IF( ARRAY_LENGTH(codeudores)>=4 ,codeudores[OFFSET(3)],null)  AS cedula_titular_4,
IF( ARRAY_LENGTH(codeudores)>=5 ,codeudores[OFFSET(4)],null)  AS cedula_titular_5,
IF( ARRAY_LENGTH(codeudores)>=6 ,codeudores[OFFSET(5)],null)  AS cedula_titular_6,
IF( ARRAY_LENGTH(codeudores)>=7 ,codeudores[OFFSET(6)],null)  AS cedula_titular_7,
IF( ARRAY_LENGTH(codeudores)>=8 ,codeudores[OFFSET(7)],null)  AS cedula_titular_8,
IF( ARRAY_LENGTH(codeudores)>=9 ,codeudores[OFFSET(8)],null)  AS cedula_titular_9,
IF( ARRAY_LENGTH(codeudores)>=10 ,codeudores[OFFSET(9)],null)  AS cedula_titular_10,
FROM
`ribgo-desarrollo.dimensiones.json_table_cedulas_codeudores`;


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_INFORMACION_GENERAL_PIVOT` AS
SELECT 
informacion_general.IG_id_request,
informacion_general.IG_NUMERO_DOCUMENTO,
SPLIT(STRING_AGG(informacion_general.NOMBRE_CONTACTO,","),",")   as NOMBRE_CONTACTO,
SPLIT(STRING_AGG(informacion_general.CELULAR_CONTACTO,","),",")   as CELULAR_CONTACTO,
SPLIT(STRING_AGG(informacion_general.CORREO_CONTACTO,","),",")   as CORREO_CONTACTO,
SPLIT(STRING_AGG(informacion_general.NUMERO_TOTAL_DE_EMPLEADOS,","),",")   as NUMERO_TOTAL_DE_EMPLEADOS,
SPLIT(STRING_AGG(informacion_general.SALARIO_PROMEDIO_EN_PESOS,","),",")   as SALARIO_PROMEDIO_EN_PESOS,
SPLIT(STRING_AGG(informacion_general.SECTOR,","),",")   as SECTOR,
SPLIT(STRING_AGG(informacion_general.ACTIVIDAD,","),",")   as ACTIVIDAD,
SPLIT(STRING_AGG(informacion_general.CALIFICACION_R,","),",")   as CALIFICACION_R,
SPLIT(STRING_AGG(informacion_general.TIPO_SOCIEDAD,","),",")   as TIPO_SOCIEDAD,
SPLIT(STRING_AGG(informacion_general.FECHA_CONSTITUCION,","),",")   as FECHA_CONSTITUCION,
SPLIT(STRING_AGG(informacion_general.INFORMACION_TECNICA,","),",")   as INFORMACION_TECNICA,

SPLIT(STRING_AGG(informacion_general.PLANIFICADOR,","),",")   as PLANIFICADOR,
SPLIT(STRING_AGG(informacion_general.ACTIVIDAD_AGROPECUARIA,","),",")   as ACTIVIDAD_AGROPECUARIA,
SPLIT(STRING_AGG(informacion_general.DETALLE_ACTIVIDAD_AGROPRODUCTIVA,","),",")   as DETALLE_ACTIVIDAD_AGROPRODUCTIVA

from   `ribgo-desarrollo.dimensiones.json_table_INFORMACION_GENERAL` as informacion_general group by 
informacion_general.IG_id_request,informacion_general.IG_NUMERO_DOCUMENTO;

CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_INFORMACION_GENERAL_PIVOT` AS
SELECT 
IG_id_request,
IG_NUMERO_DOCUMENTO,
SAFE_CAST(IF( ARRAY_LENGTH(NOMBRE_CONTACTO)>=1 ,NOMBRE_CONTACTO[OFFSET(0)],null) AS STRING) AS NOMBRE_CONTACTO_1,
SAFE_CAST(IF( ARRAY_LENGTH(NOMBRE_CONTACTO)>=2 ,NOMBRE_CONTACTO[OFFSET(1)],null) AS STRING) AS NOMBRE_CONTACTO_2,
SAFE_CAST(IF( ARRAY_LENGTH(NOMBRE_CONTACTO)>=3 ,NOMBRE_CONTACTO[OFFSET(2)],null) AS STRING) AS NOMBRE_CONTACTO_3,
SAFE_CAST(IF( ARRAY_LENGTH(NOMBRE_CONTACTO)>=4 ,NOMBRE_CONTACTO[OFFSET(3)],null) AS STRING) AS NOMBRE_CONTACTO_4,
SAFE_CAST(IF( ARRAY_LENGTH(NOMBRE_CONTACTO)>=5 ,NOMBRE_CONTACTO[OFFSET(4)],null) AS STRING) AS NOMBRE_CONTACTO_5,
SAFE_CAST(IF( ARRAY_LENGTH(NOMBRE_CONTACTO)>=6 ,NOMBRE_CONTACTO[OFFSET(5)],null) AS STRING) AS NOMBRE_CONTACTO_6,
SAFE_CAST(IF( ARRAY_LENGTH(NOMBRE_CONTACTO)>=7 ,NOMBRE_CONTACTO[OFFSET(6)],null) AS STRING) AS NOMBRE_CONTACTO_7,
SAFE_CAST(IF( ARRAY_LENGTH(NOMBRE_CONTACTO)>=8 ,NOMBRE_CONTACTO[OFFSET(7)],null) AS STRING) AS NOMBRE_CONTACTO_8,
SAFE_CAST(IF( ARRAY_LENGTH(NOMBRE_CONTACTO)>=9 ,NOMBRE_CONTACTO[OFFSET(8)],null) AS STRING) AS NOMBRE_CONTACTO_9,
SAFE_CAST(IF( ARRAY_LENGTH(NOMBRE_CONTACTO)>=10 ,NOMBRE_CONTACTO[OFFSET(9)],null) AS STRING) AS NOMBRE_CONTACTO_10,
SAFE_CAST(IF( ARRAY_LENGTH(CELULAR_CONTACTO)>=1 ,CELULAR_CONTACTO[OFFSET(0)],null) AS INT64) AS CELULAR_CONTACTO_1,
SAFE_CAST(IF( ARRAY_LENGTH(CELULAR_CONTACTO)>=2 ,CELULAR_CONTACTO[OFFSET(1)],null) AS INT64) AS CELULAR_CONTACTO_2,
SAFE_CAST(IF( ARRAY_LENGTH(CELULAR_CONTACTO)>=3 ,CELULAR_CONTACTO[OFFSET(2)],null) AS INT64) AS CELULAR_CONTACTO_3,
SAFE_CAST(IF( ARRAY_LENGTH(CELULAR_CONTACTO)>=4 ,CELULAR_CONTACTO[OFFSET(3)],null) AS INT64) AS CELULAR_CONTACTO_4,
SAFE_CAST(IF( ARRAY_LENGTH(CELULAR_CONTACTO)>=5 ,CELULAR_CONTACTO[OFFSET(4)],null) AS INT64) AS CELULAR_CONTACTO_5,
SAFE_CAST(IF( ARRAY_LENGTH(CELULAR_CONTACTO)>=6 ,CELULAR_CONTACTO[OFFSET(5)],null) AS INT64) AS CELULAR_CONTACTO_6,
SAFE_CAST(IF( ARRAY_LENGTH(CELULAR_CONTACTO)>=7 ,CELULAR_CONTACTO[OFFSET(6)],null) AS INT64) AS CELULAR_CONTACTO_7,
SAFE_CAST(IF( ARRAY_LENGTH(CELULAR_CONTACTO)>=8 ,CELULAR_CONTACTO[OFFSET(7)],null) AS INT64) AS CELULAR_CONTACTO_8,
SAFE_CAST(IF( ARRAY_LENGTH(CELULAR_CONTACTO)>=9 ,CELULAR_CONTACTO[OFFSET(8)],null) AS INT64) AS CELULAR_CONTACTO_9,
SAFE_CAST(IF( ARRAY_LENGTH(CELULAR_CONTACTO)>=10 ,CELULAR_CONTACTO[OFFSET(9)],null) AS INT64) AS CELULAR_CONTACTO_10,
SAFE_CAST(IF( ARRAY_LENGTH(CORREO_CONTACTO)>=1 ,CORREO_CONTACTO[OFFSET(0)],null) AS STRING) AS CORREO_CONTACTO_1,
SAFE_CAST(IF( ARRAY_LENGTH(CORREO_CONTACTO)>=2 ,CORREO_CONTACTO[OFFSET(1)],null) AS STRING) AS CORREO_CONTACTO_2,
SAFE_CAST(IF( ARRAY_LENGTH(CORREO_CONTACTO)>=3 ,CORREO_CONTACTO[OFFSET(2)],null) AS STRING) AS CORREO_CONTACTO_3,
SAFE_CAST(IF( ARRAY_LENGTH(CORREO_CONTACTO)>=4 ,CORREO_CONTACTO[OFFSET(3)],null) AS STRING) AS CORREO_CONTACTO_4,
SAFE_CAST(IF( ARRAY_LENGTH(CORREO_CONTACTO)>=5 ,CORREO_CONTACTO[OFFSET(4)],null) AS STRING) AS CORREO_CONTACTO_5,
SAFE_CAST(IF( ARRAY_LENGTH(CORREO_CONTACTO)>=6 ,CORREO_CONTACTO[OFFSET(5)],null) AS STRING) AS CORREO_CONTACTO_6,
SAFE_CAST(IF( ARRAY_LENGTH(CORREO_CONTACTO)>=7 ,CORREO_CONTACTO[OFFSET(6)],null) AS STRING) AS CORREO_CONTACTO_7,
SAFE_CAST(IF( ARRAY_LENGTH(CORREO_CONTACTO)>=8 ,CORREO_CONTACTO[OFFSET(7)],null) AS STRING) AS CORREO_CONTACTO_8,
SAFE_CAST(IF( ARRAY_LENGTH(CORREO_CONTACTO)>=9 ,CORREO_CONTACTO[OFFSET(8)],null) AS STRING) AS CORREO_CONTACTO_9,
SAFE_CAST(IF( ARRAY_LENGTH(CORREO_CONTACTO)>=10 ,CORREO_CONTACTO[OFFSET(9)],null) AS INT64) AS CORREO_CONTACTO_10,
SAFE_CAST(IF( ARRAY_LENGTH(NUMERO_TOTAL_DE_EMPLEADOS)>=1 ,NUMERO_TOTAL_DE_EMPLEADOS[OFFSET(0)],null) AS INT64) AS NUMERO_TOTAL_DE_EMPLEADOS_1,
SAFE_CAST(IF( ARRAY_LENGTH(NUMERO_TOTAL_DE_EMPLEADOS)>=2 ,NUMERO_TOTAL_DE_EMPLEADOS[OFFSET(1)],null) AS INT64) AS NUMERO_TOTAL_DE_EMPLEADOS_2,
SAFE_CAST(IF( ARRAY_LENGTH(NUMERO_TOTAL_DE_EMPLEADOS)>=3 ,NUMERO_TOTAL_DE_EMPLEADOS[OFFSET(2)],null) AS INT64) AS NUMERO_TOTAL_DE_EMPLEADOS_3,
SAFE_CAST(IF( ARRAY_LENGTH(NUMERO_TOTAL_DE_EMPLEADOS)>=4 ,NUMERO_TOTAL_DE_EMPLEADOS[OFFSET(3)],null) AS INT64) AS NUMERO_TOTAL_DE_EMPLEADOS_4,
SAFE_CAST(IF( ARRAY_LENGTH(NUMERO_TOTAL_DE_EMPLEADOS)>=5 ,NUMERO_TOTAL_DE_EMPLEADOS[OFFSET(4)],null) AS INT64) AS NUMERO_TOTAL_DE_EMPLEADOS_5,
SAFE_CAST(IF( ARRAY_LENGTH(NUMERO_TOTAL_DE_EMPLEADOS)>=6 ,NUMERO_TOTAL_DE_EMPLEADOS[OFFSET(5)],null) AS INT64) AS NUMERO_TOTAL_DE_EMPLEADOS_6,
SAFE_CAST(IF( ARRAY_LENGTH(NUMERO_TOTAL_DE_EMPLEADOS)>=7 ,NUMERO_TOTAL_DE_EMPLEADOS[OFFSET(6)],null) AS INT64) AS NUMERO_TOTAL_DE_EMPLEADOS_7,
SAFE_CAST(IF( ARRAY_LENGTH(NUMERO_TOTAL_DE_EMPLEADOS)>=8 ,NUMERO_TOTAL_DE_EMPLEADOS[OFFSET(7)],null) AS INT64) AS NUMERO_TOTAL_DE_EMPLEADOS_8,
SAFE_CAST(IF( ARRAY_LENGTH(NUMERO_TOTAL_DE_EMPLEADOS)>=9 ,NUMERO_TOTAL_DE_EMPLEADOS[OFFSET(8)],null) AS INT64) AS NUMERO_TOTAL_DE_EMPLEADOS_9,
SAFE_CAST(IF( ARRAY_LENGTH(NUMERO_TOTAL_DE_EMPLEADOS)>=10 ,NUMERO_TOTAL_DE_EMPLEADOS[OFFSET(9)],null) AS INT64) AS NUMERO_TOTAL_DE_EMPLEADOS_10,
SAFE_CAST(IF( ARRAY_LENGTH(SALARIO_PROMEDIO_EN_PESOS)>=1 ,SALARIO_PROMEDIO_EN_PESOS[OFFSET(0)],null) AS INT64) AS SALARIO_PROMEDIO_EN_PESOS_1,
SAFE_CAST(IF( ARRAY_LENGTH(SALARIO_PROMEDIO_EN_PESOS)>=2 ,SALARIO_PROMEDIO_EN_PESOS[OFFSET(1)],null) AS INT64) AS SALARIO_PROMEDIO_EN_PESOS_2,
SAFE_CAST(IF( ARRAY_LENGTH(SALARIO_PROMEDIO_EN_PESOS)>=3 ,SALARIO_PROMEDIO_EN_PESOS[OFFSET(2)],null) AS INT64) AS SALARIO_PROMEDIO_EN_PESOS_3,
SAFE_CAST(IF( ARRAY_LENGTH(SALARIO_PROMEDIO_EN_PESOS)>=4 ,SALARIO_PROMEDIO_EN_PESOS[OFFSET(3)],null) AS INT64) AS SALARIO_PROMEDIO_EN_PESOS_4,
SAFE_CAST(IF( ARRAY_LENGTH(SALARIO_PROMEDIO_EN_PESOS)>=5 ,SALARIO_PROMEDIO_EN_PESOS[OFFSET(4)],null) AS INT64) AS SALARIO_PROMEDIO_EN_PESOS_5,
SAFE_CAST(IF( ARRAY_LENGTH(SALARIO_PROMEDIO_EN_PESOS)>=6 ,SALARIO_PROMEDIO_EN_PESOS[OFFSET(5)],null) AS INT64) AS SALARIO_PROMEDIO_EN_PESOS_6,
SAFE_CAST(IF( ARRAY_LENGTH(SALARIO_PROMEDIO_EN_PESOS)>=7 ,SALARIO_PROMEDIO_EN_PESOS[OFFSET(6)],null) AS INT64) AS SALARIO_PROMEDIO_EN_PESOS_7,
SAFE_CAST(IF( ARRAY_LENGTH(SALARIO_PROMEDIO_EN_PESOS)>=8 ,SALARIO_PROMEDIO_EN_PESOS[OFFSET(7)],null) AS INT64) AS SALARIO_PROMEDIO_EN_PESOS_8,
SAFE_CAST(IF( ARRAY_LENGTH(SALARIO_PROMEDIO_EN_PESOS)>=9 ,SALARIO_PROMEDIO_EN_PESOS[OFFSET(8)],null) AS INT64) AS SALARIO_PROMEDIO_EN_PESOS_9,
SAFE_CAST(IF( ARRAY_LENGTH(SALARIO_PROMEDIO_EN_PESOS)>=10 ,SALARIO_PROMEDIO_EN_PESOS[OFFSET(9)],null) AS INT64) AS SALARIO_PROMEDIO_EN_PESOS_10,
SAFE_CAST(IF( ARRAY_LENGTH(SECTOR)>=1 ,SECTOR[OFFSET(0)],null) AS STRING) AS SECTOR_1,
SAFE_CAST(IF( ARRAY_LENGTH(SECTOR)>=2 ,SECTOR[OFFSET(1)],null) AS STRING) AS SECTOR_2,
SAFE_CAST(IF( ARRAY_LENGTH(SECTOR)>=3 ,SECTOR[OFFSET(2)],null) AS STRING) AS SECTOR_3,
SAFE_CAST(IF( ARRAY_LENGTH(SECTOR)>=4 ,SECTOR[OFFSET(3)],null) AS STRING) AS SECTOR_4,
SAFE_CAST(IF( ARRAY_LENGTH(SECTOR)>=5 ,SECTOR[OFFSET(4)],null) AS STRING) AS SECTOR_5,
SAFE_CAST(IF( ARRAY_LENGTH(SECTOR)>=6 ,SECTOR[OFFSET(5)],null) AS STRING) AS SECTOR_6,
SAFE_CAST(IF( ARRAY_LENGTH(SECTOR)>=7 ,SECTOR[OFFSET(6)],null) AS STRING) AS SECTOR_7,
SAFE_CAST(IF( ARRAY_LENGTH(SECTOR)>=8 ,SECTOR[OFFSET(7)],null) AS STRING) AS SECTOR_8,
SAFE_CAST(IF( ARRAY_LENGTH(SECTOR)>=9 ,SECTOR[OFFSET(8)],null) AS STRING) AS SECTOR_9,
SAFE_CAST(IF( ARRAY_LENGTH(SECTOR)>=10 ,SECTOR[OFFSET(9)],null) AS STRING) AS SECTOR_10,
SAFE_CAST(IF( ARRAY_LENGTH(ACTIVIDAD)>=1 ,ACTIVIDAD[OFFSET(0)],null) AS STRING) AS ACTIVIDAD_1,
SAFE_CAST(IF( ARRAY_LENGTH(ACTIVIDAD)>=2 ,ACTIVIDAD[OFFSET(1)],null) AS STRING) AS ACTIVIDAD_2,
SAFE_CAST(IF( ARRAY_LENGTH(ACTIVIDAD)>=3 ,ACTIVIDAD[OFFSET(2)],null) AS STRING) AS ACTIVIDAD_3,
SAFE_CAST(IF( ARRAY_LENGTH(ACTIVIDAD)>=4 ,ACTIVIDAD[OFFSET(3)],null) AS STRING) AS ACTIVIDAD_4,
SAFE_CAST(IF( ARRAY_LENGTH(ACTIVIDAD)>=5 ,ACTIVIDAD[OFFSET(4)],null) AS STRING) AS ACTIVIDAD_5,
SAFE_CAST(IF( ARRAY_LENGTH(ACTIVIDAD)>=6 ,ACTIVIDAD[OFFSET(5)],null) AS STRING) AS ACTIVIDAD_6,
SAFE_CAST(IF( ARRAY_LENGTH(ACTIVIDAD)>=7 ,ACTIVIDAD[OFFSET(6)],null) AS STRING) AS ACTIVIDAD_7,
SAFE_CAST(IF( ARRAY_LENGTH(ACTIVIDAD)>=8 ,ACTIVIDAD[OFFSET(7)],null) AS STRING) AS ACTIVIDAD_8,
SAFE_CAST(IF( ARRAY_LENGTH(ACTIVIDAD)>=9 ,ACTIVIDAD[OFFSET(8)],null) AS STRING) AS ACTIVIDAD_9,
SAFE_CAST(IF( ARRAY_LENGTH(ACTIVIDAD)>=10 ,ACTIVIDAD[OFFSET(9)],null) AS STRING) AS ACTIVIDAD_10,
IF( ARRAY_LENGTH(CALIFICACION_R)>=1 ,CALIFICACION_R[OFFSET(0)],null) AS CALIFICACION_R_1,
IF( ARRAY_LENGTH(CALIFICACION_R)>=2 ,CALIFICACION_R[OFFSET(1)],null)  AS CALIFICACION_R_2,
IF( ARRAY_LENGTH(CALIFICACION_R)>=3 ,CALIFICACION_R[OFFSET(2)],null)  AS CALIFICACION_R_3,
IF( ARRAY_LENGTH(CALIFICACION_R)>=4 ,CALIFICACION_R[OFFSET(3)],null)  AS CALIFICACION_R_4,
IF( ARRAY_LENGTH(CALIFICACION_R)>=5 ,CALIFICACION_R[OFFSET(4)],null)  AS CALIFICACION_R_5,
IF( ARRAY_LENGTH(CALIFICACION_R)>=6 ,CALIFICACION_R[OFFSET(5)],null) AS CALIFICACION_R_6,
IF( ARRAY_LENGTH(CALIFICACION_R)>=7 ,CALIFICACION_R[OFFSET(6)],null) AS CALIFICACION_R_7,
IF( ARRAY_LENGTH(CALIFICACION_R)>=8 ,CALIFICACION_R[OFFSET(7)],null) AS CALIFICACION_R_8,
IF( ARRAY_LENGTH(CALIFICACION_R)>=9 ,CALIFICACION_R[OFFSET(8)],null) AS CALIFICACION_R_9,
IF( ARRAY_LENGTH(CALIFICACION_R)>=10 ,CALIFICACION_R[OFFSET(9)],null) AS CALIFICACION_R_10,
SAFE_CAST(IF( ARRAY_LENGTH(TIPO_SOCIEDAD)>=1 ,TIPO_SOCIEDAD[OFFSET(0)],null) AS STRING) AS TIPO_SOCIEDAD_1,
SAFE_CAST(IF( ARRAY_LENGTH(TIPO_SOCIEDAD)>=2 ,TIPO_SOCIEDAD[OFFSET(1)],null) AS STRING) AS TIPO_SOCIEDAD_2,
SAFE_CAST(IF( ARRAY_LENGTH(TIPO_SOCIEDAD)>=3 ,TIPO_SOCIEDAD[OFFSET(2)],null) AS STRING) AS TIPO_SOCIEDAD_3,
SAFE_CAST(IF( ARRAY_LENGTH(TIPO_SOCIEDAD)>=4 ,TIPO_SOCIEDAD[OFFSET(3)],null) AS STRING) AS TIPO_SOCIEDAD_4,
SAFE_CAST(IF( ARRAY_LENGTH(TIPO_SOCIEDAD)>=5 ,TIPO_SOCIEDAD[OFFSET(4)],null) AS STRING) AS TIPO_SOCIEDAD_5,
SAFE_CAST(IF( ARRAY_LENGTH(TIPO_SOCIEDAD)>=6 ,TIPO_SOCIEDAD[OFFSET(5)],null) AS STRING) AS TIPO_SOCIEDAD_6,
SAFE_CAST(IF( ARRAY_LENGTH(TIPO_SOCIEDAD)>=7 ,TIPO_SOCIEDAD[OFFSET(6)],null) AS STRING) AS TIPO_SOCIEDAD_7,
SAFE_CAST(IF( ARRAY_LENGTH(TIPO_SOCIEDAD)>=8 ,TIPO_SOCIEDAD[OFFSET(7)],null) AS STRING) AS TIPO_SOCIEDAD_8,
SAFE_CAST(IF( ARRAY_LENGTH(TIPO_SOCIEDAD)>=9 ,TIPO_SOCIEDAD[OFFSET(8)],null) AS STRING) AS TIPO_SOCIEDAD_9,
SAFE_CAST(IF( ARRAY_LENGTH(TIPO_SOCIEDAD)>=10 ,TIPO_SOCIEDAD[OFFSET(9)],null) AS STRING) AS TIPO_SOCIEDAD_10,
IF( ARRAY_LENGTH(FECHA_CONSTITUCION)>=1 ,FECHA_CONSTITUCION[OFFSET(0)],null)  AS FECHA_CONSTITUCION_1,
IF( ARRAY_LENGTH(FECHA_CONSTITUCION)>=2 ,FECHA_CONSTITUCION[OFFSET(1)],null)  AS FECHA_CONSTITUCION_2,
IF( ARRAY_LENGTH(FECHA_CONSTITUCION)>=3 ,FECHA_CONSTITUCION[OFFSET(2)],null)  AS FECHA_CONSTITUCION_3,
IF( ARRAY_LENGTH(FECHA_CONSTITUCION)>=4 ,FECHA_CONSTITUCION[OFFSET(3)],null)  AS FECHA_CONSTITUCION_4,
IF( ARRAY_LENGTH(FECHA_CONSTITUCION)>=5 ,FECHA_CONSTITUCION[OFFSET(4)],null)  AS FECHA_CONSTITUCION_5,
IF( ARRAY_LENGTH(FECHA_CONSTITUCION)>=6 ,FECHA_CONSTITUCION[OFFSET(5)],null)  AS FECHA_CONSTITUCION_6,
IF( ARRAY_LENGTH(FECHA_CONSTITUCION)>=7 ,FECHA_CONSTITUCION[OFFSET(6)],null)  AS FECHA_CONSTITUCION_7,
IF( ARRAY_LENGTH(FECHA_CONSTITUCION)>=8 ,FECHA_CONSTITUCION[OFFSET(7)],null)  AS FECHA_CONSTITUCION_8,
IF( ARRAY_LENGTH(FECHA_CONSTITUCION)>=9 ,FECHA_CONSTITUCION[OFFSET(8)],null)  AS FECHA_CONSTITUCION_9,
IF( ARRAY_LENGTH(FECHA_CONSTITUCION)>=10 ,FECHA_CONSTITUCION[OFFSET(9)],null)  AS FECHA_CONSTITUCION_10,

SAFE_CAST(IF( ARRAY_LENGTH(INFORMACION_TECNICA)>=1 ,INFORMACION_TECNICA[OFFSET(0)],null) AS STRING) AS INFORMACION_TECNICA_1,
SAFE_CAST(IF( ARRAY_LENGTH(INFORMACION_TECNICA)>=2 ,INFORMACION_TECNICA[OFFSET(1)],null) AS STRING) AS INFORMACION_TECNICA_2,
SAFE_CAST(IF( ARRAY_LENGTH(INFORMACION_TECNICA)>=3 ,INFORMACION_TECNICA[OFFSET(2)],null) AS STRING) AS INFORMACION_TECNICA_3,
SAFE_CAST(IF( ARRAY_LENGTH(INFORMACION_TECNICA)>=4 ,INFORMACION_TECNICA[OFFSET(3)],null) AS STRING) AS INFORMACION_TECNICA_4,
SAFE_CAST(IF( ARRAY_LENGTH(INFORMACION_TECNICA)>=5 ,INFORMACION_TECNICA[OFFSET(4)],null) AS STRING) AS INFORMACION_TECNICA_5,
SAFE_CAST(IF( ARRAY_LENGTH(INFORMACION_TECNICA)>=6 ,INFORMACION_TECNICA[OFFSET(5)],null) AS STRING) AS INFORMACION_TECNICA_6,
SAFE_CAST(IF( ARRAY_LENGTH(INFORMACION_TECNICA)>=7 ,INFORMACION_TECNICA[OFFSET(6)],null) AS STRING) AS INFORMACION_TECNICA_7,
SAFE_CAST(IF( ARRAY_LENGTH(INFORMACION_TECNICA)>=8 ,INFORMACION_TECNICA[OFFSET(7)],null) AS STRING) AS INFORMACION_TECNICA_8,
SAFE_CAST(IF( ARRAY_LENGTH(INFORMACION_TECNICA)>=9 ,INFORMACION_TECNICA[OFFSET(8)],null) AS STRING) AS INFORMACION_TECNICA_9,
SAFE_CAST(IF( ARRAY_LENGTH(INFORMACION_TECNICA)>=10 ,INFORMACION_TECNICA[OFFSET(9)],null) AS STRING) AS INFORMACION_TECNICA_10,
SAFE_CAST(IF( ARRAY_LENGTH(PLANIFICADOR)>=1 ,PLANIFICADOR[OFFSET(0)],null) AS STRING) AS PLANIFICADOR_1,
SAFE_CAST(IF( ARRAY_LENGTH(PLANIFICADOR)>=2 ,PLANIFICADOR[OFFSET(1)],null) AS STRING) AS PLANIFICADOR_2,
SAFE_CAST(IF( ARRAY_LENGTH(PLANIFICADOR)>=3 ,PLANIFICADOR[OFFSET(2)],null) AS STRING) AS PLANIFICADOR_3,
SAFE_CAST(IF( ARRAY_LENGTH(PLANIFICADOR)>=4 ,PLANIFICADOR[OFFSET(3)],null) AS STRING) AS PLANIFICADOR_4,
SAFE_CAST(IF( ARRAY_LENGTH(PLANIFICADOR)>=5 ,PLANIFICADOR[OFFSET(4)],null) AS STRING) AS PLANIFICADOR_5,
SAFE_CAST(IF( ARRAY_LENGTH(PLANIFICADOR)>=6 ,PLANIFICADOR[OFFSET(5)],null) AS STRING) AS PLANIFICADOR_6,
SAFE_CAST(IF( ARRAY_LENGTH(PLANIFICADOR)>=7 ,PLANIFICADOR[OFFSET(6)],null) AS STRING) AS PLANIFICADOR_7,
SAFE_CAST(IF( ARRAY_LENGTH(PLANIFICADOR)>=8 ,PLANIFICADOR[OFFSET(7)],null) AS STRING) AS PLANIFICADOR_8,
SAFE_CAST(IF( ARRAY_LENGTH(PLANIFICADOR)>=9 ,PLANIFICADOR[OFFSET(8)],null) AS STRING) AS PLANIFICADOR_9,
SAFE_CAST(IF( ARRAY_LENGTH(PLANIFICADOR)>=10 ,PLANIFICADOR[OFFSET(9)],null) AS STRING) AS PLANIFICADOR_10,
SAFE_CAST(IF( ARRAY_LENGTH(ACTIVIDAD_AGROPECUARIA)>=1 ,ACTIVIDAD_AGROPECUARIA[OFFSET(0)],null) AS STRING) AS ACTIVIDAD_AGROPECUARIA_1,
SAFE_CAST(IF( ARRAY_LENGTH(ACTIVIDAD_AGROPECUARIA)>=2 ,ACTIVIDAD_AGROPECUARIA[OFFSET(1)],null) AS STRING) AS ACTIVIDAD_AGROPECUARIA_2,
SAFE_CAST(IF( ARRAY_LENGTH(ACTIVIDAD_AGROPECUARIA)>=3 ,ACTIVIDAD_AGROPECUARIA[OFFSET(2)],null) AS STRING) AS ACTIVIDAD_AGROPECUARIA_3,
SAFE_CAST(IF( ARRAY_LENGTH(ACTIVIDAD_AGROPECUARIA)>=4 ,ACTIVIDAD_AGROPECUARIA[OFFSET(3)],null) AS STRING) AS ACTIVIDAD_AGROPECUARIA_4,
SAFE_CAST(IF( ARRAY_LENGTH(ACTIVIDAD_AGROPECUARIA)>=5 ,ACTIVIDAD_AGROPECUARIA[OFFSET(4)],null) AS STRING) AS ACTIVIDAD_AGROPECUARIA_5,
SAFE_CAST(IF( ARRAY_LENGTH(ACTIVIDAD_AGROPECUARIA)>=6 ,ACTIVIDAD_AGROPECUARIA[OFFSET(5)],null) AS STRING) AS ACTIVIDAD_AGROPECUARIA_6,
SAFE_CAST(IF( ARRAY_LENGTH(ACTIVIDAD_AGROPECUARIA)>=7 ,ACTIVIDAD_AGROPECUARIA[OFFSET(6)],null) AS STRING) AS ACTIVIDAD_AGROPECUARIA_7,
SAFE_CAST(IF( ARRAY_LENGTH(ACTIVIDAD_AGROPECUARIA)>=8 ,ACTIVIDAD_AGROPECUARIA[OFFSET(7)],null) AS STRING) AS ACTIVIDAD_AGROPECUARIA_8,
SAFE_CAST(IF( ARRAY_LENGTH(ACTIVIDAD_AGROPECUARIA)>=9 ,ACTIVIDAD_AGROPECUARIA[OFFSET(8)],null) AS STRING) AS ACTIVIDAD_AGROPECUARIA_9,
SAFE_CAST(IF( ARRAY_LENGTH(ACTIVIDAD_AGROPECUARIA)>=10 ,ACTIVIDAD_AGROPECUARIA[OFFSET(9)],null) AS STRING) AS ACTIVIDAD_AGROPECUARIA_10,
SAFE_CAST(IF( ARRAY_LENGTH(DETALLE_ACTIVIDAD_AGROPRODUCTIVA)>=1 ,DETALLE_ACTIVIDAD_AGROPRODUCTIVA[OFFSET(0)],null) AS STRING) AS DETALLE_ACTIVIDAD_AGROPRODUCTIVA_1,
SAFE_CAST(IF( ARRAY_LENGTH(DETALLE_ACTIVIDAD_AGROPRODUCTIVA)>=2 ,DETALLE_ACTIVIDAD_AGROPRODUCTIVA[OFFSET(1)],null) AS STRING) AS DETALLE_ACTIVIDAD_AGROPRODUCTIVA_2,
SAFE_CAST(IF( ARRAY_LENGTH(DETALLE_ACTIVIDAD_AGROPRODUCTIVA)>=3 ,DETALLE_ACTIVIDAD_AGROPRODUCTIVA[OFFSET(2)],null) AS STRING) AS DETALLE_ACTIVIDAD_AGROPRODUCTIVA_3,
SAFE_CAST(IF( ARRAY_LENGTH(DETALLE_ACTIVIDAD_AGROPRODUCTIVA)>=4 ,DETALLE_ACTIVIDAD_AGROPRODUCTIVA[OFFSET(3)],null) AS STRING) AS DETALLE_ACTIVIDAD_AGROPRODUCTIVA_4,
SAFE_CAST(IF( ARRAY_LENGTH(DETALLE_ACTIVIDAD_AGROPRODUCTIVA)>=5 ,DETALLE_ACTIVIDAD_AGROPRODUCTIVA[OFFSET(4)],null) AS STRING) AS DETALLE_ACTIVIDAD_AGROPRODUCTIVA_5,
SAFE_CAST(IF( ARRAY_LENGTH(DETALLE_ACTIVIDAD_AGROPRODUCTIVA)>=6 ,DETALLE_ACTIVIDAD_AGROPRODUCTIVA[OFFSET(5)],null) AS STRING) AS DETALLE_ACTIVIDAD_AGROPRODUCTIVA_6,
SAFE_CAST(IF( ARRAY_LENGTH(DETALLE_ACTIVIDAD_AGROPRODUCTIVA)>=7 ,DETALLE_ACTIVIDAD_AGROPRODUCTIVA[OFFSET(6)],null) AS STRING) AS DETALLE_ACTIVIDAD_AGROPRODUCTIVA_7,
SAFE_CAST(IF( ARRAY_LENGTH(DETALLE_ACTIVIDAD_AGROPRODUCTIVA)>=8 ,DETALLE_ACTIVIDAD_AGROPRODUCTIVA[OFFSET(7)],null) AS STRING) AS DETALLE_ACTIVIDAD_AGROPRODUCTIVA_8,
SAFE_CAST(IF( ARRAY_LENGTH(DETALLE_ACTIVIDAD_AGROPRODUCTIVA)>=9 ,DETALLE_ACTIVIDAD_AGROPRODUCTIVA[OFFSET(8)],null) AS STRING) AS DETALLE_ACTIVIDAD_AGROPRODUCTIVA_9,
SAFE_CAST(IF( ARRAY_LENGTH(DETALLE_ACTIVIDAD_AGROPRODUCTIVA)>=10 ,DETALLE_ACTIVIDAD_AGROPRODUCTIVA[OFFSET(9)],null) AS STRING) AS DETALLE_ACTIVIDAD_AGROPRODUCTIVA_10

from `ribgo-desarrollo.dimensiones.json_table_INFORMACION_GENERAL_PIVOT`;


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_AVALISTAS_PIVOT` AS
select 
avalistas.AV_id_request,
AV_NUMERO_DOCUMENTO,
SPLIT(STRING_AGG(NOMBRE_AVALISTA,","),",") as NOMBRE_AVALISTA,
SPLIT(STRING_AGG(DOCUMENTO_AVALISTA,","),",")   as DOCUMENTO_AVALISTA,
from `ribgo-desarrollo.dimensiones.json_table_AVALISTAS` as avalistas 



group by avalistas.AV_id_request,AV_NUMERO_DOCUMENTO;

CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_AVALISTAS_PIVOT` AS
SELECT 
AV_id_request,
AV_NUMERO_DOCUMENTO,
SAFE_CAST(IF( ARRAY_LENGTH(NOMBRE_AVALISTA)>=1 ,NOMBRE_AVALISTA[OFFSET(0)],null) AS STRING) AS NOMBRE_AVALISTA_1,
SAFE_CAST(IF( ARRAY_LENGTH(NOMBRE_AVALISTA)>=2 ,NOMBRE_AVALISTA[OFFSET(1)],null) AS STRING) AS NOMBRE_AVALISTA_2,
SAFE_CAST(IF( ARRAY_LENGTH(NOMBRE_AVALISTA)>=3 ,NOMBRE_AVALISTA[OFFSET(2)],null) AS STRING) AS NOMBRE_AVALISTA_3,
SAFE_CAST(IF( ARRAY_LENGTH(NOMBRE_AVALISTA)>=4 ,NOMBRE_AVALISTA[OFFSET(3)],null) AS STRING) AS NOMBRE_AVALISTA_4,
SAFE_CAST(IF( ARRAY_LENGTH(NOMBRE_AVALISTA)>=5 ,NOMBRE_AVALISTA[OFFSET(4)],null) AS STRING) AS NOMBRE_AVALISTA_5,
SAFE_CAST(IF( ARRAY_LENGTH(NOMBRE_AVALISTA)>=6 ,NOMBRE_AVALISTA[OFFSET(5)],null) AS STRING) AS NOMBRE_AVALISTA_6,
SAFE_CAST(IF( ARRAY_LENGTH(NOMBRE_AVALISTA)>=7 ,NOMBRE_AVALISTA[OFFSET(6)],null) AS STRING) AS NOMBRE_AVALISTA_7,
SAFE_CAST(IF( ARRAY_LENGTH(NOMBRE_AVALISTA)>=8 ,NOMBRE_AVALISTA[OFFSET(7)],null) AS STRING) AS NOMBRE_AVALISTA_8,
SAFE_CAST(IF( ARRAY_LENGTH(NOMBRE_AVALISTA)>=9 ,NOMBRE_AVALISTA[OFFSET(8)],null) AS STRING) AS NOMBRE_AVALISTA_9,
SAFE_CAST(IF( ARRAY_LENGTH(NOMBRE_AVALISTA)>=10 ,NOMBRE_AVALISTA[OFFSET(9)],null) AS STRING) AS NOMBRE_AVALISTA_10,
SAFE_CAST(IF( ARRAY_LENGTH(DOCUMENTO_AVALISTA)>=1 ,DOCUMENTO_AVALISTA[OFFSET(0)],null) AS INT64) AS DOCUMENTO_AVALISTA_1,
SAFE_CAST(IF( ARRAY_LENGTH(DOCUMENTO_AVALISTA)>=2 ,DOCUMENTO_AVALISTA[OFFSET(1)],null) AS INT64) AS DOCUMENTO_AVALISTA_2,
SAFE_CAST(IF( ARRAY_LENGTH(DOCUMENTO_AVALISTA)>=3 ,DOCUMENTO_AVALISTA[OFFSET(2)],null) AS INT64) AS DOCUMENTO_AVALISTA_3,
SAFE_CAST(IF( ARRAY_LENGTH(DOCUMENTO_AVALISTA)>=4 ,DOCUMENTO_AVALISTA[OFFSET(3)],null) AS INT64) AS DOCUMENTO_AVALISTA_4,
SAFE_CAST(IF( ARRAY_LENGTH(DOCUMENTO_AVALISTA)>=5 ,DOCUMENTO_AVALISTA[OFFSET(4)],null) AS INT64) AS DOCUMENTO_AVALISTA_5,
SAFE_CAST(IF( ARRAY_LENGTH(DOCUMENTO_AVALISTA)>=6 ,DOCUMENTO_AVALISTA[OFFSET(5)],null) AS INT64) AS DOCUMENTO_AVALISTA_6,
SAFE_CAST(IF( ARRAY_LENGTH(DOCUMENTO_AVALISTA)>=7 ,DOCUMENTO_AVALISTA[OFFSET(6)],null) AS INT64) AS DOCUMENTO_AVALISTA_7,
SAFE_CAST(IF( ARRAY_LENGTH(DOCUMENTO_AVALISTA)>=8 ,DOCUMENTO_AVALISTA[OFFSET(7)],null) AS INT64) AS DOCUMENTO_AVALISTA_8,
SAFE_CAST(IF( ARRAY_LENGTH(DOCUMENTO_AVALISTA)>=9 ,DOCUMENTO_AVALISTA[OFFSET(8)],null) AS INT64) AS DOCUMENTO_AVALISTA_9,
SAFE_CAST(IF( ARRAY_LENGTH(DOCUMENTO_AVALISTA)>=10 ,DOCUMENTO_AVALISTA[OFFSET(9)],null) AS INT64) AS DOCUMENTO_AVALISTA_10
from `ribgo-desarrollo.dimensiones.json_table_AVALISTAS_PIVOT`;


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_INFORMACION_ENTRADA_HORIZONTAL` as
Select informacion_entrada.*,
informacion_general.NOMBRE_CONTACTO_1,			
informacion_general.NOMBRE_CONTACTO_2,					
informacion_general.NOMBRE_CONTACTO_3,				
informacion_general.NOMBRE_CONTACTO_4,					
informacion_general.NOMBRE_CONTACTO_5,					
informacion_general.NOMBRE_CONTACTO_6,					
informacion_general.NOMBRE_CONTACTO_7,					
informacion_general.NOMBRE_CONTACTO_8,					
informacion_general.NOMBRE_CONTACTO_9,					
informacion_general.NOMBRE_CONTACTO_10,					
informacion_general.CELULAR_CONTACTO_1,					
informacion_general.CELULAR_CONTACTO_2,					
informacion_general.CELULAR_CONTACTO_3,					
informacion_general.CELULAR_CONTACTO_4,					
informacion_general.CELULAR_CONTACTO_5,					
informacion_general.CELULAR_CONTACTO_6,					
informacion_general.CELULAR_CONTACTO_7,					
informacion_general.CELULAR_CONTACTO_8,					
informacion_general.CELULAR_CONTACTO_9,					
informacion_general.CELULAR_CONTACTO_10,					
informacion_general.CORREO_CONTACTO_1,					
informacion_general.CORREO_CONTACTO_2,					
informacion_general.CORREO_CONTACTO_3,					
informacion_general.CORREO_CONTACTO_4,					
informacion_general.CORREO_CONTACTO_5,					
informacion_general.CORREO_CONTACTO_6,					
informacion_general.CORREO_CONTACTO_7,					
informacion_general.CORREO_CONTACTO_8,					
informacion_general.CORREO_CONTACTO_9,					
informacion_general.CORREO_CONTACTO_10,					
informacion_general.NUMERO_TOTAL_DE_EMPLEADOS_1,					
informacion_general.NUMERO_TOTAL_DE_EMPLEADOS_2,					
informacion_general.NUMERO_TOTAL_DE_EMPLEADOS_3,					
informacion_general.NUMERO_TOTAL_DE_EMPLEADOS_4,					
informacion_general.NUMERO_TOTAL_DE_EMPLEADOS_5,					
informacion_general.NUMERO_TOTAL_DE_EMPLEADOS_6,					
informacion_general.NUMERO_TOTAL_DE_EMPLEADOS_7,					
informacion_general.NUMERO_TOTAL_DE_EMPLEADOS_8,					
informacion_general.NUMERO_TOTAL_DE_EMPLEADOS_9,					
informacion_general.NUMERO_TOTAL_DE_EMPLEADOS_10,					
informacion_general.SALARIO_PROMEDIO_EN_PESOS_1,					
informacion_general.SALARIO_PROMEDIO_EN_PESOS_2,					
informacion_general.SALARIO_PROMEDIO_EN_PESOS_3,					
informacion_general.SALARIO_PROMEDIO_EN_PESOS_4,					
informacion_general.SALARIO_PROMEDIO_EN_PESOS_5,					
informacion_general.FECHA_CONSTITUCION_1,
informacion_general.FECHA_CONSTITUCION_2,
informacion_general.FECHA_CONSTITUCION_3,					
informacion_general.FECHA_CONSTITUCION_4,					
informacion_general.FECHA_CONSTITUCION_5,					
informacion_general.FECHA_CONSTITUCION_6,					
informacion_general.FECHA_CONSTITUCION_7,					
informacion_general.FECHA_CONSTITUCION_8,					
informacion_general.FECHA_CONSTITUCION_9,					
informacion_general.FECHA_CONSTITUCION_10,					
informacion_general.INFORMACION_TECNICA_1,					
informacion_general.INFORMACION_TECNICA_2,					
informacion_general.INFORMACION_TECNICA_3,					
informacion_general.INFORMACION_TECNICA_4,					
informacion_general.INFORMACION_TECNICA_5,					
informacion_general.INFORMACION_TECNICA_6,					
informacion_general.INFORMACION_TECNICA_7,					
informacion_general.INFORMACION_TECNICA_8,					
informacion_general.INFORMACION_TECNICA_9,					
informacion_general.INFORMACION_TECNICA_10,					
informacion_general.PLANIFICADOR_1,			
informacion_general.PLANIFICADOR_2,					
informacion_general.PLANIFICADOR_3,				
informacion_general.PLANIFICADOR_4,					
informacion_general.PLANIFICADOR_5,					
informacion_general.PLANIFICADOR_6,					
informacion_general.PLANIFICADOR_7,					
informacion_general.PLANIFICADOR_8,					
informacion_general.PLANIFICADOR_9,					
informacion_general.PLANIFICADOR_10,					
informacion_general.ACTIVIDAD_AGROPECUARIA_1,					
informacion_general.ACTIVIDAD_AGROPECUARIA_2,					
informacion_general.ACTIVIDAD_AGROPECUARIA_3,					
informacion_general.ACTIVIDAD_AGROPECUARIA_4,					
informacion_general.ACTIVIDAD_AGROPECUARIA_5,					
informacion_general.ACTIVIDAD_AGROPECUARIA_6,					
informacion_general.ACTIVIDAD_AGROPECUARIA_7,					
informacion_general.ACTIVIDAD_AGROPECUARIA_8,					
informacion_general.ACTIVIDAD_AGROPECUARIA_9,					
informacion_general.ACTIVIDAD_AGROPECUARIA_10,					
informacion_general.DETALLE_ACTIVIDAD_AGROPRODUCTIVA_1,					
informacion_general.DETALLE_ACTIVIDAD_AGROPRODUCTIVA_2,					
informacion_general.DETALLE_ACTIVIDAD_AGROPRODUCTIVA_3,					
informacion_general.DETALLE_ACTIVIDAD_AGROPRODUCTIVA_4,					
informacion_general.DETALLE_ACTIVIDAD_AGROPRODUCTIVA_5,					
informacion_general.DETALLE_ACTIVIDAD_AGROPRODUCTIVA_6,					
informacion_general.DETALLE_ACTIVIDAD_AGROPRODUCTIVA_7,					
informacion_general.DETALLE_ACTIVIDAD_AGROPRODUCTIVA_8,					
informacion_general.DETALLE_ACTIVIDAD_AGROPRODUCTIVA_9,					
informacion_general.DETALLE_ACTIVIDAD_AGROPRODUCTIVA_10,
informacion_general.SECTOR_1,
informacion_general.SECTOR_2,
informacion_general.SECTOR_3,
informacion_general.SECTOR_4,
informacion_general.SECTOR_5,
informacion_general.SECTOR_6,
informacion_general.SECTOR_7,
informacion_general.SECTOR_8,
informacion_general.SECTOR_9,
informacion_general.SECTOR_10,
informacion_general.ACTIVIDAD_1 as ACTIVIDAD,

informacion_general.CALIFICACION_R_1,
informacion_general.CALIFICACION_R_2,
informacion_general.CALIFICACION_R_3,
informacion_general.CALIFICACION_R_4,
informacion_general.CALIFICACION_R_5,
informacion_general.CALIFICACION_R_6,
informacion_general.CALIFICACION_R_7,
informacion_general.CALIFICACION_R_8,
informacion_general.CALIFICACION_R_9,
informacion_general.CALIFICACION_R_10,
informacion_general.TIPO_SOCIEDAD_1,
informacion_general.TIPO_SOCIEDAD_2,
informacion_general.TIPO_SOCIEDAD_3,
informacion_general.TIPO_SOCIEDAD_4,
informacion_general.TIPO_SOCIEDAD_5,
informacion_general.TIPO_SOCIEDAD_6,
informacion_general.TIPO_SOCIEDAD_7,
informacion_general.TIPO_SOCIEDAD_8,
informacion_general.TIPO_SOCIEDAD_9,
informacion_general.TIPO_SOCIEDAD_10,


codeudores.cedula_codeudor_1,
codeudores.cedula_codeudor_2,
codeudores.cedula_codeudor_3,
codeudores.cedula_codeudor_4,
codeudores.cedula_codeudor_5,
codeudores.cedula_codeudor_6,
codeudores.cedula_codeudor_7,
codeudores.cedula_codeudor_8,
codeudores.cedula_codeudor_9,
codeudores.cedula_codeudor_10,
codeudores.cedula_titular_1,
codeudores.cedula_titular_2,
codeudores.cedula_titular_3,
codeudores.cedula_titular_4,
codeudores.cedula_titular_5,
codeudores.cedula_titular_6,
codeudores.cedula_titular_7,
codeudores.cedula_titular_8,
codeudores.cedula_titular_9,
codeudores.cedula_titular_10,
informacion_natural_pivot.RELEVO_GENERACIONAL_PERSONA_NATURAL_1,
informacion_natural_pivot.RELEVO_GENERACIONAL_PERSONA_NATURAL_2,
informacion_natural_pivot.RELEVO_GENERACIONAL_PERSONA_NATURAL_3,
informacion_natural_pivot.RELEVO_GENERACIONAL_PERSONA_NATURAL_4,
informacion_natural_pivot.RELEVO_GENERACIONAL_PERSONA_NATURAL_5,


informacion_natural_pivot.ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD_1,
informacion_natural_pivot.ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD_2,
informacion_natural_pivot.ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD_3,
informacion_natural_pivot.ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD_4,
informacion_natural_pivot.ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD_5,


informacion_natural_pivot.RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES_1,
informacion_natural_pivot.RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES_2,
informacion_natural_pivot.RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES_3,
informacion_natural_pivot.RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES_4,
informacion_natural_pivot.RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES_5,



informacion_juridica_pivot.PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO_1,
informacion_juridica_pivot.PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO_2,
informacion_juridica_pivot.PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO_3,
informacion_juridica_pivot.PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO_4,
informacion_juridica_pivot.PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO_5,

informacion_juridica_pivot.RELEVO_GENERACIONAL_PERSONA_JURIDICA_1,
informacion_juridica_pivot.RELEVO_GENERACIONAL_PERSONA_JURIDICA_2,
informacion_juridica_pivot.RELEVO_GENERACIONAL_PERSONA_JURIDICA_3,
informacion_juridica_pivot.RELEVO_GENERACIONAL_PERSONA_JURIDICA_4,
informacion_juridica_pivot.RELEVO_GENERACIONAL_PERSONA_JURIDICA_5,

informacion_juridica_pivot.LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON_1,
informacion_juridica_pivot.LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON_2,
informacion_juridica_pivot.LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON_3,
informacion_juridica_pivot.LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON_4,
informacion_juridica_pivot.LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON_5,

informacion_juridica_pivot.PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO_1,
informacion_juridica_pivot.PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO_2,
informacion_juridica_pivot.PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO_3,
informacion_juridica_pivot.PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO_4,
informacion_juridica_pivot.PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO_5,

informacion_juridica_pivot.ENTORNO_UBICACION_DEL_NEGOCIO_1,
informacion_juridica_pivot.ENTORNO_UBICACION_DEL_NEGOCIO_2,
informacion_juridica_pivot.ENTORNO_UBICACION_DEL_NEGOCIO_3,
informacion_juridica_pivot.ENTORNO_UBICACION_DEL_NEGOCIO_4,
informacion_juridica_pivot.ENTORNO_UBICACION_DEL_NEGOCIO_5,
informacion_juridica_pivot.EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION_1,
informacion_juridica_pivot.EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION_2,
informacion_juridica_pivot.EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION_3,
informacion_juridica_pivot.EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION_4,
informacion_juridica_pivot.EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION_5,

informacion_mercado.PRODUCTO_1,
informacion_mercado.PRODUCTO_2,
informacion_mercado.PRODUCTO_3,
informacion_mercado.PRODUCTO_4,
informacion_mercado.PRODUCTO_5,

informacion_mercado.IMPORTA_1,
informacion_mercado.EXPORTA_1,


informacion_mercado.MERCADO_1,
informacion_mercado.MERCADO_2,
informacion_mercado.MERCADO_3,
informacion_mercado.MERCADO_4,
informacion_mercado.MERCADO_5,

informacion_mercado.PROVEDOR_1,
informacion_mercado.PROVEDOR_2,
informacion_mercado.PROVEDOR_3,
informacion_mercado.PROVEDOR_4,
informacion_mercado.PROVEDOR_5,
informacion_mercado.PAISES_A_LOS_CUALES_IMPORTA_1,
informacion_mercado.PAISES_A_LOS_CUALES_IMPORTA_2,
informacion_mercado.PAISES_A_LOS_CUALES_IMPORTA_3,
informacion_mercado.PAISES_A_LOS_CUALES_IMPORTA_4,
informacion_mercado.PAISES_A_LOS_CUALES_IMPORTA_5,
informacion_mercado.MONTOS_ANUALES_DE_IMPORTACION_1,
informacion_mercado.MONTOS_ANUALES_DE_IMPORTACION_2,
informacion_mercado.MONTOS_ANUALES_DE_IMPORTACION_3,
informacion_mercado.MONTOS_ANUALES_DE_IMPORTACION_4,
informacion_mercado.MONTOS_ANUALES_DE_IMPORTACION_5,
informacion_mercado.PAISES_A_LOS_CUALES_EXPORTA_1,
informacion_mercado.MONTOS_ANUALES_DE_EXPORTACION_1,
informacion_mercado.MONTOS_ANUALES_DE_EXPORTACION_2,
informacion_mercado.MONTOS_ANUALES_DE_EXPORTACION_3,
informacion_mercado.MONTOS_ANUALES_DE_EXPORTACION_4,
informacion_mercado.MONTOS_ANUALES_DE_EXPORTACION_5,
informacion_movimiento_pivot.REQUIERE_TECNICO_1 as REQUIERE_TECNICO,
informacion_movimiento_pivot.CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO_1 as CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO,				
informacion_movimiento_pivot.PUNTAJE_CIFIN_1 as PUNTAJE_CIFIN,
			
avalistas.NOMBRE_AVALISTA_1	,				
avalistas.NOMBRE_AVALISTA_2	,				
avalistas.NOMBRE_AVALISTA_3	,				
avalistas.NOMBRE_AVALISTA_4	,				
avalistas.NOMBRE_AVALISTA_5	,				
avalistas.NOMBRE_AVALISTA_6	,				
avalistas.NOMBRE_AVALISTA_7	,				
avalistas.NOMBRE_AVALISTA_8	,				
avalistas.NOMBRE_AVALISTA_9	,				
avalistas.NOMBRE_AVALISTA_10,

avalistas.DOCUMENTO_AVALISTA_1,
avalistas.DOCUMENTO_AVALISTA_2,
avalistas.DOCUMENTO_AVALISTA_3,
avalistas.DOCUMENTO_AVALISTA_4,
avalistas.DOCUMENTO_AVALISTA_5,
avalistas.DOCUMENTO_AVALISTA_6,
avalistas.DOCUMENTO_AVALISTA_7,
avalistas.DOCUMENTO_AVALISTA_8,
avalistas.DOCUMENTO_AVALISTA_9,
avalistas.DOCUMENTO_AVALISTA_10,

FROM `ribgo-desarrollo.dimensiones.json_table_INFORMACION_ENTRADA` as informacion_entrada left join `ribgo-desarrollo.dimensiones.json_table_informacion_natural_pivot` as informacion_natural_pivot ON 
informacion_entrada.id_request = informacion_natural_pivot.IN_id_request and
informacion_entrada.NUMERO_DOCUMENTO = informacion_natural_pivot.IN_NUMERO_DOCUMENTO



 left join
`ribgo-desarrollo.dimensiones.json_table_informacion_juridica_pivot` as informacion_juridica_pivot ON 
 informacion_entrada.id_request = informacion_juridica_pivot.IJ_id_request and
 informacion_entrada.NUMERO_DOCUMENTO = informacion_juridica_pivot.IJ_NUMERO_DOCUMENTO 
 

 left join `ribgo-desarrollo.dimensiones.json_table_informacion_movimiento_pivot` as informacion_movimiento_pivot ON informacion_entrada.id_request = informacion_movimiento_pivot.IM_id_request and
informacion_entrada.NUMERO_DOCUMENTO = informacion_movimiento_pivot.IM_NUMERO_DOCUMENTO

 LEFT JOIN `ribgo-desarrollo.dimensiones.json_table_mercado_pivot` as informacion_mercado ON 
 informacion_entrada.id_request=informacion_mercado.M_id_request and
 informacion_entrada.NUMERO_DOCUMENTO = informacion_mercado.M_NUMERO_DOCUMENTO 
 


 LEFT JOIN `ribgo-desarrollo.dimensiones.json_table_cedulas_codeudores_PIVOT` as codeudores ON
  informacion_entrada.id_request=codeudores.cod_id_request and
  informacion_entrada.NUMERO_DOCUMENTO=codeudores.cod_NUMERO_DOCUMENTO

LEFT JOIN `ribgo-desarrollo.dimensiones.json_table_INFORMACION_GENERAL_PIVOT` as informacion_general ON
  informacion_entrada.id_request=informacion_general.IG_id_request and
  informacion_entrada.NUMERO_DOCUMENTO=informacion_general.IG_NUMERO_DOCUMENTO
  
LEFT JOIN `ribgo-desarrollo.dimensiones.json_table_AVALISTAS_PIVOT` AS avalistas ON 
  informacion_entrada.id_request=avalistas.AV_id_request and 
  informacion_entrada.NUMERO_DOCUMENTO=avalistas.AV_NUMERO_DOCUMENTO;


######################################################################
# Hu2 Crea el json y lo cruza con la información de entrada pivoteando ###########
######################################################################
CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_INFORMACION_SALIDA` AS
SELECT 
OP_id_request as salida_id_request,
NUMERO_DOCUMENTO as salida_NUMERO_DOCUMENTO,
PRODUCTO,
OBSERVACIONES_COMERCIALES,
CODIGO_BASE,
TIPO_PRODUCTO,  
MODALIDAD_PRODUCTO,  
CODIGO_PRODUCTO, 
MONTO_PRODUCTO, 
PLAZO_PRODUCTO, 
PERIODO_GRACIA_PRODUCTO, 
DETALLE_GARANTIA_AVALISTA_OTRA_PRODUCTO,
DECISION,
VALOR_APROBADO,
VIGENCIA_HASTA,
DESTINO,
FUENTES_DE_PAGO_PRODUCTO,
OTRA_FUENTE_DE_PAGO_PRODUCTO,
DESTINO_RECURSOS_PRODUCTO,
MONTO_TOTAL_INVERSION_PRODUCTO,
APORTE_RECURSOS_PROPIOS_Y_O_SOCIOS_PRODUCTO,
TIPO_DE_FONDEO_PRODUCTO,
DETALLE_APORTES_PROPIOS_PRODUCTO,
TASA_PONDERADA,
NUMERO_DE_OBLIGACIONES_RECOGER,
AMORTIZACION_K,
AMORTIZACION_I,
TOTAL_SOLICITADO_CLIENTE,
TOTAL_VALOR_APROBADO_CLIENTE,
DECISION_CLIENTE,
SPLIT(STRING_AGG(CLIENTE_SOLICITA_PLAZO,","),",")   as CLIENTE_SOLICITA_PLAZO,
SPLIT(STRING_AGG(GARANTIA_PRODUCTO,","),",")   as GARANTIA_PRODUCTO,

FROM 
`ribgo-desarrollo.dimensiones.json_table_OPERACIONES` as operaciones 

group by operaciones.OP_id_request, operaciones.NUMERO_DOCUMENTO,operaciones.PRODUCTO,
OBSERVACIONES_COMERCIALES,
CODIGO_BASE,
TIPO_PRODUCTO,  
MODALIDAD_PRODUCTO,  
CODIGO_PRODUCTO, 
MONTO_PRODUCTO, 
PLAZO_PRODUCTO, 
PERIODO_GRACIA_PRODUCTO, 
DETALLE_GARANTIA_AVALISTA_OTRA_PRODUCTO,
DECISION,
VALOR_APROBADO,
VIGENCIA_HASTA,
DESTINO,
FUENTES_DE_PAGO_PRODUCTO,
OTRA_FUENTE_DE_PAGO_PRODUCTO,
DESTINO_RECURSOS_PRODUCTO,
MONTO_TOTAL_INVERSION_PRODUCTO,
APORTE_RECURSOS_PROPIOS_Y_O_SOCIOS_PRODUCTO,
TIPO_DE_FONDEO_PRODUCTO,
DETALLE_APORTES_PROPIOS_PRODUCTO,
TASA_PONDERADA,
NUMERO_DE_OBLIGACIONES_RECOGER,
AMORTIZACION_K,
AMORTIZACION_I,
TOTAL_SOLICITADO_CLIENTE,
TOTAL_VALOR_APROBADO_CLIENTE,
DECISION_CLIENTE;




CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_INFORMACION_SALIDA_PIVOT` AS

SELECT
salida_id_request,
salida_NUMERO_DOCUMENTO,
PRODUCTO,
OBSERVACIONES_COMERCIALES,
CODIGO_BASE,
TIPO_PRODUCTO,  
MODALIDAD_PRODUCTO,  
CODIGO_PRODUCTO, 
MONTO_PRODUCTO, 
PLAZO_PRODUCTO, 
PERIODO_GRACIA_PRODUCTO, 
DETALLE_GARANTIA_AVALISTA_OTRA_PRODUCTO,
DECISION AS DECISION_JSON,
VALOR_APROBADO,
VIGENCIA_HASTA,
DESTINO AS DESTINO,
FUENTES_DE_PAGO_PRODUCTO,
OTRA_FUENTE_DE_PAGO_PRODUCTO,
DESTINO_RECURSOS_PRODUCTO,
MONTO_TOTAL_INVERSION_PRODUCTO,
APORTE_RECURSOS_PROPIOS_Y_O_SOCIOS_PRODUCTO,
TIPO_DE_FONDEO_PRODUCTO,
DETALLE_APORTES_PROPIOS_PRODUCTO,
TASA_PONDERADA,
NUMERO_DE_OBLIGACIONES_RECOGER,
AMORTIZACION_K,
AMORTIZACION_I,
TOTAL_SOLICITADO_CLIENTE,
TOTAL_VALOR_APROBADO_CLIENTE,
DECISION_CLIENTE,

IF( ARRAY_LENGTH(CLIENTE_SOLICITA_PLAZO)>=1 ,CLIENTE_SOLICITA_PLAZO[OFFSET(0)],null)  AS CLIENTE_SOLICITA_PLAZO_1,
IF( ARRAY_LENGTH(CLIENTE_SOLICITA_PLAZO)>=2 ,CLIENTE_SOLICITA_PLAZO[OFFSET(1)],null)  AS CLIENTE_SOLICITA_PLAZO_2,
IF( ARRAY_LENGTH(CLIENTE_SOLICITA_PLAZO)>=3 ,CLIENTE_SOLICITA_PLAZO[OFFSET(2)],null)  AS CLIENTE_SOLICITA_PLAZO_3,
IF( ARRAY_LENGTH(CLIENTE_SOLICITA_PLAZO)>=4 ,CLIENTE_SOLICITA_PLAZO[OFFSET(3)],null)  AS CLIENTE_SOLICITA_PLAZO_4,
IF( ARRAY_LENGTH(CLIENTE_SOLICITA_PLAZO)>=5 ,CLIENTE_SOLICITA_PLAZO[OFFSET(4)],null)  AS CLIENTE_SOLICITA_PLAZO_5,
IF( ARRAY_LENGTH(CLIENTE_SOLICITA_PLAZO)>=6 ,CLIENTE_SOLICITA_PLAZO[OFFSET(5)],null)  AS CLIENTE_SOLICITA_PLAZO_6,
IF( ARRAY_LENGTH(CLIENTE_SOLICITA_PLAZO)>=7 ,CLIENTE_SOLICITA_PLAZO[OFFSET(6)],null)  AS CLIENTE_SOLICITA_PLAZO_7,
IF( ARRAY_LENGTH(CLIENTE_SOLICITA_PLAZO)>=8 ,CLIENTE_SOLICITA_PLAZO[OFFSET(7)],null)  AS CLIENTE_SOLICITA_PLAZO_8,
IF( ARRAY_LENGTH(CLIENTE_SOLICITA_PLAZO)>=9 ,CLIENTE_SOLICITA_PLAZO[OFFSET(8)],null)  AS CLIENTE_SOLICITA_PLAZO_9,
IF( ARRAY_LENGTH(CLIENTE_SOLICITA_PLAZO)>=10 ,CLIENTE_SOLICITA_PLAZO[OFFSET(9)],null)  AS CLIENTE_SOLICITA_PLAZO_10,

IF( ARRAY_LENGTH(GARANTIA_PRODUCTO)>=1 ,GARANTIA_PRODUCTO[OFFSET(0)],null)  AS GARANTIA_PRODUCTO_1,
IF( ARRAY_LENGTH(GARANTIA_PRODUCTO)>=2 ,GARANTIA_PRODUCTO[OFFSET(1)],null)  AS GARANTIA_PRODUCTO_2,
IF( ARRAY_LENGTH(GARANTIA_PRODUCTO)>=3 ,GARANTIA_PRODUCTO[OFFSET(2)],null)  AS GARANTIA_PRODUCTO_3,
IF( ARRAY_LENGTH(GARANTIA_PRODUCTO)>=4 ,GARANTIA_PRODUCTO[OFFSET(3)],null)  AS GARANTIA_PRODUCTO_4,
IF( ARRAY_LENGTH(GARANTIA_PRODUCTO)>=5 ,GARANTIA_PRODUCTO[OFFSET(4)],null)  AS GARANTIA_PRODUCTO_5,
IF( ARRAY_LENGTH(GARANTIA_PRODUCTO)>=6 ,GARANTIA_PRODUCTO[OFFSET(5)],null)  AS GARANTIA_PRODUCTO_6,
IF( ARRAY_LENGTH(GARANTIA_PRODUCTO)>=7 ,GARANTIA_PRODUCTO[OFFSET(6)],null)  AS GARANTIA_PRODUCTO_7,
IF( ARRAY_LENGTH(GARANTIA_PRODUCTO)>=8 ,GARANTIA_PRODUCTO[OFFSET(7)],null)  AS GARANTIA_PRODUCTO_8,
IF( ARRAY_LENGTH(GARANTIA_PRODUCTO)>=9 ,GARANTIA_PRODUCTO[OFFSET(8)],null)  AS GARANTIA_PRODUCTO_9,
IF( ARRAY_LENGTH(GARANTIA_PRODUCTO)>=10 ,GARANTIA_PRODUCTO[OFFSET(9)],null)  AS GARANTIA_PRODUCTO_10

fROM `ribgo-desarrollo.dimensiones.json_table_INFORMACION_SALIDA`;


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_RUBRO_CORTO_PLAZO_PIVOT` AS
SELECT 
corto_plazo.RUBROCORTOPLAZO_id_request as id_request,
corto_plazo.RUBROCORTOPLAZO_NUMERO_DOCUMENTO as NUMERO_DOCUMENTO,
corto_plazo.PRODUCTO as PRODUCTO,
CODIGO_RUBRO_CORTO_PLAZO as CODIGO_RUBRO,
DESCRIPCION_CODIGO_RUBRO_CORTO_PLAZO as DESCRIPCION_CODIGO_RUBRO,
VALOR_PROYECTO_CORTO_PLAZO as VALOR_PROYECTO,
UNIDADES_A_FINANCIAR_CORTO_PLAZO as UNIDADES_A_FINANCIAR,
MONTO_A_FINANCIAR_CORTO_PLAZO as MONTO_A_FINANCIAR
FROM  `ribgo-desarrollo.dimensiones.json_table_RUBRO_CORTO_PLAZO`  as corto_plazo;


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_RUBRO_LARGO_PLAZO_PIVOT` AS
SELECT 
largo_plazo.RUBROLARGPLAZO_id_request as id_request,
largo_plazo.RUBROLARGPLAZO_NUMERO_DOCUMENTO as NUMERO_DOCUMENTO,
largo_plazo.PRODUCTO as PRODUCTO,
CODIGO_RUBRO_LARGO_PLAZO as CODIGO_RUBRO,
DESCRIPCION_CODIGO_RUBRO_LARGO_PLAZO as DESCRIPCION_CODIGO,
VALOR_PROYECTO_LARGO_PLAZO as VALOR_PROYECTO,
UNIDADES_A_FINANCIAR_LARGO_PLAZO as UNIDADES_A_FINANCIAR,
MONTO_A_FINANCIAR_LARGO_PLAZO as MONTO_A_FINANCIAR,
FROM  `ribgo-desarrollo.dimensiones.json_table_RUBRO_LARGO_PLAZO` as largo_plazo; 


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_RUBRO_PIVOT` As
 select * from `ribgo-desarrollo.dimensiones.json_table_RUBRO_CORTO_PLAZO_PIVOT` UNION ALL  
 select * from `ribgo-desarrollo.dimensiones.json_table_RUBRO_LARGO_PLAZO_PIVOT`;


create or replace table `ribgo-desarrollo.dimensiones.json_table_INFORMACION_SALIDA_PIVOT_FINAL` as  
select 
informacion_salida.*,
rubro.CODIGO_RUBRO,
rubro.DESCRIPCION_CODIGO_RUBRO,
rubro.VALOR_PROYECTO,
rubro.UNIDADES_A_FINANCIAR,
rubro.MONTO_A_FINANCIAR
from `ribgo-desarrollo.dimensiones.json_table_INFORMACION_SALIDA_PIVOT` AS informacion_salida LEFT JOIN 
`ribgo-desarrollo.dimensiones.json_table_RUBRO_PIVOT` as rubro 
ON informacion_salida.salida_id_request = rubro.id_request  and informacion_salida.salida_NUMERO_DOCUMENTO=rubro.NUMERO_DOCUMENTO  and
informacion_salida.PRODUCTO= rubro.PRODUCTO;

######################################################################
# Hu3 Union de toda las sabanas  ###########
######################################################################


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.ribgo_cc_pivot` AS
SELECT 
ribgo.id,
ribgo.Radicacion.createdAt as Radicacion_creadetAt,
ribgo.Radicacion.timeLastChange as Radicacion_timeLastChange,
ribgo.Radicacion_active,
ribgo.cedula_vendedos_asesor as cc_vendedor_asesor,
ribgo.PdtCargueDocumentos.createdAt as PdtCargueDocumentos_createdAt,
ribgo.PdtCargueDocumentos.timeLastChange as PdtCargueDocumentos_timeLastChange,
ribgo.PdtCargueDocumentos_active,
ribgo.PdtAsignacionMesa.createdAt as PdtAsignacionMesa_createdAt,
ribgo.PdtAsignacionMesa.timeLastChange as PdtAsignacionMesa_timeLastChange,
ribgo.PdtAsignacionMesa_active,
ribgo.UserRadicacion,
ribgo.CargoRadicacion,
ribgo.correccion_fechacreacion_radicacion_1,
ribgo.correccion_fechacreacion_radicacion_2,
ribgo.correccion_fechacreacion_radicacion_3,
ribgo.correccion_fechacreacion_radicacion_4,
ribgo.correccion_fechacreacion_radicacion_5,
ribgo.correccion_usuarios_radicacion_1,
ribgo.correccion_usuarios_radicacion_2,
ribgo.correccion_usuarios_radicacion_3,
ribgo.correccion_usuarios_radicacion_4,
ribgo.correccion_usuarios_radicacion_5,
ribgo.Mesa.createdAt as Mesa_createdAt,
ribgo.Mesa.timeLastChange as Mesa_timeLastChange,
ribgo.UserMesa,
ribgo.CargoMesa,
ribgo.Mesa_active,
ribgo.Causal,
ribgo.correccion_fechacreacion_mesa_1,
ribgo.correccion_fechacreacion_mesa_2,
ribgo.correccion_fechacreacion_mesa_3,
ribgo.correccion_fechacreacion_mesa_4,
ribgo.correccion_fechacreacion_mesa_5,
ribgo.correccion_usuarios_mesa_1,
ribgo.correccion_usuarios_mesa_2,
ribgo.correccion_usuarios_mesa_3,
ribgo.correccion_usuarios_mesa_4,
ribgo.correccion_usuarios_mesa_5,
ribgo.PdtAsignacionTecnico.createdAt as PdtAsignacionTecnico_createdAt,
ribgo.PdtAsignacionTecnico.timeLastChange as PdtAsignacionTecnico_timeLastChange,
ribgo.PdtAsignacionTecnico_active,
ribgo.UserPdtAsignacionTecnico,
ribgo.PdtAsignacionCredito.createdAt as PdtAsignacionCredito_createdAt,
ribgo.PdtAsignacionCredito.timeLastChange as PdtAsignacionCredito_timeLastChange,
ribgo.PdtAsignacionCredito_active,
ribgo.UserPdtAsignacionCredito,
ribgo.PdtAsignacionProfecional.createdAt as PdtAsignacionProfecional_createdAt,
ribgo.PdtAsignacionProfecional.timeLastChange as PdtAsignacionProfecional_timeLastChange,
ribgo.PdtAsignacionProcesoExpres_active,
ribgo.UserPdtAsignacionProcesoExpres,
ribgo.DevueltoPorMesa.createdAt as DevueltoPorMesa_createdAt,
ribgo.DevueltoPorMesa.timeLastChange as DevueltoPorMesa_timeLastChange,
ribgo.DevueltoPorMesa_active,
ribgo.UserDevueltoPorMesa,
ribgo.causal_devolucion_mesa_1,
ribgo.causal_devolucion_mesa_2,
ribgo.causal_devolucion_mesa_3,
ribgo.causal_devolucion_mesa_4,
ribgo.causal_devolucion_mesa_5,
ribgo.causal_devolucion_mesa_6,
ribgo.causal_devolucion_mesa_7,
ribgo.causal_devolucion_mesa_8,
ribgo.causal_devolucion_mesa_9,
ribgo.causal_devolucion_mesa_10,
ribgo.FinalizadoMesa.createdAt as FinalizadoMesa_createdAt,
ribgo.FinalizadoMesa.timeLastChange as FinalizadoMesa_timeLastChange,
ribgo.FinalizadoMesa_active,
ribgo.UserFinalizadoMesa,
ribgo.RevisionTecnico.createdAt as RevisionTecnico_createdAt,
ribgo.RevisionTecnico.timeLastChange as RevisionTecnico_timeLastChange,
ribgo.RevisionTecnico_active,
ribgo.correccion_fechacreacion_tecnico_1,
ribgo.correccion_fechacreacion_tecnico_2,
ribgo.correccion_fechacreacion_tecnico_3,
ribgo.correccion_fechacreacion_tecnico_4,
ribgo.correccion_fechacreacion_tecnico_5,
ribgo.correccion_usuarios_tecnico_1,
ribgo.correccion_usuarios_tecnico_2,
ribgo.correccion_usuarios_tecnico_3,
ribgo.correccion_usuarios_tecnico_4,
ribgo.correccion_usuarios_tecnico_5,
ribgo.UserRevisionTecnico,
ribgo.DevueltoTecnico.createdAt as DevueltoTecnico_createdAt,
ribgo.DevueltoTecnico.timeLastChange as DevueltoTecnico_timeLastChange,
ribgo.UserDTC,
ribgo.causal_devolucion_DTC_1,
ribgo.causal_devolucion_DTC_2,
ribgo.causal_devolucion_DTC_3,
ribgo.causal_devolucion_DTC_4,
ribgo.causal_devolucion_DTC_5,
ribgo.causal_devolucion_DTC_6,
ribgo.causal_devolucion_DTC_7,
ribgo.causal_devolucion_DTC_8,
ribgo.causal_devolucion_DTC_9,
ribgo.causal_devolucion_DTC_10,
ribgo.nextStatusCode,
ribgo.FechaFinMesa.createdAt as FechaFinMesa_createdAt,
ribgo.FechaFinMesa.timeLastChange as FechaFinMesa_timeLastChange ,
ribgo.Status_Mesa_general,
ribgo.Status_Mesa_especifico,
ribgo.Proceso_Mesa,
ribgo.FechaFinMesaTime,
ribgo.PdtAsignacionProcesoExpres.createdAt as PdtAsignacionProcesoExpres_createdAt ,
ribgo.PdtAsignacionProcesoExpres.timeLastChange as PdtAsignacionProcesoExpres_timeLastChange,
ribgo.PdtAsignacionProfecional_active,
ribgo.Profecional.createdAt as Profecional_createdAt,
ribgo.Profecional.timeLastChange as Profecional_timeLastChange,
ribgo.Profecional_active,
ribgo.id_next,
ribgo.UserProfecional,
ribgo.Asigncacion,
ribgo.correccion_fechacreacion_profesional_1,
ribgo.correccion_fechacreacion_profesional_2,
ribgo.correccion_fechacreacion_profesional_3,
ribgo.correccion_fechacreacion_profesional_4,
ribgo.correccion_fechacreacion_profesional_5,
ribgo.correccion_usuarios_profesional_1,
ribgo.correccion_usuarios_profesional_2,
ribgo.correccion_usuarios_profesional_3,
ribgo.correccion_usuarios_profesional_4,
ribgo.correccion_usuarios_profesional_5,
ribgo.DeuveltoProfecional.createdAt as DeuveltoProfecional_createdAt,
ribgo.DeuveltoProfecional.timeLastChange as DeuveltoProfecional_timeLastChange,
ribgo.DeuveltoProfecional_active,
ribgo.UserDPL,
ribgo.Atribucion.createdAt as Atribucion_createdAt,
ribgo.Atribucion.timeLastChange as Atribucion_timeLastChange,
ribgo.Atribucion_active,
ribgo.UserATB,
ribgo.FinalizadoCredito.createdAt as FinalizadoCredito_createdAt,
ribgo.FinalizadoCredito.timeLastChange as FinalizadoCredito_timeLastChange,
ribgo.FinalizadoCredito_active,
ribgo.UserFCR,
ribgo.DevueltoAtribucion.createdAt as DevueltoAtribucion_createdAt,
ribgo.DevueltoAtribucion.timeLastChange as DevueltoAtribucion_timeLastChange,
ribgo.DevueltoAtribucion_active,
ribgo.UserDAT,
ribgo.Decidido.createdAt as Decidido_createdAt,
ribgo.Decidido.timeLastChange as Decidido_timeLastChange,
ribgo.Decidido_active,
ribgo.UserDCD,
ribgo.Tipo,
ribgo.Decision,
ribgo.URL_ACTA,
ribgo.Atribucion.timeLastChange as FECHA_ACTA,
ribgo.numero_acta as NUMERO_ACTA,
ribgo.causal_devolucion_PROFESIONAL_1,
ribgo.causal_devolucion_PROFESIONAL_2,
ribgo.causal_devolucion_PROFESIONAL_3,
ribgo.causal_devolucion_PROFESIONAL_4,
ribgo.causal_devolucion_PROFESIONAL_5,
ribgo.causal_devolucion_PROFESIONAL_6,
ribgo.causal_devolucion_PROFESIONAL_7,
ribgo.causal_devolucion_PROFESIONAL_8,
ribgo.causal_devolucion_PROFESIONAL_9,
ribgo.causal_devolucion_PROFESIONAL_10,
ribgo.RangoTurnoMesa,
ribgo.TurnoMesa,
ribgo.Status_Credito,
ribgo.Status_Proceso,
ribgo.Status_Respuesta,
ribgo.requestLog.createdAt as requestLog_createdAt,
ribgo.requestLog.timeLastChange as requestLog_timeLastChange, 
ribgo.code_request,
ribgo.Radicacion_observacion_analista,
ribgo.PdtCargueDocumentos_observacion_analista,
ribgo.PdtAsignacionMesa_observacion_analista,
ribgo.Mesa_observacion_analista,
ribgo.PdtAsignacionTecnico_observacion_analista,
ribgo.PdtAsignacionCredito_observacion_analista,
ribgo.PdtAsignacionProcesoExpres_observacion_analista,
ribgo.DevueltoPorMesa_observacion_analista,
ribgo.FinalizadoMesa_observacion_analista,
ribgo.RevisionTecnico_observacion_analista,
ribgo.RevisionTecnico_observaciones_adicionales,
ribgo.PdtAsignacionProfecional_observaciones_analista,
ribgo.Profecional_observaciones_analista,
ribgo.DeuveltoProfecional_observation_analista,
ribgo.Atribucion_observacion_analista,
ribgo.FinalizadoCredito_observacion_analista,
ribgo.DevueltoAtribucion_observacion_analista,
ribgo.Decidido_observacion_analista,
ribgo.codeAtribucion as codigo_decisor,
ribgo.Responsable_decisor,
ribgo.level_atribution,
ribgo.Tuberia as Departamento_evaluador,
ribgo.Ultimo_Estado,
ribgo.UserATBCode,
ribgo.UserCodeProfecional,
ribgo.Profecional_Correccion_createdAt,
ribgo.Profecional_Correccion_timeLastChange,
ribgo.Profecional_Correccion_User,
ribgo.Mesa_Correccion_createdAt,
ribgo.Mesa_Correccion_timeLastChange,
ribgo.Mesa_Correccion_User
FROM `ribgo-desarrollo.dimensiones.ribgo_cc` as ribgo;


CREATE OR REPLACE TABLE `dimensiones.ult_estado_radicado` AS  
  SELECT 
    id,
    radicacion_creadetAt,
    CASE
    WHEN Decidido_active IS NOT NULL THEN 'Decidido'
    WHEN DevueltoAtribucion_active IS NOT NULL THEN 'Devuelto Atribucion'
    WHEN FinalizadoCredito_active IS NOT NULL THEN 'Finalizado Credito'
    WHEN Atribucion_active IS NOT NULL THEN 'Atribucion'
    WHEN DeuveltoProfecional_active IS NOT NULL THEN 'Devuelto Profesional'
    WHEN Profecional_active IS NOT NULL THEN 'Profesional'
    WHEN PdtAsignacionProfecional_active IS NOT NULL THEN 'Pendiente Asignacion Profesional'
    WHEN RevisionTecnico_active IS NOT NULL THEN 'Revision Tecnico'
    WHEN FinalizadoMesa_active IS NOT NULL THEN 'Finalizado en Mesa'
    WHEN DevueltoPorMesa_active IS NOT NULL THEN 'Devuelto por Mesa' 
    WHEN PdtAsignacionProcesoExpres_active IS NOT NULL THEN 'Pendiente Asignacion Proceso Express'
    WHEN PdtAsignacionCredito_active IS NOT NULL THEN 'Pendiente Asignacion Credito Activo '
    WHEN PdtAsignacionTecnico_active IS NOT NULL THEN 'Pendiente Asignacion Tecnico'
    WHEN Mesa_active IS NOT NULL THEN 'Mesa'        
    WHEN PdtAsignacionMesa_active IS NOT NULL THEN 'Pendiente Asignacion Mesa'
    WHEN PdtCargueDocumentos_active IS NOT NULL THEN 'Pendiente Cargue Documentos' ELSE NULL END as ultimo_caso
    FROM `ribgo-desarrollo.dimensiones.ribgo_cc_pivot`;


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.json_table_RESUMEN_ATRIBUCION_PIVOT` AS
SELECT 
resumen_atribucion.RA_id_request,
resumen_atribucion.RA_NUMERO_DOCUMENTO,
SPLIT(STRING_AGG(resumen_atribucion.LIMITE_PORTAFOLIO	,","),",")   as LIMITE_PORTAFOLIO,
SPLIT(STRING_AGG(resumen_atribucion.TOTAL_VALOR_APROBADO	,","),",")   as TOTAL_VALOR_APROBADO,
SPLIT(STRING_AGG(resumen_atribucion.ENDEUDAMIENTO_CONSOLIDADO_RELACIONADO	,","),",")   as ENDEUDAMIENTO_CONSOLIDADO_RELACIONADO,
SPLIT(STRING_AGG(resumen_atribucion.TIPO_R		,","),",")   as TIPO_R	,
SPLIT(STRING_AGG(resumen_atribucion.RESPONSABLE_FIRMA_PAG	,","),",")   as RESPONSABLE_FIRMA_PAG,
SPLIT(STRING_AGG(resumen_atribucion.LISTA_DE_RESTRICCIONES	,","),",")   as LISTA_DE_RESTRICCIONES,
SPLIT(STRING_AGG(resumen_atribucion.CONDICIONES_ESPECIALES	,","),",")   as CONDICIONES_ESPECIALES,
SPLIT(STRING_AGG(resumen_atribucion.CAUSALES_NEGACION	,","),",")   as CAUSALES_NEGACION,
SPLIT(STRING_AGG(resumen_atribucion.OBSERVACIONES_ADICIONALES	,","),",")   as OBSERVACIONES_ADICIONALES

FROM  
`ribgo-desarrollo.dimensiones.json_table_RESUMEN_ATRIBUCION`  as resumen_atribucion
group by RA_id_request,
RA_NUMERO_DOCUMENTO
;


CREATE or replace table `ribgo-desarrollo.dimensiones.json_table_RESUMEN_ATRIBUCION_PIVOT` as 
select 
RA_id_request,
RA_NUMERO_DOCUMENTO,

IF( ARRAY_LENGTH(LIMITE_PORTAFOLIO)>=1 ,LIMITE_PORTAFOLIO[OFFSET(0)],null)  AS LIMITE_PORTAFOLIO_1,
IF( ARRAY_LENGTH(LIMITE_PORTAFOLIO)>=2 ,LIMITE_PORTAFOLIO[OFFSET(1)],null)  AS LIMITE_PORTAFOLIO_2,
IF( ARRAY_LENGTH(LIMITE_PORTAFOLIO)>=3 ,LIMITE_PORTAFOLIO[OFFSET(2)],null)  AS LIMITE_PORTAFOLIO_3,
IF( ARRAY_LENGTH(LIMITE_PORTAFOLIO)>=4 ,LIMITE_PORTAFOLIO[OFFSET(3)],null)  AS LIMITE_PORTAFOLIO_4,
IF( ARRAY_LENGTH(LIMITE_PORTAFOLIO)>=5 ,LIMITE_PORTAFOLIO[OFFSET(4)],null)  AS LIMITE_PORTAFOLIO_5,


SAFE_CAST(IF( ARRAY_LENGTH(TOTAL_VALOR_APROBADO)>=1 ,TOTAL_VALOR_APROBADO[OFFSET(0)],null) AS INT64) AS TOTAL_VALOR_APROBADO_1,
SAFE_CAST(IF( ARRAY_LENGTH(TOTAL_VALOR_APROBADO)>=2 ,TOTAL_VALOR_APROBADO[OFFSET(1)],null) AS INT64) AS TOTAL_VALOR_APROBADO_2,
SAFE_CAST(IF( ARRAY_LENGTH(TOTAL_VALOR_APROBADO)>=3 ,TOTAL_VALOR_APROBADO[OFFSET(2)],null) AS INT64) AS TOTAL_VALOR_APROBADO_3,
SAFE_CAST(IF( ARRAY_LENGTH(TOTAL_VALOR_APROBADO)>=4 ,TOTAL_VALOR_APROBADO[OFFSET(3)],null) AS INT64) AS TOTAL_VALOR_APROBADO_4,
SAFE_CAST(IF( ARRAY_LENGTH(TOTAL_VALOR_APROBADO)>=5 ,TOTAL_VALOR_APROBADO[OFFSET(4)],null) AS INT64) AS TOTAL_VALOR_APROBADO_5,


IF( ARRAY_LENGTH(ENDEUDAMIENTO_CONSOLIDADO_RELACIONADO)>=1 ,ENDEUDAMIENTO_CONSOLIDADO_RELACIONADO[OFFSET(0)],null)  AS ENDEUDAMIENTO_CONSOLIDADO_RELACIONADO_1,
IF( ARRAY_LENGTH(ENDEUDAMIENTO_CONSOLIDADO_RELACIONADO)>=2 ,ENDEUDAMIENTO_CONSOLIDADO_RELACIONADO[OFFSET(1)],null)  AS ENDEUDAMIENTO_CONSOLIDADO_RELACIONADO_2,
IF( ARRAY_LENGTH(ENDEUDAMIENTO_CONSOLIDADO_RELACIONADO)>=3 ,ENDEUDAMIENTO_CONSOLIDADO_RELACIONADO[OFFSET(2)],null)  AS ENDEUDAMIENTO_CONSOLIDADO_RELACIONADO_3,
IF( ARRAY_LENGTH(ENDEUDAMIENTO_CONSOLIDADO_RELACIONADO)>=4 ,ENDEUDAMIENTO_CONSOLIDADO_RELACIONADO[OFFSET(3)],null)  AS ENDEUDAMIENTO_CONSOLIDADO_RELACIONADO_4,
IF( ARRAY_LENGTH(ENDEUDAMIENTO_CONSOLIDADO_RELACIONADO)>=5 ,ENDEUDAMIENTO_CONSOLIDADO_RELACIONADO[OFFSET(4)],null)  AS ENDEUDAMIENTO_CONSOLIDADO_RELACIONADO_5,


IF( ARRAY_LENGTH(TIPO_R)>=1 ,TIPO_R[OFFSET(0)],null) AS TIPO_R_1,
IF( ARRAY_LENGTH(TIPO_R)>=2 ,TIPO_R[OFFSET(1)],null)  AS TIPO_R_2,
IF( ARRAY_LENGTH(TIPO_R)>=3 ,TIPO_R[OFFSET(2)],null)  AS TIPO_R_3,
IF( ARRAY_LENGTH(TIPO_R)>=4 ,TIPO_R[OFFSET(3)],null)  AS TIPO_R_4,
IF( ARRAY_LENGTH(TIPO_R)>=5 ,TIPO_R[OFFSET(4)],null)  AS TIPO_R_5,


SAFE_CAST(IF( ARRAY_LENGTH(RESPONSABLE_FIRMA_PAG)>=1 ,RESPONSABLE_FIRMA_PAG[OFFSET(0)],null) AS STRING) AS RESPONSABLE_FIRMA_PAG_1,
SAFE_CAST(IF( ARRAY_LENGTH(RESPONSABLE_FIRMA_PAG)>=2 ,RESPONSABLE_FIRMA_PAG[OFFSET(1)],null) AS STRING) AS RESPONSABLE_FIRMA_PAG_2,
SAFE_CAST(IF( ARRAY_LENGTH(RESPONSABLE_FIRMA_PAG)>=3 ,RESPONSABLE_FIRMA_PAG[OFFSET(2)],null) AS STRING) AS RESPONSABLE_FIRMA_PAG_3,
SAFE_CAST(IF( ARRAY_LENGTH(RESPONSABLE_FIRMA_PAG)>=4 ,RESPONSABLE_FIRMA_PAG[OFFSET(3)],null) AS STRING) AS RESPONSABLE_FIRMA_PAG_4,
SAFE_CAST(IF( ARRAY_LENGTH(RESPONSABLE_FIRMA_PAG)>=5 ,RESPONSABLE_FIRMA_PAG[OFFSET(4)],null) AS STRING) AS RESPONSABLE_FIRMA_PAG_5,


SAFE_CAST(IF( ARRAY_LENGTH(LISTA_DE_RESTRICCIONES)>=1 ,LISTA_DE_RESTRICCIONES[OFFSET(0)],null) AS STRING) AS LISTA_DE_RESTRICCIONES_1,
SAFE_CAST(IF( ARRAY_LENGTH(LISTA_DE_RESTRICCIONES)>=2 ,LISTA_DE_RESTRICCIONES[OFFSET(1)],null) AS STRING) AS LISTA_DE_RESTRICCIONES_2,
SAFE_CAST(IF( ARRAY_LENGTH(LISTA_DE_RESTRICCIONES)>=3 ,LISTA_DE_RESTRICCIONES[OFFSET(2)],null) AS STRING) AS LISTA_DE_RESTRICCIONES_3,
SAFE_CAST(IF( ARRAY_LENGTH(LISTA_DE_RESTRICCIONES)>=4 ,LISTA_DE_RESTRICCIONES[OFFSET(3)],null) AS STRING) AS LISTA_DE_RESTRICCIONES_4,
SAFE_CAST(IF( ARRAY_LENGTH(LISTA_DE_RESTRICCIONES)>=5 ,LISTA_DE_RESTRICCIONES[OFFSET(4)],null) AS STRING) AS LISTA_DE_RESTRICCIONES_5,


SAFE_CAST(IF( ARRAY_LENGTH(CONDICIONES_ESPECIALES)>=1 ,CONDICIONES_ESPECIALES[OFFSET(0)],null) AS STRING) AS CONDICIONES_ESPECIALES_1,
SAFE_CAST(IF( ARRAY_LENGTH(CONDICIONES_ESPECIALES)>=2 ,CONDICIONES_ESPECIALES[OFFSET(1)],null) AS STRING) AS CONDICIONES_ESPECIALES_2,
SAFE_CAST(IF( ARRAY_LENGTH(CONDICIONES_ESPECIALES)>=3 ,CONDICIONES_ESPECIALES[OFFSET(2)],null) AS STRING) AS CONDICIONES_ESPECIALES_3,
SAFE_CAST(IF( ARRAY_LENGTH(CONDICIONES_ESPECIALES)>=4 ,CONDICIONES_ESPECIALES[OFFSET(3)],null) AS STRING) AS CONDICIONES_ESPECIALES_4,
SAFE_CAST(IF( ARRAY_LENGTH(CONDICIONES_ESPECIALES)>=5 ,CONDICIONES_ESPECIALES[OFFSET(4)],null) AS STRING) AS CONDICIONES_ESPECIALES_5,


SAFE_CAST(IF( ARRAY_LENGTH(CAUSALES_NEGACION)>=1 ,CAUSALES_NEGACION[OFFSET(0)],null) AS STRING) AS CAUSALES_NEGACION_1,
SAFE_CAST(IF( ARRAY_LENGTH(CAUSALES_NEGACION)>=2 ,CAUSALES_NEGACION[OFFSET(1)],null) AS STRING) AS CAUSALES_NEGACION_2,
SAFE_CAST(IF( ARRAY_LENGTH(CAUSALES_NEGACION)>=3 ,CAUSALES_NEGACION[OFFSET(2)],null) AS STRING) AS CAUSALES_NEGACION_3,
SAFE_CAST(IF( ARRAY_LENGTH(CAUSALES_NEGACION)>=4 ,CAUSALES_NEGACION[OFFSET(3)],null) AS STRING) AS CAUSALES_NEGACION_4,
SAFE_CAST(IF( ARRAY_LENGTH(CAUSALES_NEGACION)>=5 ,CAUSALES_NEGACION[OFFSET(4)],null) AS STRING) AS CAUSALES_NEGACION_5,


SAFE_CAST(IF( ARRAY_LENGTH(OBSERVACIONES_ADICIONALES)>=1 ,OBSERVACIONES_ADICIONALES[OFFSET(0)],null) AS STRING) AS OBSERVACIONES_ADICIONALES_1,
SAFE_CAST(IF( ARRAY_LENGTH(OBSERVACIONES_ADICIONALES)>=2 ,OBSERVACIONES_ADICIONALES[OFFSET(1)],null) AS STRING) AS OBSERVACIONES_ADICIONALES_2,
SAFE_CAST(IF( ARRAY_LENGTH(OBSERVACIONES_ADICIONALES)>=3 ,OBSERVACIONES_ADICIONALES[OFFSET(2)],null) AS STRING) AS OBSERVACIONES_ADICIONALES_3,
SAFE_CAST(IF( ARRAY_LENGTH(OBSERVACIONES_ADICIONALES)>=4 ,OBSERVACIONES_ADICIONALES[OFFSET(3)],null) AS STRING) AS OBSERVACIONES_ADICIONALES_4,
SAFE_CAST(IF( ARRAY_LENGTH(OBSERVACIONES_ADICIONALES)>=5 ,OBSERVACIONES_ADICIONALES[OFFSET(4)],null) AS STRING) AS OBSERVACIONES_ADICIONALES_5

from `ribgo-desarrollo.dimensiones.json_table_RESUMEN_ATRIBUCION_PIVOT`;


create or replace table `ribgo-desarrollo.dimensiones.sabana_total` as
select ribgo_cc.*,data_entrada.*,ra_pivot.*,datos_salida.* from `ribgo-desarrollo.dimensiones.ribgo_cc_pivot` as ribgo_cc left join
`ribgo-desarrollo.dimensiones.json_table_INFORMACION_ENTRADA_HORIZONTAL` as data_entrada ON ribgo_cc.id=data_entrada.id_request left join 
`ribgo-desarrollo.dimensiones.json_table_RESUMEN_ATRIBUCION_PIVOT` as ra_pivot on data_entrada.id_request=ra_pivot.RA_id_request and data_entrada.NUMERO_DOCUMENTO=ra_pivot.RA_NUMERO_DOCUMENTO LEFT JOIN
`ribgo-desarrollo.dimensiones.json_table_INFORMACION_SALIDA_PIVOT` as datos_salida on  data_entrada.id_request=datos_salida.salida_id_request and
data_entrada.NUMERO_DOCUMENTO = datos_salida.salida_NUMERO_DOCUMENTO; 



CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.SABANA_TRAZA_TOTAL` as 
select
id as id_request,
Radicacion_creadetAt,
Radicacion_timeLastChange,
Radicacion_active,
cc_vendedor_asesor,
PdtCargueDocumentos_createdAt,
PdtCargueDocumentos_timeLastChange,
PdtCargueDocumentos_active,
PdtAsignacionMesa_createdAt,
PdtAsignacionMesa_timeLastChange,
PdtAsignacionMesa_active,
UserRadicacion,
CargoRadicacion,
correccion_fechacreacion_radicacion_1,
correccion_fechacreacion_radicacion_2,
correccion_fechacreacion_radicacion_3,
correccion_fechacreacion_radicacion_4,
correccion_fechacreacion_radicacion_5,
correccion_usuarios_radicacion_1,
correccion_usuarios_radicacion_2,
correccion_usuarios_radicacion_3,
correccion_usuarios_radicacion_4,
correccion_usuarios_radicacion_5,
Mesa_createdAt,
Mesa_timeLastChange,
UserMesa,
CargoMesa,
Mesa_active,
Causal,
correccion_fechacreacion_mesa_1,
correccion_fechacreacion_mesa_2,
correccion_fechacreacion_mesa_3,
correccion_fechacreacion_mesa_4,
correccion_fechacreacion_mesa_5,
correccion_usuarios_mesa_1,
correccion_usuarios_mesa_2,
correccion_usuarios_mesa_3,
correccion_usuarios_mesa_4,
correccion_usuarios_mesa_5,
PdtAsignacionTecnico_createdAt,
PdtAsignacionTecnico_timeLastChange,
PdtAsignacionTecnico_active,
UserPdtAsignacionTecnico,
PdtAsignacionCredito_createdAt,
PdtAsignacionCredito_timeLastChange,
PdtAsignacionCredito_active,
UserPdtAsignacionCredito,
PdtAsignacionProfecional_createdAt,
PdtAsignacionProfecional_timeLastChange,
PdtAsignacionProcesoExpres_active,
UserPdtAsignacionProcesoExpres,
DevueltoPorMesa_createdAt,
DevueltoPorMesa_timeLastChange,
DevueltoPorMesa_active,
UserDevueltoPorMesa,
causal_devolucion_mesa_1,
causal_devolucion_mesa_2,
causal_devolucion_mesa_3,
causal_devolucion_mesa_4,
causal_devolucion_mesa_5,
causal_devolucion_mesa_6,
causal_devolucion_mesa_7,
causal_devolucion_mesa_8,
causal_devolucion_mesa_9,
causal_devolucion_mesa_10,
FinalizadoMesa_createdAt,
FinalizadoMesa_timeLastChange,
FinalizadoMesa_active,
UserFinalizadoMesa,
RevisionTecnico_createdAt,
RevisionTecnico_timeLastChange,
RevisionTecnico_active,
UserRevisionTecnico,
DevueltoTecnico_createdAt,
DevueltoTecnico_timeLastChange,
UserDTC,
causal_devolucion_DTC_1,
causal_devolucion_DTC_2,
causal_devolucion_DTC_3,
causal_devolucion_DTC_4,
causal_devolucion_DTC_5,
causal_devolucion_DTC_6,
causal_devolucion_DTC_7,
causal_devolucion_DTC_8,
causal_devolucion_DTC_9,
causal_devolucion_DTC_10,
nextStatusCode,
FechaFinMesa_createdAt,
FechaFinMesa_timeLastChange,
Status_Mesa_general,
Status_Mesa_especifico,
Proceso_Mesa,
FechaFinMesaTime,
PdtAsignacionProcesoExpres_createdAt,
PdtAsignacionProcesoExpres_timeLastChange,
PdtAsignacionProfecional_active,
Profecional_createdAt,
Profecional_timeLastChange,
Profecional_active,
id_next,
UserProfecional,
Asigncacion,
correccion_fechacreacion_profesional_1,
correccion_fechacreacion_profesional_2,
correccion_fechacreacion_profesional_3,
correccion_fechacreacion_profesional_4,
correccion_fechacreacion_profesional_5,
correccion_usuarios_profesional_1,
correccion_usuarios_profesional_2,
correccion_usuarios_profesional_3,
correccion_usuarios_profesional_4,
correccion_usuarios_profesional_5,
DeuveltoProfecional_createdAt,
DeuveltoProfecional_timeLastChange,
UserDPL,
Atribucion_createdAt,
Atribucion_timeLastChange,
Atribucion_active,
UserATB,
FinalizadoCredito_createdAt,
FinalizadoCredito_timeLastChange,
FinalizadoCredito_active,
UserFCR,
DevueltoAtribucion_createdAt,
DevueltoAtribucion_timeLastChange,
DevueltoAtribucion_active,
UserDAT,
Decidido_createdAt,
Decidido_timeLastChange,
Decidido_active,
UserDCD,
Tipo,
Decision as  DECISION_SOLICITUD,
causal_devolucion_PROFESIONAL_1,
causal_devolucion_PROFESIONAL_2,
causal_devolucion_PROFESIONAL_3,
causal_devolucion_PROFESIONAL_4,
causal_devolucion_PROFESIONAL_5,
causal_devolucion_PROFESIONAL_6,
causal_devolucion_PROFESIONAL_7,
causal_devolucion_PROFESIONAL_8,
causal_devolucion_PROFESIONAL_9,
causal_devolucion_PROFESIONAL_10,
RangoTurnoMesa,
TurnoMesa,
Status_Credito,
Status_Proceso,
Status_Respuesta,
requestLog_createdAt,
requestLog_timeLastChange,
code_request,
PdtCargueDocumentos_observacion_analista,
PdtAsignacionMesa_observacion_analista,
Mesa_observacion_analista,
PdtAsignacionTecnico_observacion_analista,
PdtAsignacionCredito_observacion_analista,
PdtAsignacionProcesoExpres_observacion_analista,
DevueltoPorMesa_observacion_analista,
FinalizadoMesa_observacion_analista,
RevisionTecnico_observacion_analista,
RevisionTecnico_observaciones_adicionales,
PdtAsignacionProfecional_observaciones_analista,
Profecional_observaciones_analista,
DeuveltoProfecional_observation_analista,
Atribucion_observacion_analista,
FinalizadoCredito_observacion_analista,
DevueltoAtribucion_observacion_analista,
Decidido_observacion_analista,
id_request as id_request2,
NUMERO_DOCUMENTO,
CONFORMA_GRUPO_FINANCIERO,
NOMBRE_GRUPO_FINANCIERO,
NUMERO_EMPRESAS,
OFICINA_RADICACION,
SUCURSAL,
REGIONAL,
ANO_AL_QUE_CORRESPONDEN_LAS_VENTAS,
CERTIFICADO_CLIENTE_VINCULADO_360,
CIIU,
DETALLE_CIIU,
ANO_CIERRE,
ACTIVOS_ANO,
PASIVO_ANO,
PATRIMONIO_ANO,
ANO_CORTE,
ACTIVO_CORTE,
INGRESOS_CORTE,
PERIODO_DIAS,
ESTRATEGIA,
ESTRATEGIA_BASE,
TIPO_PRODUCTOR,
ID_CONTADOR,
NOMBRE_CONTADOR_O_REVISOR,
NOMBRE_EMPRESA,
PESO_DEL_DEPARTAMENTO_EVALUADOR,
SCACS,
SEGMENTO_DEPARTAMENTO_EVALUADOR,
TIPO_DOCUMENTO,
VENTAS_ULTIMO_ANO_COL,
NOMBRE_CONTACTO_1 as NOMBRE_CONTACTO,
CELULAR_CONTACTO_1 AS CELULAR_CONTACTO,
NUMERO_TOTAL_DE_EMPLEADOS_1 AS NUMERO_TOTAL_DE_EMPLEADOS,
SALARIO_PROMEDIO_EN_PESOS_1 AS SALARIO_PROMEDIO_EN_PESOS,
FECHA_CONSTITUCION_1 AS FECHA_CONSTITUCION,
INFORMACION_TECNICA_1 AS INFORMACION_TECNICA,
PLANIFICADOR_1 AS PLANIFICADOR,
ACTIVIDAD_AGROPECUARIA_1 AS ACTIVIDAD_AGROPECUARIA,
DETALLE_ACTIVIDAD_AGROPRODUCTIVA_1 AS DECALLE_ACTIVIDAD_AGROPRODUCTIVA,
SECTOR_1 AS SECTOR,
CALIFICACION_R_1 AS CALIFICACION_R,
TIPO_SOCIEDAD_1 AS TIPO_SOCIEDAD,
cedula_codeudor_1,
cedula_codeudor_2,
cedula_codeudor_3,
cedula_codeudor_4,
cedula_codeudor_5,
cedula_codeudor_6,
cedula_codeudor_7,
cedula_codeudor_8,
cedula_codeudor_9,
cedula_codeudor_10,
cedula_titular_1,
cedula_titular_2,
cedula_titular_3,
cedula_titular_4,
cedula_titular_5,
cedula_titular_6,
cedula_titular_7,
cedula_titular_8,
cedula_titular_9,
cedula_titular_10,
RELEVO_GENERACIONAL_PERSONA_NATURAL_1 AS RELEVO_GENERACIONAL_PERSONA_NATURAL,
ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD_1 AS ORIGEN_DE_LA_EXPERIENCIA_EN_LA_ACTIVIDAD,
RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES_1 AS RNECESIDAD_DE_INVERSION_EN_MAQUINARIA_Y_O_INSTALACIONES,
PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO_1 AS PRINCIPAL_CAMBIO_DEL_NEGOCIO_EN_EL_ULTIMO_ANO,
RELEVO_GENERACIONAL_PERSONA_JURIDICA_1 AS RELEVO_GENERACIONAL_PERSONA_JURIDICA,
LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON_1 AS  LAS_INSTALACIONES_DONDE_OPERA_LA_EMPRESA_SON,
PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO_1 AS PRODUCTOS_SUSTITUTOS_ENTORNO_ENTORNO_DEL_MERCADO,
ENTORNO_UBICACION_DEL_NEGOCIO_1 AS ENTORNO_UBICACION_DEL_NEGOCIO,
EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION_1 AS EXPERIENCIA_EN_LA_ACTIVIDAD_ADMINISTRACION,
PRODUCTO_1,
PRODUCTO_2,
PRODUCTO_3,
PRODUCTO_4,
PRODUCTO_5,
IMPORTA_1 AS IMPORTA,
EXPORTA_1 AS EXPORTA,
MERCADO_1,
MERCADO_2,
MERCADO_3,
MERCADO_4,
MERCADO_5,
PROVEDOR_1,
PROVEDOR_2,
PROVEDOR_3,
PROVEDOR_4,
PROVEDOR_5,
PAISES_A_LOS_CUALES_IMPORTA_1 AS PAISES_A_LOS_CUALES_IMPORTA,
MONTOS_ANUALES_DE_IMPORTACION_1 AS MONTOS_ANUALES_DE_IMPORTACION,
PAISES_A_LOS_CUALES_EXPORTA_1 AS PAISES_A_LOS_CUAES_EXPORTA,
MONTOS_ANUALES_DE_EXPORTACION_1 AS MONTOS_ANUALS_DE_EXPORTACION,
NOMBRE_AVALISTA_1,
NOMBRE_AVALISTA_2,
NOMBRE_AVALISTA_3,
NOMBRE_AVALISTA_4,
NOMBRE_AVALISTA_5,
NOMBRE_AVALISTA_6,
NOMBRE_AVALISTA_7,
NOMBRE_AVALISTA_8,
NOMBRE_AVALISTA_9,
NOMBRE_AVALISTA_10,
DOCUMENTO_AVALISTA_1,
DOCUMENTO_AVALISTA_2,
DOCUMENTO_AVALISTA_3,
DOCUMENTO_AVALISTA_4,
DOCUMENTO_AVALISTA_5,
DOCUMENTO_AVALISTA_6,
DOCUMENTO_AVALISTA_7,
DOCUMENTO_AVALISTA_8,
DOCUMENTO_AVALISTA_9,
DOCUMENTO_AVALISTA_10,
RA_id_request,
RA_NUMERO_DOCUMENTO,
LIMITE_PORTAFOLIO_1 AS LIMITE_PORTAFOLIO,
TOTAL_VALOR_APROBADO_1 AS TOTAL_VALOR_APROBADO,
ENDEUDAMIENTO_CONSOLIDADO_RELACIONADO_1 AS ENDEUDAMIENTO_CONSOLIDADO_RELACIONADO,
TIPO_R_1 AS TIPO_R,
RESPONSABLE_FIRMA_PAG_1 AS RESPONSABLE_FIRMA_PAG,
LISTA_DE_RESTRICCIONES_1 AS LISTA_DE_RESTRICCIONES,
CONDICIONES_ESPECIALES_1 AS CONDICIONES_ESPECIALES,
CAUSALES_NEGACION_1,
CAUSALES_NEGACION_2,
CAUSALES_NEGACION_3,
CAUSALES_NEGACION_4,
CAUSALES_NEGACION_5,
OBSERVACIONES_ADICIONALES_1 AS OBSERVACIONES_ADICIONALES,
salida_id_request,
salida_NUMERO_DOCUMENTO,
PRODUCTO,
OBSERVACIONES_COMERCIALES,
CODIGO_BASE,
TIPO_PRODUCTO,
MODALIDAD_PRODUCTO,
CODIGO_PRODUCTO,
MONTO_PRODUCTO,
PLAZO_PRODUCTO,
PERIODO_GRACIA_PRODUCTO,
DETALLE_GARANTIA_AVALISTA_OTRA_PRODUCTO,
VALOR_APROBADO,
VIGENCIA_HASTA,
DECISION_JSON as DECISION_PRODUCTO,
FUENTES_DE_PAGO_PRODUCTO,
OTRA_FUENTE_DE_PAGO_PRODUCTO,
DESTINO_RECURSOS_PRODUCTO,
MONTO_TOTAL_INVERSION_PRODUCTO,
APORTE_RECURSOS_PROPIOS_Y_O_SOCIOS_PRODUCTO,
TIPO_DE_FONDEO_PRODUCTO,
DETALLE_APORTES_PROPIOS_PRODUCTO,
TASA_PONDERADA,
NUMERO_DE_OBLIGACIONES_RECOGER,
AMORTIZACION_K,
AMORTIZACION_I,
REQUIERE_TECNICO,
PUNTAJE_CIFIN,
CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO,
TOTAL_SOLICITADO_CLIENTE,
TOTAL_VALOR_APROBADO_CLIENTE,
DECISION_CLIENTE,
CLIENTE_SOLICITA_PLAZO_1 AS CLIENTE_SOLICITA,
GARANTIA_PRODUCTO_1 AS GARANTIA_PRODUCTO,
URL_ACTA,
NUMERO_ACTA,
FECHA_ACTA,
ultimo_estado as ULTIMA_ETAPA_CASO,
codigo_decisor,
Responsable_decisor,
level_atribution,
Departamento_evaluador,
UserATB as Usuario_Atribucion_decisor,
Profecional_Correccion_createdAt,
Profecional_Correccion_timeLastChange,
Profecional_Correccion_User,
Mesa_Correccion_createdAt,
Mesa_Correccion_timeLastChange,
Mesa_Correccion_User

from `ribgo-desarrollo.dimensiones.sabana_total`;


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.SABANA_CONSOLIDADA_ENTRADA` as 
select 
id as id_request,
Radicacion_creadetAt as Marca_temporal,
CONFORMA_GRUPO_FINANCIERO,
NOMBRE_GRUPO_FINANCIERO,
NUMERO_EMPRESAS,
TIPO_DOCUMENTO,
NUMERO_DOCUMENTO,
NOMBRE_EMPRESA,
cedula_titular_1 as TITULAR_1,
cedula_codeudor_1 as CEDULA_1,
cedula_titular_2 as TITULAR_2,
cedula_codeudor_2 as CEDULA_2,
cedula_titular_3 as TITULAR_3,
cedula_codeudor_3 as CEDULA_3,
cedula_titular_4 as TITULAR_4,
cedula_codeudor_4 as CEDULA_4,
cedula_titular_5 as TITULAR_5,
cedula_codeudor_5 as CEDULA_5,
cedula_titular_6 as TITULAR_6,
cedula_codeudor_6 as CEDULA_6,
VENTAS_ULTIMO_ANO_COL as VENTAS_ULTIMO_ANO,
ANO_AL_QUE_CORRESPONDEN_LAS_VENTAS,
NOMBRE_CONTADOR_O_REVISOR as NOMBRE_CONTADOR,
ID_CONTADOR AS ID_CONTADOR,
CERTIFICADO_CLIENTE_VINCULADO_360,
CIIU,
DETALLE_CIIU,
ESTRATEGIA,
OFICINA_RADICACION,
SUCURSAL,
REGIONAL AS REGION,
DEPARTAMENTO_EVALUADOR_NOMBRE,
DEPARTAMENTO_EVALUADOR_SEGMENTO,
DEPARTAMENTO_EVALUADOR_WEIGHT,
SEGMENTO_DEPARTAMENTO_EVALUADOR AS SEGMENTO,
NOMBRE_CONTACTO_1 AS NOMBRE_CONTACTO,
CELULAR_CONTACTO_1 AS CELULAR_CONTACTO,
CORREO_CONTACTO_1 AS CORREO_CONTACTO,
NUMERO_TOTAL_DE_EMPLEADOS_1 AS NUMERO_EMPLEADOS,
SALARIO_PROMEDIO_EN_PESOS_1 AS SALARIO_PROMEDIO_EN_PESOS,
SECTOR_1 AS SECTOR,
ACTIVIDAD_AGROPECUARIA_1 AS ACTIVIDAD,
CALIFICACION_R_1 AS CALIFIACION_PROFESIONAL,
IMPORTA_1 AS IMPORTA,
PAISES_A_LOS_CUALES_IMPORTA_1 AS PAISES_A_LOS_CAULES_IMPORTA,
MONTOS_ANUALES_DE_IMPORTACION_1 AS MONTOS_ANUALES_DE_IMPORTACION,
EXPORTA_1 AS EXPORTA,
PAISES_A_LOS_CUALES_EXPORTA_1 AS PAISES_A_LOS_CUALES_EXPORTA,
MONTOS_ANUALES_DE_EXPORTACION_1 AS MONTOS_ANUALES_DE_EXPORTACION,
PRODUCTO_1 AS MERCADO_PRODUCTO_1,
PRODUCTO_2 AS MERCADO_PRODUCTO_2,
PRODUCTO_3 AS MERCADO_PRODUCTO_3,
PRODUCTO_4 AS MERCADO_PRODUCTO_4,
MERCADO_1 AS MERCADO_CLIENTE_1,
MERCADO_2 AS MERCADO_CLIENTE_2,
MERCADO_3 AS MERCADO_CLIENTE_3,
MERCADO_4 AS MERCADO_CLIENTE_4,
PROVEDOR_1 AS MERCADO_PROVEDOR_1,
PROVEDOR_2 AS MERCADO_PROVEDOR_2,
PROVEDOR_3 AS MERCADO_PROVEDOR_3,
PROVEDOR_4 AS MERCADO_PROVEDOR_4,
REQUIERE_TECNICO,
PUNTAJE_CIFIN,
CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO,
OBSERVACIONES_COMERCIALES AS OBSERVACIONES_COMERCIALES,
CLIENTE_SOLICITA_PLAZO_1 AS CLIENTE_SOLICITA_PLAZO,
PRODUCTO AS PRODUCTO,
TIPO_PRODUCTO,
MODALIDAD_PRODUCTO,
CODIGO_PRODUCTO,
MONTO_PRODUCTO,
PLAZO_PRODUCTO,
PERIODO_GRACIA_PRODUCTO,
DETALLE_GARANTIA_AVALISTA_OTRA_PRODUCTO,
FUENTES_DE_PAGO_PRODUCTO,
OTRA_FUENTE_DE_PAGO_PRODUCTO,
DESTINO_RECURSOS_PRODUCTO,
DESTINO,
MONTO_TOTAL_INVERSION_PRODUCTO,
APORTE_RECURSOS_PROPIOS_Y_O_SOCIOS_PRODUCTO,
TIPO_DE_FONDEO_PRODUCTO,
GARANTIA_PRODUCTO_1,
GARANTIA_PRODUCTO_2,
GARANTIA_PRODUCTO_3,
GARANTIA_PRODUCTO_4,
GARANTIA_PRODUCTO_5,
GARANTIA_PRODUCTO_6,
GARANTIA_PRODUCTO_7,
GARANTIA_PRODUCTO_8,
GARANTIA_PRODUCTO_9,
GARANTIA_PRODUCTO_10,
UserRadicacion AS CORREO_ASESOR_RADICA,
UserMesa AS ASIGNADO_MESA,
PESO_DEL_DEPARTAMENTO_EVALUADOR AS PESO,
Mesa_active AS ESTADO_MESA,
Mesa_createdAt AS FECHA_ASIGNACION_MESA,
causal_devolucion_mesa_1,
causal_devolucion_mesa_2,
causal_devolucion_mesa_3,
causal_devolucion_mesa_4,
causal_devolucion_mesa_5,
causal_devolucion_mesa_6,
SEGMENTO_DEPARTAMENTO_EVALUADOR ,
UserProfecional AS PROFESIONAL_ASIGNADO,
Profecional_createdAt AS FECHA_PROFESIONAL_ASIGNADO,
Profecional_active AS ESTADO_PROFESIONAL,
causal_devolucion_PROFESIONAL_1,
causal_devolucion_PROFESIONAL_2,
causal_devolucion_PROFESIONAL_3,
causal_devolucion_PROFESIONAL_4,
causal_devolucion_PROFESIONAL_5,
causal_devolucion_PROFESIONAL_6,
ASIGNCACION AS ASIGNACION_PRIORIDAD,
UserProfecional AS NOMBRE_ANALISTA_RESPONSABLE,
TIPO_SOCIEDAD_1 AS TIPO_SOCIEDAD,
FECHA_CONSTITUCION_1 AS FECHA_CONSTITUCION,
ACTIVIDAD_AGROPECUARIA_1 AS ACTIVIDAD_AGROPECURIA,
ANO_CIERRE,
ACTIVOS_ANO,
PASIVO_ANO,
PATRIMONIO_ANO,
ANO_CORTE,
ACTIVO_CORTE,
INGRESOS_CORTE,
PERIODO_DIAS,
ESTRATEGIA_BASE,
causal_devolucion_DTC_1,
causal_devolucion_DTC_2,
causal_devolucion_DTC_3,
causal_devolucion_DTC_4,
causal_devolucion_DTC_5,
causal_devolucion_DTC_6,
UserDPL AS USER_PROFESIONAL,
NOMBRE_AVALISTA_1,
NOMBRE_AVALISTA_2,
NOMBRE_AVALISTA_3,
NOMBRE_AVALISTA_4,
NOMBRE_AVALISTA_5,
NOMBRE_AVALISTA_6,
NOMBRE_AVALISTA_7,
NOMBRE_AVALISTA_8,
NOMBRE_AVALISTA_9,
NOMBRE_AVALISTA_10,
DOCUMENTO_AVALISTA_1,
DOCUMENTO_AVALISTA_2,
DOCUMENTO_AVALISTA_3,
DOCUMENTO_AVALISTA_4,
DOCUMENTO_AVALISTA_5,
DOCUMENTO_AVALISTA_6,
DOCUMENTO_AVALISTA_7,
DOCUMENTO_AVALISTA_8,
DOCUMENTO_AVALISTA_9,
DOCUMENTO_AVALISTA_10,
correccion_fechacreacion_Mesa_1,
correccion_fechacreacion_Mesa_2,
correccion_fechacreacion_Mesa_3,
correccion_fechacreacion_Mesa_4,
correccion_fechacreacion_Mesa_5,
correccion_usuarios_mesa_1,
correccion_usuarios_mesa_2,
correccion_usuarios_mesa_3,
correccion_usuarios_mesa_4,
correccion_usuarios_mesa_5,
correccion_fechacreacion_profesional_1,
correccion_fechacreacion_profesional_2,
correccion_fechacreacion_profesional_3,
correccion_fechacreacion_profesional_4,
correccion_fechacreacion_profesional_5,
correccion_usuarios_profesional_1,
correccion_usuarios_profesional_2,
correccion_usuarios_profesional_3,
correccion_usuarios_profesional_4,
correccion_usuarios_profesional_5,
correccion_fechacreacion_radicacion_1,
correccion_fechacreacion_radicacion_2,
correccion_fechacreacion_radicacion_3,
correccion_fechacreacion_radicacion_4,
correccion_fechacreacion_radicacion_5,
correccion_usuarios_radicacion_1,
correccion_usuarios_radicacion_2,
correccion_usuarios_radicacion_3,
correccion_usuarios_radicacion_4,
correccion_usuarios_radicacion_5,
TOTAL_VALOR_APROBADO_1 AS TOTAL_VALOR_APROVADO,
ENDEUDAMIENTO_CONSOLIDADO_RELACIONADO_1 AS ENDEUDAMIENTO_CONSOLIDADO_RELACIONADO,
Atribucion_createdAt AS FECHA_ASIGNACION_ATRIBUCION,
Atribucion_active AS ESTADO_ATRIBUCION,
UserATB AS PROFESIONAL_ATRIBUCION,
UserRevisionTecnico AS TECNICO_ASIGNADO,
RevisionTecnico_active AS ESTADO_TECNICO,
RevisionTecnico_timeLastChange AS FECHA_RESPUESTA_TECNICO,
correccion_fechacreacion_tecnico_1,
correccion_fechacreacion_tecnico_2,
correccion_fechacreacion_tecnico_3,
correccion_fechacreacion_tecnico_4,
correccion_fechacreacion_tecnico_5,
correccion_usuarios_tecnico_1,
correccion_usuarios_tecnico_2,
correccion_usuarios_tecnico_3,
correccion_usuarios_tecnico_4,
correccion_usuarios_tecnico_5,
URL_ACTA,
NUMERO_ACTA,
FECHA_ACTA,
ultimo_estado as ULTIMA_ETAPA_CASO,
DECISION_CLIENTE,
DECISION_JSON as DECISION_PRODUCTO,
Radicacion_observacion_analista,
PdtCargueDocumentos_observacion_analista,
PdtAsignacionMesa_observacion_analista,
Mesa_observacion_analista,
PdtAsignacionTecnico_observacion_analista,
PdtAsignacionCredito_observacion_analista,
PdtAsignacionProcesoExpres_observacion_analista,
DevueltoPorMesa_observacion_analista,
FinalizadoMesa_observacion_analista,
RevisionTecnico_observacion_analista,
RevisionTecnico_observaciones_adicionales,
PdtAsignacionProfecional_observaciones_analista,
Profecional_observaciones_analista,
DeuveltoProfecional_observation_analista,
Atribucion_observacion_analista,
FinalizadoCredito_observacion_analista,
DevueltoAtribucion_observacion_analista,
Decidido_observacion_analista,
Radicacion_timeLastChange,
PdtCargueDocumentos_timeLastChange,
PdtCargueDocumentos_createdAt,
PdtAsignacionMesa_createdAt,
PdtAsignacionMesa_timeLastChange,
Mesa_createdAt,
Mesa_timeLastChange,
PdtAsignacionTecnico_createdAt,
PdtAsignacionTecnico_timeLastChange,
PdtAsignacionCredito_createdAt,
PdtAsignacionCredito_timeLastChange,
PdtAsignacionProfecional_createdAt,
PdtAsignacionProfecional_timeLastChange,
DevueltoPorMesa_createdAt,
DevueltoPorMesa_timeLastChange,
FinalizadoMesa_createdAt,
FinalizadoMesa_timeLastChange,
RevisionTecnico_createdAt,
RevisionTecnico_timeLastChange,
DevueltoTecnico_createdAt,
DevueltoTecnico_timeLastChange,
FechaFinMesa_createdAt,
FechaFinMesa_timeLastChange,
PdtAsignacionProcesoExpres_createdAt,
PdtAsignacionProcesoExpres_timeLastChange,
Profecional_createdAt,
Profecional_timeLastChange,
DeuveltoProfecional_createdAt,
DeuveltoProfecional_timeLastChange,
Atribucion_createdAt,
Atribucion_timeLastChange,
FinalizadoCredito_createdAt,
FinalizadoCredito_timeLastChange,
DevueltoAtribucion_createdAt,
DevueltoAtribucion_timeLastChange,
Decidido_createdAt,
Decidido_timeLastChange,
requestLog_timeLastChange,
cc_vendedor_asesor,
codigo_decisor,
Responsable_decisor,
level_atribution,
Departamento_evaluador,
UserATB as Usuario_Atribucion_decisor,
UserATBCode as codigo_Atribucion_decisor,
UserProfecional as Profesional_da_alcance,
UserCodeProfecional as Codigo_profesional,
Tipo,
Profecional_Correccion_createdAt,
Profecional_Correccion_timeLastChange,
Profecional_Correccion_User,
Mesa_Correccion_createdAt,
Mesa_Correccion_timeLastChange,
Mesa_Correccion_User
from `ribgo-desarrollo.dimensiones.sabana_total`;



CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.SABANA_CONSOLIDADA_SALIDA` AS 
select 
id as id_request,
TIPO_DOCUMENTO,
NUMERO_DOCUMENTO,
CODIGO_PRODUCTO,
PLAZO_PRODUCTO AS PLAZO,
DESTINO AS DESTINO,
FUENTES_DE_PAGO_PRODUCTO AS FUENTE_PAGO,
DECISION_JSON AS DECISION_PRODUCTO,
Decidido_timeLastChange AS FECHA_DECISION,
GARANTIA_PRODUCTO_1,
GARANTIA_PRODUCTO_2,
GARANTIA_PRODUCTO_3,
GARANTIA_PRODUCTO_4,
GARANTIA_PRODUCTO_5,
GARANTIA_PRODUCTO_6,
GARANTIA_PRODUCTO_7,
GARANTIA_PRODUCTO_8,
GARANTIA_PRODUCTO_9,
GARANTIA_PRODUCTO_10,
DETALLE_GARANTIA_AVALISTA_OTRA_PRODUCTO,
NOMBRE_EMPRESA AS NOMBRE_CLIENTE,
CIIU,
TIPO_PRODUCTO,
MODALIDAD_PRODUCTO,
MONTO_PRODUCTO,
PLAZO_PRODUCTO,
REQUIERE_TECNICO,
PUNTAJE_CIFIN,
CERTIFICO_CUMPLIMIENTO_Y_VALIDACION_DE_POLITICAS_Y_PROCEDIMIENTO,
SEGMENTO_DEPARTAMENTO_EVALUADOR,
ANO_CORTE AS FECHA_CORTE,
ACTIVO_CORTE,
INGRESOS_CORTE,
PERIODO_DIAS,
PASIVO_ANO,
PATRIMONIO_ANO,
SECTOR_1 AS SECTOR,
ACTIVIDAD,
LIMITE_PORTAFOLIO_1 AS LIMITE_PORTAFOLIO,
OFICINA_RADICACION AS OFICINA,
Decidido_timeLastChange AS HORA_DECISION,
Decision AS DECISION_SOLICITUD,
DECISION_CLIENTE,
AMORTIZACION_i,
AMORTIZACION_K,
RESPONSABLE_FIRMA_PAG_1  ,
LISTA_DE_RESTRICCIONES_1,
CONDICIONES_ESPECIALES_1,
OBSERVACIONES_ADICIONALES_1 AS OBSERVACIONES_ACTA,
OBSERVACIONES_COMERCIALES,
CAUSALES_NEGACION_1,
CAUSALES_NEGACION_2,
CAUSALES_NEGACION_3,
CAUSALES_NEGACION_4,
CAUSALES_NEGACION_5,
PRODUCTO,
TIPO_R_1 as TIPO_R,
CALIFICACION_R_1 as CALIFICACION_PROFESIONAL,
VIGENCIA_HASTA as VIGENCIA,
INFORMACION_TECNICA_1 AS INFORMACION_TECNICA,
TIPO_PRODUCTOR AS PRODUCTOR,
PLANIFICADOR_1 AS PLANIFICADOR,
ACTIVIDAD_AGROPECUARIA_1 AS ACTIVIDAD_AGROPECUARIA,
TASA_PONDERADA,
NUMERO_DE_OBLIGACIONES_RECOGER,
URL_ACTA,
NUMERO_ACTA,
FECHA_ACTA,
NOMBRE_AVALISTA_1,
NOMBRE_AVALISTA_2,
NOMBRE_AVALISTA_3,
NOMBRE_AVALISTA_4,
NOMBRE_AVALISTA_5,
NOMBRE_AVALISTA_6,
NOMBRE_AVALISTA_7,
NOMBRE_AVALISTA_8,
NOMBRE_AVALISTA_9,
NOMBRE_AVALISTA_10,
DOCUMENTO_AVALISTA_1,
DOCUMENTO_AVALISTA_2,
DOCUMENTO_AVALISTA_3,
DOCUMENTO_AVALISTA_4,
DOCUMENTO_AVALISTA_5,
DOCUMENTO_AVALISTA_6,
DOCUMENTO_AVALISTA_7,
DOCUMENTO_AVALISTA_8,
DOCUMENTO_AVALISTA_9,
DOCUMENTO_AVALISTA_10,
cedula_codeudor_1,
cedula_codeudor_2,
cedula_codeudor_3,
cedula_codeudor_4,
cedula_codeudor_5,
cedula_codeudor_6,
cedula_codeudor_7,
cedula_codeudor_8,
cedula_codeudor_9,
cedula_codeudor_10,
cedula_titular_1,
cedula_titular_2,
cedula_titular_3,
cedula_titular_4,
cedula_titular_5,
cedula_titular_6,
cedula_titular_7,
cedula_titular_8,
cedula_titular_9,
cedula_titular_10,
VALOR_APROBADO as VALOR_APROBADO_PRODUCTO,
TOTAL_VALOR_APROBADO_CLIENTE,
MONTO_TOTAL_VALOR_APROBADO,
MONTO_TOTAL_DE_RESPONSABILIDAD,
MONTO_TOTAL_VALOR_APROBADO_OPERACIONES,
ultimo_estado as ULTIMA_ETAPA_CASO,
codigo_decisor,
level_atribution,
Responsable_decisor,
Departamento_evaluador,
UserATB as Usuario_Atribucion_decisor,
Tipo,
cc_vendedor_asesor,
Profecional_Correccion_createdAt,
Profecional_Correccion_timeLastChange,
Profecional_Correccion_User,
Mesa_Correccion_createdAt,
Mesa_Correccion_timeLastChange,
Mesa_Correccion_User
from `ribgo-desarrollo.dimensiones.sabana_total`;





CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.RESUMEN_DECISIONES` AS
Select DISTINCT id_request,DECISION_PRODUCTO,
SUM(case when DECISION_PRODUCTO="APROBADA" THEN 1 ELSE 0 END) as aprobada,
SUM(case when DECISION_PRODUCTO="NEGADA" THEN 1 ELSE 0 END) as negada,
COUNT(*) as conteo_decisiones
FROM `ribgo-desarrollo.dimensiones.SABANA_CONSOLIDADA_ENTRADA`
group by  id_request,DECISION_PRODUCTO;

CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.casos_a_mostrar` AS
select id_request from `ribgo-desarrollo.dimensiones.RESUMEN_DECISIONES`
where aprobada=conteo_decisiones or negada = conteo_decisiones;



CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.SABANA_CONSOLIDADA_ENTRADA` AS SELECT DISTINCT * FROM 
`ribgo-desarrollo.dimensiones.SABANA_CONSOLIDADA_ENTRADA`;


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.SABANA_CONSOLIDADA_SALIDA` AS SELECT DISTINCT * FROM 
`ribgo-desarrollo.dimensiones.SABANA_CONSOLIDADA_SALIDA`;


CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.SABANA_CONSOLIDADA_ENTRADA_SIN_CASOS_NEGADOS`
AS
select * FROM `ribgo-desarrollo.dimensiones.SABANA_CONSOLIDADA_ENTRADA` where id_request in (select * from `ribgo-desarrollo.dimensiones.casos_a_mostrar` );

CREATE OR REPLACE TABLE `ribgo-desarrollo.dimensiones.SABANA_CONSOLIDADA_SALIDA_SIN_CASOS_NEGADOS`
ASf
select * FROM `ribgo-desarrollo.dimensiones.SABANA_CONSOLIDADA_SALIDA` where id_request in (select * from `ribgo-desarrollo.dimensiones.casos_a_mostrar` );


create OR REPLACE TABLE `ribgo-desarrollo.dimensiones.TRAZA_RIBGO` AS SELECT * FROM 
`ribgo-desarrollo.dimensiones.ribgo_cc`;



